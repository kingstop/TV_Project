// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_game_db.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "msg_game_db.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace message {

namespace {

const ::google::protobuf::Descriptor* MsgReqHeroDataGS2DB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgReqHeroDataGS2DB_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSaveDataGS2DB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSaveDataGS2DB_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgRecordSqlGS2DB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgRecordSqlGS2DB_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgReqCharacterDataGS2DB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgReqCharacterDataGS2DB_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgCharacterDataDB2GSACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgCharacterDataDB2GSACK_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgReqCharacterIDGS2DB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgReqCharacterIDGS2DB_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgCharacterIDDB2GSACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgCharacterIDDB2GSACK_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgNeedCreateCharacterDB2GS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgNeedCreateCharacterDB2GS_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_msg_5fgame_5fdb_2eproto() {
  protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "msg_game_db.proto");
  GOOGLE_CHECK(file != NULL);
  MsgReqHeroDataGS2DB_descriptor_ = file->message_type(0);
  static const int MsgReqHeroDataGS2DB_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqHeroDataGS2DB, account_),
  };
  MsgReqHeroDataGS2DB_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgReqHeroDataGS2DB_descriptor_,
      MsgReqHeroDataGS2DB::default_instance_,
      MsgReqHeroDataGS2DB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqHeroDataGS2DB, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgReqHeroDataGS2DB),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqHeroDataGS2DB, _internal_metadata_),
      -1);
  MsgSaveDataGS2DB_descriptor_ = file->message_type(1);
  static const int MsgSaveDataGS2DB_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSaveDataGS2DB, sql_),
  };
  MsgSaveDataGS2DB_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgSaveDataGS2DB_descriptor_,
      MsgSaveDataGS2DB::default_instance_,
      MsgSaveDataGS2DB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSaveDataGS2DB, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgSaveDataGS2DB),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSaveDataGS2DB, _internal_metadata_),
      -1);
  MsgRecordSqlGS2DB_descriptor_ = file->message_type(2);
  static const int MsgRecordSqlGS2DB_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRecordSqlGS2DB, sql_),
  };
  MsgRecordSqlGS2DB_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgRecordSqlGS2DB_descriptor_,
      MsgRecordSqlGS2DB::default_instance_,
      MsgRecordSqlGS2DB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRecordSqlGS2DB, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgRecordSqlGS2DB),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRecordSqlGS2DB, _internal_metadata_),
      -1);
  MsgReqCharacterDataGS2DB_descriptor_ = file->message_type(3);
  static const int MsgReqCharacterDataGS2DB_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqCharacterDataGS2DB, character_id_),
  };
  MsgReqCharacterDataGS2DB_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgReqCharacterDataGS2DB_descriptor_,
      MsgReqCharacterDataGS2DB::default_instance_,
      MsgReqCharacterDataGS2DB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqCharacterDataGS2DB, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgReqCharacterDataGS2DB),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqCharacterDataGS2DB, _internal_metadata_),
      -1);
  MsgCharacterDataDB2GSACK_descriptor_ = file->message_type(4);
  static const int MsgCharacterDataDB2GSACK_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCharacterDataDB2GSACK, records_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCharacterDataDB2GSACK, vip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCharacterDataDB2GSACK, collection_movies_ids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCharacterDataDB2GSACK, character_id_),
  };
  MsgCharacterDataDB2GSACK_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgCharacterDataDB2GSACK_descriptor_,
      MsgCharacterDataDB2GSACK::default_instance_,
      MsgCharacterDataDB2GSACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCharacterDataDB2GSACK, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgCharacterDataDB2GSACK),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCharacterDataDB2GSACK, _internal_metadata_),
      -1);
  MsgReqCharacterIDGS2DB_descriptor_ = file->message_type(5);
  static const int MsgReqCharacterIDGS2DB_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqCharacterIDGS2DB, account_),
  };
  MsgReqCharacterIDGS2DB_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgReqCharacterIDGS2DB_descriptor_,
      MsgReqCharacterIDGS2DB::default_instance_,
      MsgReqCharacterIDGS2DB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqCharacterIDGS2DB, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgReqCharacterIDGS2DB),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqCharacterIDGS2DB, _internal_metadata_),
      -1);
  MsgCharacterIDDB2GSACK_descriptor_ = file->message_type(6);
  static const int MsgCharacterIDDB2GSACK_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCharacterIDDB2GSACK, default_charatcer_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCharacterIDDB2GSACK, channel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCharacterIDDB2GSACK, key_word_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCharacterIDDB2GSACK, channel_character_id_),
  };
  MsgCharacterIDDB2GSACK_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgCharacterIDDB2GSACK_descriptor_,
      MsgCharacterIDDB2GSACK::default_instance_,
      MsgCharacterIDDB2GSACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCharacterIDDB2GSACK, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgCharacterIDDB2GSACK),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCharacterIDDB2GSACK, _internal_metadata_),
      -1);
  MsgNeedCreateCharacterDB2GS_descriptor_ = file->message_type(7);
  static const int MsgNeedCreateCharacterDB2GS_offsets_[1] = {
  };
  MsgNeedCreateCharacterDB2GS_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgNeedCreateCharacterDB2GS_descriptor_,
      MsgNeedCreateCharacterDB2GS::default_instance_,
      MsgNeedCreateCharacterDB2GS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNeedCreateCharacterDB2GS, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgNeedCreateCharacterDB2GS),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNeedCreateCharacterDB2GS, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_msg_5fgame_5fdb_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgReqHeroDataGS2DB_descriptor_, &MsgReqHeroDataGS2DB::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgSaveDataGS2DB_descriptor_, &MsgSaveDataGS2DB::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgRecordSqlGS2DB_descriptor_, &MsgRecordSqlGS2DB::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgReqCharacterDataGS2DB_descriptor_, &MsgReqCharacterDataGS2DB::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgCharacterDataDB2GSACK_descriptor_, &MsgCharacterDataDB2GSACK::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgReqCharacterIDGS2DB_descriptor_, &MsgReqCharacterIDGS2DB::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgCharacterIDDB2GSACK_descriptor_, &MsgCharacterIDDB2GSACK::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgNeedCreateCharacterDB2GS_descriptor_, &MsgNeedCreateCharacterDB2GS::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_msg_5fgame_5fdb_2eproto() {
  delete MsgReqHeroDataGS2DB::default_instance_;
  delete MsgReqHeroDataGS2DB_reflection_;
  delete MsgSaveDataGS2DB::default_instance_;
  delete MsgSaveDataGS2DB_reflection_;
  delete MsgRecordSqlGS2DB::default_instance_;
  delete MsgRecordSqlGS2DB_reflection_;
  delete MsgReqCharacterDataGS2DB::default_instance_;
  delete MsgReqCharacterDataGS2DB_reflection_;
  delete MsgCharacterDataDB2GSACK::default_instance_;
  delete MsgCharacterDataDB2GSACK_reflection_;
  delete MsgReqCharacterIDGS2DB::default_instance_;
  delete MsgReqCharacterIDGS2DB_reflection_;
  delete MsgCharacterIDDB2GSACK::default_instance_;
  delete MsgCharacterIDDB2GSACK_reflection_;
  delete MsgNeedCreateCharacterDB2GS::default_instance_;
  delete MsgNeedCreateCharacterDB2GS_reflection_;
}

void protobuf_AddDesc_msg_5fgame_5fdb_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::message::protobuf_AddDesc_common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021msg_game_db.proto\022\007message\032\014common.pro"
    "to\"&\n\023MsgReqHeroDataGS2DB\022\017\n\007account\030\001 \002"
    "(\004\"\037\n\020MsgSaveDataGS2DB\022\013\n\003sql\030\001 \002(\014\" \n\021M"
    "sgRecordSqlGS2DB\022\013\n\003sql\030\001 \002(\014\"0\n\030MsgReqC"
    "haracterDataGS2DB\022\024\n\014character_id\030\001 \002(\004\""
    "\212\001\n\030MsgCharacterDataDB2GSACK\022,\n\007records\030"
    "\001 \003(\0132\033.message.MsgWatchRecordInfo\022\013\n\003vi"
    "p\030\002 \002(\005\022\035\n\025collection_movies_ids\030\003 \003(\005\022\024"
    "\n\014character_id\030\004 \002(\004\")\n\026MsgReqCharacterI"
    "DGS2DB\022\017\n\007account\030\001 \002(\004\"w\n\026MsgCharacterI"
    "DDB2GSACK\022\034\n\024default_charatcer_id\030\001 \002(\004\022"
    "\017\n\007channel\030\002 \002(\005\022\020\n\010key_word\030\003 \002(\t\022\034\n\024ch"
    "annel_character_id\030\004 \002(\004\"\035\n\033MsgNeedCreat"
    "eCharacterDB2GS", 535);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg_game_db.proto", &protobuf_RegisterTypes);
  MsgReqHeroDataGS2DB::default_instance_ = new MsgReqHeroDataGS2DB();
  MsgSaveDataGS2DB::default_instance_ = new MsgSaveDataGS2DB();
  MsgRecordSqlGS2DB::default_instance_ = new MsgRecordSqlGS2DB();
  MsgReqCharacterDataGS2DB::default_instance_ = new MsgReqCharacterDataGS2DB();
  MsgCharacterDataDB2GSACK::default_instance_ = new MsgCharacterDataDB2GSACK();
  MsgReqCharacterIDGS2DB::default_instance_ = new MsgReqCharacterIDGS2DB();
  MsgCharacterIDDB2GSACK::default_instance_ = new MsgCharacterIDDB2GSACK();
  MsgNeedCreateCharacterDB2GS::default_instance_ = new MsgNeedCreateCharacterDB2GS();
  MsgReqHeroDataGS2DB::default_instance_->InitAsDefaultInstance();
  MsgSaveDataGS2DB::default_instance_->InitAsDefaultInstance();
  MsgRecordSqlGS2DB::default_instance_->InitAsDefaultInstance();
  MsgReqCharacterDataGS2DB::default_instance_->InitAsDefaultInstance();
  MsgCharacterDataDB2GSACK::default_instance_->InitAsDefaultInstance();
  MsgReqCharacterIDGS2DB::default_instance_->InitAsDefaultInstance();
  MsgCharacterIDDB2GSACK::default_instance_->InitAsDefaultInstance();
  MsgNeedCreateCharacterDB2GS::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_msg_5fgame_5fdb_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_msg_5fgame_5fdb_2eproto {
  StaticDescriptorInitializer_msg_5fgame_5fdb_2eproto() {
    protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  }
} static_descriptor_initializer_msg_5fgame_5fdb_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int MsgReqHeroDataGS2DB::kAccountFieldNumber;
#endif  // !_MSC_VER

MsgReqHeroDataGS2DB::MsgReqHeroDataGS2DB()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgReqHeroDataGS2DB)
}

void MsgReqHeroDataGS2DB::InitAsDefaultInstance() {
}

MsgReqHeroDataGS2DB::MsgReqHeroDataGS2DB(const MsgReqHeroDataGS2DB& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgReqHeroDataGS2DB)
}

void MsgReqHeroDataGS2DB::SharedCtor() {
  _cached_size_ = 0;
  account_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgReqHeroDataGS2DB::~MsgReqHeroDataGS2DB() {
  // @@protoc_insertion_point(destructor:message.MsgReqHeroDataGS2DB)
  SharedDtor();
}

void MsgReqHeroDataGS2DB::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgReqHeroDataGS2DB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgReqHeroDataGS2DB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgReqHeroDataGS2DB_descriptor_;
}

const MsgReqHeroDataGS2DB& MsgReqHeroDataGS2DB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

MsgReqHeroDataGS2DB* MsgReqHeroDataGS2DB::default_instance_ = NULL;

MsgReqHeroDataGS2DB* MsgReqHeroDataGS2DB::New(::google::protobuf::Arena* arena) const {
  MsgReqHeroDataGS2DB* n = new MsgReqHeroDataGS2DB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgReqHeroDataGS2DB::Clear() {
  account_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgReqHeroDataGS2DB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgReqHeroDataGS2DB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 account = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &account_)));
          set_has_account();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgReqHeroDataGS2DB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgReqHeroDataGS2DB)
  return false;
#undef DO_
}

void MsgReqHeroDataGS2DB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgReqHeroDataGS2DB)
  // required uint64 account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgReqHeroDataGS2DB)
}

::google::protobuf::uint8* MsgReqHeroDataGS2DB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgReqHeroDataGS2DB)
  // required uint64 account = 1;
  if (has_account()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgReqHeroDataGS2DB)
  return target;
}

int MsgReqHeroDataGS2DB::ByteSize() const {
  int total_size = 0;

  // required uint64 account = 1;
  if (has_account()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->account());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgReqHeroDataGS2DB::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgReqHeroDataGS2DB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgReqHeroDataGS2DB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgReqHeroDataGS2DB::MergeFrom(const MsgReqHeroDataGS2DB& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account()) {
      set_account(from.account());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgReqHeroDataGS2DB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgReqHeroDataGS2DB::CopyFrom(const MsgReqHeroDataGS2DB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgReqHeroDataGS2DB::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MsgReqHeroDataGS2DB::Swap(MsgReqHeroDataGS2DB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgReqHeroDataGS2DB::InternalSwap(MsgReqHeroDataGS2DB* other) {
  std::swap(account_, other->account_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgReqHeroDataGS2DB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgReqHeroDataGS2DB_descriptor_;
  metadata.reflection = MsgReqHeroDataGS2DB_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgReqHeroDataGS2DB

// required uint64 account = 1;
 bool MsgReqHeroDataGS2DB::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgReqHeroDataGS2DB::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgReqHeroDataGS2DB::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgReqHeroDataGS2DB::clear_account() {
  account_ = GOOGLE_ULONGLONG(0);
  clear_has_account();
}
 ::google::protobuf::uint64 MsgReqHeroDataGS2DB::account() const {
  // @@protoc_insertion_point(field_get:message.MsgReqHeroDataGS2DB.account)
  return account_;
}
 void MsgReqHeroDataGS2DB::set_account(::google::protobuf::uint64 value) {
  set_has_account();
  account_ = value;
  // @@protoc_insertion_point(field_set:message.MsgReqHeroDataGS2DB.account)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgSaveDataGS2DB::kSqlFieldNumber;
#endif  // !_MSC_VER

MsgSaveDataGS2DB::MsgSaveDataGS2DB()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgSaveDataGS2DB)
}

void MsgSaveDataGS2DB::InitAsDefaultInstance() {
}

MsgSaveDataGS2DB::MsgSaveDataGS2DB(const MsgSaveDataGS2DB& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgSaveDataGS2DB)
}

void MsgSaveDataGS2DB::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSaveDataGS2DB::~MsgSaveDataGS2DB() {
  // @@protoc_insertion_point(destructor:message.MsgSaveDataGS2DB)
  SharedDtor();
}

void MsgSaveDataGS2DB::SharedDtor() {
  sql_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgSaveDataGS2DB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSaveDataGS2DB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSaveDataGS2DB_descriptor_;
}

const MsgSaveDataGS2DB& MsgSaveDataGS2DB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

MsgSaveDataGS2DB* MsgSaveDataGS2DB::default_instance_ = NULL;

MsgSaveDataGS2DB* MsgSaveDataGS2DB::New(::google::protobuf::Arena* arena) const {
  MsgSaveDataGS2DB* n = new MsgSaveDataGS2DB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgSaveDataGS2DB::Clear() {
  if (has_sql()) {
    sql_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgSaveDataGS2DB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgSaveDataGS2DB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes sql = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sql()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgSaveDataGS2DB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgSaveDataGS2DB)
  return false;
#undef DO_
}

void MsgSaveDataGS2DB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgSaveDataGS2DB)
  // required bytes sql = 1;
  if (has_sql()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sql(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgSaveDataGS2DB)
}

::google::protobuf::uint8* MsgSaveDataGS2DB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgSaveDataGS2DB)
  // required bytes sql = 1;
  if (has_sql()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->sql(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgSaveDataGS2DB)
  return target;
}

int MsgSaveDataGS2DB::ByteSize() const {
  int total_size = 0;

  // required bytes sql = 1;
  if (has_sql()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sql());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSaveDataGS2DB::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgSaveDataGS2DB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSaveDataGS2DB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSaveDataGS2DB::MergeFrom(const MsgSaveDataGS2DB& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sql()) {
      set_has_sql();
      sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgSaveDataGS2DB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSaveDataGS2DB::CopyFrom(const MsgSaveDataGS2DB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSaveDataGS2DB::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MsgSaveDataGS2DB::Swap(MsgSaveDataGS2DB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgSaveDataGS2DB::InternalSwap(MsgSaveDataGS2DB* other) {
  sql_.Swap(&other->sql_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgSaveDataGS2DB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSaveDataGS2DB_descriptor_;
  metadata.reflection = MsgSaveDataGS2DB_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgSaveDataGS2DB

// required bytes sql = 1;
 bool MsgSaveDataGS2DB::has_sql() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgSaveDataGS2DB::set_has_sql() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgSaveDataGS2DB::clear_has_sql() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgSaveDataGS2DB::clear_sql() {
  sql_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sql();
}
 const ::std::string& MsgSaveDataGS2DB::sql() const {
  // @@protoc_insertion_point(field_get:message.MsgSaveDataGS2DB.sql)
  return sql_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgSaveDataGS2DB::set_sql(const ::std::string& value) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgSaveDataGS2DB.sql)
}
 void MsgSaveDataGS2DB::set_sql(const char* value) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgSaveDataGS2DB.sql)
}
 void MsgSaveDataGS2DB::set_sql(const void* value, size_t size) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgSaveDataGS2DB.sql)
}
 ::std::string* MsgSaveDataGS2DB::mutable_sql() {
  set_has_sql();
  // @@protoc_insertion_point(field_mutable:message.MsgSaveDataGS2DB.sql)
  return sql_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgSaveDataGS2DB::release_sql() {
  clear_has_sql();
  return sql_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgSaveDataGS2DB::set_allocated_sql(::std::string* sql) {
  if (sql != NULL) {
    set_has_sql();
  } else {
    clear_has_sql();
  }
  sql_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sql);
  // @@protoc_insertion_point(field_set_allocated:message.MsgSaveDataGS2DB.sql)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgRecordSqlGS2DB::kSqlFieldNumber;
#endif  // !_MSC_VER

MsgRecordSqlGS2DB::MsgRecordSqlGS2DB()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgRecordSqlGS2DB)
}

void MsgRecordSqlGS2DB::InitAsDefaultInstance() {
}

MsgRecordSqlGS2DB::MsgRecordSqlGS2DB(const MsgRecordSqlGS2DB& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgRecordSqlGS2DB)
}

void MsgRecordSqlGS2DB::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgRecordSqlGS2DB::~MsgRecordSqlGS2DB() {
  // @@protoc_insertion_point(destructor:message.MsgRecordSqlGS2DB)
  SharedDtor();
}

void MsgRecordSqlGS2DB::SharedDtor() {
  sql_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgRecordSqlGS2DB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgRecordSqlGS2DB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgRecordSqlGS2DB_descriptor_;
}

const MsgRecordSqlGS2DB& MsgRecordSqlGS2DB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

MsgRecordSqlGS2DB* MsgRecordSqlGS2DB::default_instance_ = NULL;

MsgRecordSqlGS2DB* MsgRecordSqlGS2DB::New(::google::protobuf::Arena* arena) const {
  MsgRecordSqlGS2DB* n = new MsgRecordSqlGS2DB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgRecordSqlGS2DB::Clear() {
  if (has_sql()) {
    sql_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgRecordSqlGS2DB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgRecordSqlGS2DB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes sql = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sql()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgRecordSqlGS2DB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgRecordSqlGS2DB)
  return false;
#undef DO_
}

void MsgRecordSqlGS2DB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgRecordSqlGS2DB)
  // required bytes sql = 1;
  if (has_sql()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sql(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgRecordSqlGS2DB)
}

::google::protobuf::uint8* MsgRecordSqlGS2DB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgRecordSqlGS2DB)
  // required bytes sql = 1;
  if (has_sql()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->sql(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgRecordSqlGS2DB)
  return target;
}

int MsgRecordSqlGS2DB::ByteSize() const {
  int total_size = 0;

  // required bytes sql = 1;
  if (has_sql()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sql());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgRecordSqlGS2DB::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgRecordSqlGS2DB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgRecordSqlGS2DB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgRecordSqlGS2DB::MergeFrom(const MsgRecordSqlGS2DB& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sql()) {
      set_has_sql();
      sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgRecordSqlGS2DB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgRecordSqlGS2DB::CopyFrom(const MsgRecordSqlGS2DB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRecordSqlGS2DB::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MsgRecordSqlGS2DB::Swap(MsgRecordSqlGS2DB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgRecordSqlGS2DB::InternalSwap(MsgRecordSqlGS2DB* other) {
  sql_.Swap(&other->sql_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgRecordSqlGS2DB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgRecordSqlGS2DB_descriptor_;
  metadata.reflection = MsgRecordSqlGS2DB_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgRecordSqlGS2DB

// required bytes sql = 1;
 bool MsgRecordSqlGS2DB::has_sql() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgRecordSqlGS2DB::set_has_sql() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgRecordSqlGS2DB::clear_has_sql() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgRecordSqlGS2DB::clear_sql() {
  sql_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sql();
}
 const ::std::string& MsgRecordSqlGS2DB::sql() const {
  // @@protoc_insertion_point(field_get:message.MsgRecordSqlGS2DB.sql)
  return sql_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgRecordSqlGS2DB::set_sql(const ::std::string& value) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgRecordSqlGS2DB.sql)
}
 void MsgRecordSqlGS2DB::set_sql(const char* value) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgRecordSqlGS2DB.sql)
}
 void MsgRecordSqlGS2DB::set_sql(const void* value, size_t size) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgRecordSqlGS2DB.sql)
}
 ::std::string* MsgRecordSqlGS2DB::mutable_sql() {
  set_has_sql();
  // @@protoc_insertion_point(field_mutable:message.MsgRecordSqlGS2DB.sql)
  return sql_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgRecordSqlGS2DB::release_sql() {
  clear_has_sql();
  return sql_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgRecordSqlGS2DB::set_allocated_sql(::std::string* sql) {
  if (sql != NULL) {
    set_has_sql();
  } else {
    clear_has_sql();
  }
  sql_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sql);
  // @@protoc_insertion_point(field_set_allocated:message.MsgRecordSqlGS2DB.sql)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgReqCharacterDataGS2DB::kCharacterIdFieldNumber;
#endif  // !_MSC_VER

MsgReqCharacterDataGS2DB::MsgReqCharacterDataGS2DB()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgReqCharacterDataGS2DB)
}

void MsgReqCharacterDataGS2DB::InitAsDefaultInstance() {
}

MsgReqCharacterDataGS2DB::MsgReqCharacterDataGS2DB(const MsgReqCharacterDataGS2DB& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgReqCharacterDataGS2DB)
}

void MsgReqCharacterDataGS2DB::SharedCtor() {
  _cached_size_ = 0;
  character_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgReqCharacterDataGS2DB::~MsgReqCharacterDataGS2DB() {
  // @@protoc_insertion_point(destructor:message.MsgReqCharacterDataGS2DB)
  SharedDtor();
}

void MsgReqCharacterDataGS2DB::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgReqCharacterDataGS2DB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgReqCharacterDataGS2DB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgReqCharacterDataGS2DB_descriptor_;
}

const MsgReqCharacterDataGS2DB& MsgReqCharacterDataGS2DB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

MsgReqCharacterDataGS2DB* MsgReqCharacterDataGS2DB::default_instance_ = NULL;

MsgReqCharacterDataGS2DB* MsgReqCharacterDataGS2DB::New(::google::protobuf::Arena* arena) const {
  MsgReqCharacterDataGS2DB* n = new MsgReqCharacterDataGS2DB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgReqCharacterDataGS2DB::Clear() {
  character_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgReqCharacterDataGS2DB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgReqCharacterDataGS2DB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 character_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &character_id_)));
          set_has_character_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgReqCharacterDataGS2DB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgReqCharacterDataGS2DB)
  return false;
#undef DO_
}

void MsgReqCharacterDataGS2DB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgReqCharacterDataGS2DB)
  // required uint64 character_id = 1;
  if (has_character_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->character_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgReqCharacterDataGS2DB)
}

::google::protobuf::uint8* MsgReqCharacterDataGS2DB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgReqCharacterDataGS2DB)
  // required uint64 character_id = 1;
  if (has_character_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->character_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgReqCharacterDataGS2DB)
  return target;
}

int MsgReqCharacterDataGS2DB::ByteSize() const {
  int total_size = 0;

  // required uint64 character_id = 1;
  if (has_character_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->character_id());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgReqCharacterDataGS2DB::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgReqCharacterDataGS2DB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgReqCharacterDataGS2DB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgReqCharacterDataGS2DB::MergeFrom(const MsgReqCharacterDataGS2DB& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_character_id()) {
      set_character_id(from.character_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgReqCharacterDataGS2DB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgReqCharacterDataGS2DB::CopyFrom(const MsgReqCharacterDataGS2DB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgReqCharacterDataGS2DB::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MsgReqCharacterDataGS2DB::Swap(MsgReqCharacterDataGS2DB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgReqCharacterDataGS2DB::InternalSwap(MsgReqCharacterDataGS2DB* other) {
  std::swap(character_id_, other->character_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgReqCharacterDataGS2DB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgReqCharacterDataGS2DB_descriptor_;
  metadata.reflection = MsgReqCharacterDataGS2DB_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgReqCharacterDataGS2DB

// required uint64 character_id = 1;
 bool MsgReqCharacterDataGS2DB::has_character_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgReqCharacterDataGS2DB::set_has_character_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgReqCharacterDataGS2DB::clear_has_character_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgReqCharacterDataGS2DB::clear_character_id() {
  character_id_ = GOOGLE_ULONGLONG(0);
  clear_has_character_id();
}
 ::google::protobuf::uint64 MsgReqCharacterDataGS2DB::character_id() const {
  // @@protoc_insertion_point(field_get:message.MsgReqCharacterDataGS2DB.character_id)
  return character_id_;
}
 void MsgReqCharacterDataGS2DB::set_character_id(::google::protobuf::uint64 value) {
  set_has_character_id();
  character_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgReqCharacterDataGS2DB.character_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgCharacterDataDB2GSACK::kRecordsFieldNumber;
const int MsgCharacterDataDB2GSACK::kVipFieldNumber;
const int MsgCharacterDataDB2GSACK::kCollectionMoviesIdsFieldNumber;
const int MsgCharacterDataDB2GSACK::kCharacterIdFieldNumber;
#endif  // !_MSC_VER

MsgCharacterDataDB2GSACK::MsgCharacterDataDB2GSACK()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgCharacterDataDB2GSACK)
}

void MsgCharacterDataDB2GSACK::InitAsDefaultInstance() {
}

MsgCharacterDataDB2GSACK::MsgCharacterDataDB2GSACK(const MsgCharacterDataDB2GSACK& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgCharacterDataDB2GSACK)
}

void MsgCharacterDataDB2GSACK::SharedCtor() {
  _cached_size_ = 0;
  vip_ = 0;
  character_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgCharacterDataDB2GSACK::~MsgCharacterDataDB2GSACK() {
  // @@protoc_insertion_point(destructor:message.MsgCharacterDataDB2GSACK)
  SharedDtor();
}

void MsgCharacterDataDB2GSACK::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgCharacterDataDB2GSACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgCharacterDataDB2GSACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgCharacterDataDB2GSACK_descriptor_;
}

const MsgCharacterDataDB2GSACK& MsgCharacterDataDB2GSACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

MsgCharacterDataDB2GSACK* MsgCharacterDataDB2GSACK::default_instance_ = NULL;

MsgCharacterDataDB2GSACK* MsgCharacterDataDB2GSACK::New(::google::protobuf::Arena* arena) const {
  MsgCharacterDataDB2GSACK* n = new MsgCharacterDataDB2GSACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgCharacterDataDB2GSACK::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgCharacterDataDB2GSACK*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(character_id_, vip_);

#undef ZR_HELPER_
#undef ZR_

  records_.Clear();
  collection_movies_ids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgCharacterDataDB2GSACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgCharacterDataDB2GSACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .message.MsgWatchRecordInfo records = 1;
      case 1: {
        if (tag == 10) {
         parse_records:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_records()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_records;
        if (input->ExpectTag(16)) goto parse_vip;
        break;
      }

      // required int32 vip = 2;
      case 2: {
        if (tag == 16) {
         parse_vip:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_)));
          set_has_vip();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_collection_movies_ids;
        break;
      }

      // repeated int32 collection_movies_ids = 3;
      case 3: {
        if (tag == 24) {
         parse_collection_movies_ids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_collection_movies_ids())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_collection_movies_ids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_collection_movies_ids;
        if (input->ExpectTag(32)) goto parse_character_id;
        break;
      }

      // required uint64 character_id = 4;
      case 4: {
        if (tag == 32) {
         parse_character_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &character_id_)));
          set_has_character_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgCharacterDataDB2GSACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgCharacterDataDB2GSACK)
  return false;
#undef DO_
}

void MsgCharacterDataDB2GSACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgCharacterDataDB2GSACK)
  // repeated .message.MsgWatchRecordInfo records = 1;
  for (unsigned int i = 0, n = this->records_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->records(i), output);
  }

  // required int32 vip = 2;
  if (has_vip()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vip(), output);
  }

  // repeated int32 collection_movies_ids = 3;
  for (int i = 0; i < this->collection_movies_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->collection_movies_ids(i), output);
  }

  // required uint64 character_id = 4;
  if (has_character_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->character_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgCharacterDataDB2GSACK)
}

::google::protobuf::uint8* MsgCharacterDataDB2GSACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgCharacterDataDB2GSACK)
  // repeated .message.MsgWatchRecordInfo records = 1;
  for (unsigned int i = 0, n = this->records_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->records(i), target);
  }

  // required int32 vip = 2;
  if (has_vip()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vip(), target);
  }

  // repeated int32 collection_movies_ids = 3;
  for (int i = 0; i < this->collection_movies_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->collection_movies_ids(i), target);
  }

  // required uint64 character_id = 4;
  if (has_character_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->character_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgCharacterDataDB2GSACK)
  return target;
}

int MsgCharacterDataDB2GSACK::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_vip()) {
    // required int32 vip = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vip());
  }

  if (has_character_id()) {
    // required uint64 character_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->character_id());
  }

  return total_size;
}
int MsgCharacterDataDB2GSACK::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000a) ^ 0x0000000a) == 0) {  // All required fields are present.
    // required int32 vip = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vip());

    // required uint64 character_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->character_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .message.MsgWatchRecordInfo records = 1;
  total_size += 1 * this->records_size();
  for (int i = 0; i < this->records_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->records(i));
  }

  // repeated int32 collection_movies_ids = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->collection_movies_ids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->collection_movies_ids(i));
    }
    total_size += 1 * this->collection_movies_ids_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgCharacterDataDB2GSACK::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgCharacterDataDB2GSACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgCharacterDataDB2GSACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgCharacterDataDB2GSACK::MergeFrom(const MsgCharacterDataDB2GSACK& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  records_.MergeFrom(from.records_);
  collection_movies_ids_.MergeFrom(from.collection_movies_ids_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_vip()) {
      set_vip(from.vip());
    }
    if (from.has_character_id()) {
      set_character_id(from.character_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgCharacterDataDB2GSACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgCharacterDataDB2GSACK::CopyFrom(const MsgCharacterDataDB2GSACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCharacterDataDB2GSACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000a) != 0x0000000a) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->records())) return false;
  return true;
}

void MsgCharacterDataDB2GSACK::Swap(MsgCharacterDataDB2GSACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgCharacterDataDB2GSACK::InternalSwap(MsgCharacterDataDB2GSACK* other) {
  records_.UnsafeArenaSwap(&other->records_);
  std::swap(vip_, other->vip_);
  collection_movies_ids_.UnsafeArenaSwap(&other->collection_movies_ids_);
  std::swap(character_id_, other->character_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgCharacterDataDB2GSACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgCharacterDataDB2GSACK_descriptor_;
  metadata.reflection = MsgCharacterDataDB2GSACK_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgCharacterDataDB2GSACK

// repeated .message.MsgWatchRecordInfo records = 1;
 int MsgCharacterDataDB2GSACK::records_size() const {
  return records_.size();
}
 void MsgCharacterDataDB2GSACK::clear_records() {
  records_.Clear();
}
 const ::message::MsgWatchRecordInfo& MsgCharacterDataDB2GSACK::records(int index) const {
  // @@protoc_insertion_point(field_get:message.MsgCharacterDataDB2GSACK.records)
  return records_.Get(index);
}
 ::message::MsgWatchRecordInfo* MsgCharacterDataDB2GSACK::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:message.MsgCharacterDataDB2GSACK.records)
  return records_.Mutable(index);
}
 ::message::MsgWatchRecordInfo* MsgCharacterDataDB2GSACK::add_records() {
  // @@protoc_insertion_point(field_add:message.MsgCharacterDataDB2GSACK.records)
  return records_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::MsgWatchRecordInfo >&
MsgCharacterDataDB2GSACK::records() const {
  // @@protoc_insertion_point(field_list:message.MsgCharacterDataDB2GSACK.records)
  return records_;
}
 ::google::protobuf::RepeatedPtrField< ::message::MsgWatchRecordInfo >*
MsgCharacterDataDB2GSACK::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:message.MsgCharacterDataDB2GSACK.records)
  return &records_;
}

// required int32 vip = 2;
 bool MsgCharacterDataDB2GSACK::has_vip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgCharacterDataDB2GSACK::set_has_vip() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgCharacterDataDB2GSACK::clear_has_vip() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgCharacterDataDB2GSACK::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
 ::google::protobuf::int32 MsgCharacterDataDB2GSACK::vip() const {
  // @@protoc_insertion_point(field_get:message.MsgCharacterDataDB2GSACK.vip)
  return vip_;
}
 void MsgCharacterDataDB2GSACK::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
  // @@protoc_insertion_point(field_set:message.MsgCharacterDataDB2GSACK.vip)
}

// repeated int32 collection_movies_ids = 3;
 int MsgCharacterDataDB2GSACK::collection_movies_ids_size() const {
  return collection_movies_ids_.size();
}
 void MsgCharacterDataDB2GSACK::clear_collection_movies_ids() {
  collection_movies_ids_.Clear();
}
 ::google::protobuf::int32 MsgCharacterDataDB2GSACK::collection_movies_ids(int index) const {
  // @@protoc_insertion_point(field_get:message.MsgCharacterDataDB2GSACK.collection_movies_ids)
  return collection_movies_ids_.Get(index);
}
 void MsgCharacterDataDB2GSACK::set_collection_movies_ids(int index, ::google::protobuf::int32 value) {
  collection_movies_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:message.MsgCharacterDataDB2GSACK.collection_movies_ids)
}
 void MsgCharacterDataDB2GSACK::add_collection_movies_ids(::google::protobuf::int32 value) {
  collection_movies_ids_.Add(value);
  // @@protoc_insertion_point(field_add:message.MsgCharacterDataDB2GSACK.collection_movies_ids)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MsgCharacterDataDB2GSACK::collection_movies_ids() const {
  // @@protoc_insertion_point(field_list:message.MsgCharacterDataDB2GSACK.collection_movies_ids)
  return collection_movies_ids_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MsgCharacterDataDB2GSACK::mutable_collection_movies_ids() {
  // @@protoc_insertion_point(field_mutable_list:message.MsgCharacterDataDB2GSACK.collection_movies_ids)
  return &collection_movies_ids_;
}

// required uint64 character_id = 4;
 bool MsgCharacterDataDB2GSACK::has_character_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void MsgCharacterDataDB2GSACK::set_has_character_id() {
  _has_bits_[0] |= 0x00000008u;
}
 void MsgCharacterDataDB2GSACK::clear_has_character_id() {
  _has_bits_[0] &= ~0x00000008u;
}
 void MsgCharacterDataDB2GSACK::clear_character_id() {
  character_id_ = GOOGLE_ULONGLONG(0);
  clear_has_character_id();
}
 ::google::protobuf::uint64 MsgCharacterDataDB2GSACK::character_id() const {
  // @@protoc_insertion_point(field_get:message.MsgCharacterDataDB2GSACK.character_id)
  return character_id_;
}
 void MsgCharacterDataDB2GSACK::set_character_id(::google::protobuf::uint64 value) {
  set_has_character_id();
  character_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgCharacterDataDB2GSACK.character_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgReqCharacterIDGS2DB::kAccountFieldNumber;
#endif  // !_MSC_VER

MsgReqCharacterIDGS2DB::MsgReqCharacterIDGS2DB()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgReqCharacterIDGS2DB)
}

void MsgReqCharacterIDGS2DB::InitAsDefaultInstance() {
}

MsgReqCharacterIDGS2DB::MsgReqCharacterIDGS2DB(const MsgReqCharacterIDGS2DB& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgReqCharacterIDGS2DB)
}

void MsgReqCharacterIDGS2DB::SharedCtor() {
  _cached_size_ = 0;
  account_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgReqCharacterIDGS2DB::~MsgReqCharacterIDGS2DB() {
  // @@protoc_insertion_point(destructor:message.MsgReqCharacterIDGS2DB)
  SharedDtor();
}

void MsgReqCharacterIDGS2DB::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgReqCharacterIDGS2DB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgReqCharacterIDGS2DB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgReqCharacterIDGS2DB_descriptor_;
}

const MsgReqCharacterIDGS2DB& MsgReqCharacterIDGS2DB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

MsgReqCharacterIDGS2DB* MsgReqCharacterIDGS2DB::default_instance_ = NULL;

MsgReqCharacterIDGS2DB* MsgReqCharacterIDGS2DB::New(::google::protobuf::Arena* arena) const {
  MsgReqCharacterIDGS2DB* n = new MsgReqCharacterIDGS2DB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgReqCharacterIDGS2DB::Clear() {
  account_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgReqCharacterIDGS2DB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgReqCharacterIDGS2DB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 account = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &account_)));
          set_has_account();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgReqCharacterIDGS2DB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgReqCharacterIDGS2DB)
  return false;
#undef DO_
}

void MsgReqCharacterIDGS2DB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgReqCharacterIDGS2DB)
  // required uint64 account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgReqCharacterIDGS2DB)
}

::google::protobuf::uint8* MsgReqCharacterIDGS2DB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgReqCharacterIDGS2DB)
  // required uint64 account = 1;
  if (has_account()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgReqCharacterIDGS2DB)
  return target;
}

int MsgReqCharacterIDGS2DB::ByteSize() const {
  int total_size = 0;

  // required uint64 account = 1;
  if (has_account()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->account());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgReqCharacterIDGS2DB::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgReqCharacterIDGS2DB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgReqCharacterIDGS2DB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgReqCharacterIDGS2DB::MergeFrom(const MsgReqCharacterIDGS2DB& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account()) {
      set_account(from.account());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgReqCharacterIDGS2DB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgReqCharacterIDGS2DB::CopyFrom(const MsgReqCharacterIDGS2DB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgReqCharacterIDGS2DB::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MsgReqCharacterIDGS2DB::Swap(MsgReqCharacterIDGS2DB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgReqCharacterIDGS2DB::InternalSwap(MsgReqCharacterIDGS2DB* other) {
  std::swap(account_, other->account_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgReqCharacterIDGS2DB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgReqCharacterIDGS2DB_descriptor_;
  metadata.reflection = MsgReqCharacterIDGS2DB_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgReqCharacterIDGS2DB

// required uint64 account = 1;
 bool MsgReqCharacterIDGS2DB::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgReqCharacterIDGS2DB::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgReqCharacterIDGS2DB::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgReqCharacterIDGS2DB::clear_account() {
  account_ = GOOGLE_ULONGLONG(0);
  clear_has_account();
}
 ::google::protobuf::uint64 MsgReqCharacterIDGS2DB::account() const {
  // @@protoc_insertion_point(field_get:message.MsgReqCharacterIDGS2DB.account)
  return account_;
}
 void MsgReqCharacterIDGS2DB::set_account(::google::protobuf::uint64 value) {
  set_has_account();
  account_ = value;
  // @@protoc_insertion_point(field_set:message.MsgReqCharacterIDGS2DB.account)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgCharacterIDDB2GSACK::kDefaultCharatcerIdFieldNumber;
const int MsgCharacterIDDB2GSACK::kChannelFieldNumber;
const int MsgCharacterIDDB2GSACK::kKeyWordFieldNumber;
const int MsgCharacterIDDB2GSACK::kChannelCharacterIdFieldNumber;
#endif  // !_MSC_VER

MsgCharacterIDDB2GSACK::MsgCharacterIDDB2GSACK()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgCharacterIDDB2GSACK)
}

void MsgCharacterIDDB2GSACK::InitAsDefaultInstance() {
}

MsgCharacterIDDB2GSACK::MsgCharacterIDDB2GSACK(const MsgCharacterIDDB2GSACK& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgCharacterIDDB2GSACK)
}

void MsgCharacterIDDB2GSACK::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  default_charatcer_id_ = GOOGLE_ULONGLONG(0);
  channel_ = 0;
  key_word_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_character_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgCharacterIDDB2GSACK::~MsgCharacterIDDB2GSACK() {
  // @@protoc_insertion_point(destructor:message.MsgCharacterIDDB2GSACK)
  SharedDtor();
}

void MsgCharacterIDDB2GSACK::SharedDtor() {
  key_word_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgCharacterIDDB2GSACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgCharacterIDDB2GSACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgCharacterIDDB2GSACK_descriptor_;
}

const MsgCharacterIDDB2GSACK& MsgCharacterIDDB2GSACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

MsgCharacterIDDB2GSACK* MsgCharacterIDDB2GSACK::default_instance_ = NULL;

MsgCharacterIDDB2GSACK* MsgCharacterIDDB2GSACK::New(::google::protobuf::Arena* arena) const {
  MsgCharacterIDDB2GSACK* n = new MsgCharacterIDDB2GSACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgCharacterIDDB2GSACK::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgCharacterIDDB2GSACK*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(channel_character_id_, channel_);
    default_charatcer_id_ = GOOGLE_ULONGLONG(0);
    if (has_key_word()) {
      key_word_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgCharacterIDDB2GSACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgCharacterIDDB2GSACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 default_charatcer_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &default_charatcer_id_)));
          set_has_default_charatcer_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_channel;
        break;
      }

      // required int32 channel = 2;
      case 2: {
        if (tag == 16) {
         parse_channel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
          set_has_channel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_key_word;
        break;
      }

      // required string key_word = 3;
      case 3: {
        if (tag == 26) {
         parse_key_word:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key_word()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key_word().data(), this->key_word().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.MsgCharacterIDDB2GSACK.key_word");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_channel_character_id;
        break;
      }

      // required uint64 channel_character_id = 4;
      case 4: {
        if (tag == 32) {
         parse_channel_character_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &channel_character_id_)));
          set_has_channel_character_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgCharacterIDDB2GSACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgCharacterIDDB2GSACK)
  return false;
#undef DO_
}

void MsgCharacterIDDB2GSACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgCharacterIDDB2GSACK)
  // required uint64 default_charatcer_id = 1;
  if (has_default_charatcer_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->default_charatcer_id(), output);
  }

  // required int32 channel = 2;
  if (has_channel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->channel(), output);
  }

  // required string key_word = 3;
  if (has_key_word()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key_word().data(), this->key_word().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgCharacterIDDB2GSACK.key_word");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->key_word(), output);
  }

  // required uint64 channel_character_id = 4;
  if (has_channel_character_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->channel_character_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgCharacterIDDB2GSACK)
}

::google::protobuf::uint8* MsgCharacterIDDB2GSACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgCharacterIDDB2GSACK)
  // required uint64 default_charatcer_id = 1;
  if (has_default_charatcer_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->default_charatcer_id(), target);
  }

  // required int32 channel = 2;
  if (has_channel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->channel(), target);
  }

  // required string key_word = 3;
  if (has_key_word()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key_word().data(), this->key_word().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgCharacterIDDB2GSACK.key_word");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->key_word(), target);
  }

  // required uint64 channel_character_id = 4;
  if (has_channel_character_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->channel_character_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgCharacterIDDB2GSACK)
  return target;
}

int MsgCharacterIDDB2GSACK::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_default_charatcer_id()) {
    // required uint64 default_charatcer_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->default_charatcer_id());
  }

  if (has_channel()) {
    // required int32 channel = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  if (has_key_word()) {
    // required string key_word = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key_word());
  }

  if (has_channel_character_id()) {
    // required uint64 channel_character_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->channel_character_id());
  }

  return total_size;
}
int MsgCharacterIDDB2GSACK::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required uint64 default_charatcer_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->default_charatcer_id());

    // required int32 channel = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());

    // required string key_word = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key_word());

    // required uint64 channel_character_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->channel_character_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgCharacterIDDB2GSACK::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgCharacterIDDB2GSACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgCharacterIDDB2GSACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgCharacterIDDB2GSACK::MergeFrom(const MsgCharacterIDDB2GSACK& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_default_charatcer_id()) {
      set_default_charatcer_id(from.default_charatcer_id());
    }
    if (from.has_channel()) {
      set_channel(from.channel());
    }
    if (from.has_key_word()) {
      set_has_key_word();
      key_word_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_word_);
    }
    if (from.has_channel_character_id()) {
      set_channel_character_id(from.channel_character_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgCharacterIDDB2GSACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgCharacterIDDB2GSACK::CopyFrom(const MsgCharacterIDDB2GSACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCharacterIDDB2GSACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void MsgCharacterIDDB2GSACK::Swap(MsgCharacterIDDB2GSACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgCharacterIDDB2GSACK::InternalSwap(MsgCharacterIDDB2GSACK* other) {
  std::swap(default_charatcer_id_, other->default_charatcer_id_);
  std::swap(channel_, other->channel_);
  key_word_.Swap(&other->key_word_);
  std::swap(channel_character_id_, other->channel_character_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgCharacterIDDB2GSACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgCharacterIDDB2GSACK_descriptor_;
  metadata.reflection = MsgCharacterIDDB2GSACK_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgCharacterIDDB2GSACK

// required uint64 default_charatcer_id = 1;
 bool MsgCharacterIDDB2GSACK::has_default_charatcer_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgCharacterIDDB2GSACK::set_has_default_charatcer_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgCharacterIDDB2GSACK::clear_has_default_charatcer_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgCharacterIDDB2GSACK::clear_default_charatcer_id() {
  default_charatcer_id_ = GOOGLE_ULONGLONG(0);
  clear_has_default_charatcer_id();
}
 ::google::protobuf::uint64 MsgCharacterIDDB2GSACK::default_charatcer_id() const {
  // @@protoc_insertion_point(field_get:message.MsgCharacterIDDB2GSACK.default_charatcer_id)
  return default_charatcer_id_;
}
 void MsgCharacterIDDB2GSACK::set_default_charatcer_id(::google::protobuf::uint64 value) {
  set_has_default_charatcer_id();
  default_charatcer_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgCharacterIDDB2GSACK.default_charatcer_id)
}

// required int32 channel = 2;
 bool MsgCharacterIDDB2GSACK::has_channel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgCharacterIDDB2GSACK::set_has_channel() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgCharacterIDDB2GSACK::clear_has_channel() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgCharacterIDDB2GSACK::clear_channel() {
  channel_ = 0;
  clear_has_channel();
}
 ::google::protobuf::int32 MsgCharacterIDDB2GSACK::channel() const {
  // @@protoc_insertion_point(field_get:message.MsgCharacterIDDB2GSACK.channel)
  return channel_;
}
 void MsgCharacterIDDB2GSACK::set_channel(::google::protobuf::int32 value) {
  set_has_channel();
  channel_ = value;
  // @@protoc_insertion_point(field_set:message.MsgCharacterIDDB2GSACK.channel)
}

// required string key_word = 3;
 bool MsgCharacterIDDB2GSACK::has_key_word() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void MsgCharacterIDDB2GSACK::set_has_key_word() {
  _has_bits_[0] |= 0x00000004u;
}
 void MsgCharacterIDDB2GSACK::clear_has_key_word() {
  _has_bits_[0] &= ~0x00000004u;
}
 void MsgCharacterIDDB2GSACK::clear_key_word() {
  key_word_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key_word();
}
 const ::std::string& MsgCharacterIDDB2GSACK::key_word() const {
  // @@protoc_insertion_point(field_get:message.MsgCharacterIDDB2GSACK.key_word)
  return key_word_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgCharacterIDDB2GSACK::set_key_word(const ::std::string& value) {
  set_has_key_word();
  key_word_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgCharacterIDDB2GSACK.key_word)
}
 void MsgCharacterIDDB2GSACK::set_key_word(const char* value) {
  set_has_key_word();
  key_word_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgCharacterIDDB2GSACK.key_word)
}
 void MsgCharacterIDDB2GSACK::set_key_word(const char* value, size_t size) {
  set_has_key_word();
  key_word_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgCharacterIDDB2GSACK.key_word)
}
 ::std::string* MsgCharacterIDDB2GSACK::mutable_key_word() {
  set_has_key_word();
  // @@protoc_insertion_point(field_mutable:message.MsgCharacterIDDB2GSACK.key_word)
  return key_word_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgCharacterIDDB2GSACK::release_key_word() {
  clear_has_key_word();
  return key_word_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgCharacterIDDB2GSACK::set_allocated_key_word(::std::string* key_word) {
  if (key_word != NULL) {
    set_has_key_word();
  } else {
    clear_has_key_word();
  }
  key_word_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_word);
  // @@protoc_insertion_point(field_set_allocated:message.MsgCharacterIDDB2GSACK.key_word)
}

// required uint64 channel_character_id = 4;
 bool MsgCharacterIDDB2GSACK::has_channel_character_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void MsgCharacterIDDB2GSACK::set_has_channel_character_id() {
  _has_bits_[0] |= 0x00000008u;
}
 void MsgCharacterIDDB2GSACK::clear_has_channel_character_id() {
  _has_bits_[0] &= ~0x00000008u;
}
 void MsgCharacterIDDB2GSACK::clear_channel_character_id() {
  channel_character_id_ = GOOGLE_ULONGLONG(0);
  clear_has_channel_character_id();
}
 ::google::protobuf::uint64 MsgCharacterIDDB2GSACK::channel_character_id() const {
  // @@protoc_insertion_point(field_get:message.MsgCharacterIDDB2GSACK.channel_character_id)
  return channel_character_id_;
}
 void MsgCharacterIDDB2GSACK::set_channel_character_id(::google::protobuf::uint64 value) {
  set_has_channel_character_id();
  channel_character_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgCharacterIDDB2GSACK.channel_character_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MsgNeedCreateCharacterDB2GS::MsgNeedCreateCharacterDB2GS()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgNeedCreateCharacterDB2GS)
}

void MsgNeedCreateCharacterDB2GS::InitAsDefaultInstance() {
}

MsgNeedCreateCharacterDB2GS::MsgNeedCreateCharacterDB2GS(const MsgNeedCreateCharacterDB2GS& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgNeedCreateCharacterDB2GS)
}

void MsgNeedCreateCharacterDB2GS::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgNeedCreateCharacterDB2GS::~MsgNeedCreateCharacterDB2GS() {
  // @@protoc_insertion_point(destructor:message.MsgNeedCreateCharacterDB2GS)
  SharedDtor();
}

void MsgNeedCreateCharacterDB2GS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgNeedCreateCharacterDB2GS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgNeedCreateCharacterDB2GS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgNeedCreateCharacterDB2GS_descriptor_;
}

const MsgNeedCreateCharacterDB2GS& MsgNeedCreateCharacterDB2GS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

MsgNeedCreateCharacterDB2GS* MsgNeedCreateCharacterDB2GS::default_instance_ = NULL;

MsgNeedCreateCharacterDB2GS* MsgNeedCreateCharacterDB2GS::New(::google::protobuf::Arena* arena) const {
  MsgNeedCreateCharacterDB2GS* n = new MsgNeedCreateCharacterDB2GS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgNeedCreateCharacterDB2GS::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgNeedCreateCharacterDB2GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgNeedCreateCharacterDB2GS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgNeedCreateCharacterDB2GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgNeedCreateCharacterDB2GS)
  return false;
#undef DO_
}

void MsgNeedCreateCharacterDB2GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgNeedCreateCharacterDB2GS)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgNeedCreateCharacterDB2GS)
}

::google::protobuf::uint8* MsgNeedCreateCharacterDB2GS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgNeedCreateCharacterDB2GS)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgNeedCreateCharacterDB2GS)
  return target;
}

int MsgNeedCreateCharacterDB2GS::ByteSize() const {
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgNeedCreateCharacterDB2GS::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgNeedCreateCharacterDB2GS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgNeedCreateCharacterDB2GS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgNeedCreateCharacterDB2GS::MergeFrom(const MsgNeedCreateCharacterDB2GS& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgNeedCreateCharacterDB2GS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgNeedCreateCharacterDB2GS::CopyFrom(const MsgNeedCreateCharacterDB2GS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgNeedCreateCharacterDB2GS::IsInitialized() const {

  return true;
}

void MsgNeedCreateCharacterDB2GS::Swap(MsgNeedCreateCharacterDB2GS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgNeedCreateCharacterDB2GS::InternalSwap(MsgNeedCreateCharacterDB2GS* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgNeedCreateCharacterDB2GS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgNeedCreateCharacterDB2GS_descriptor_;
  metadata.reflection = MsgNeedCreateCharacterDB2GS_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgNeedCreateCharacterDB2GS

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)
