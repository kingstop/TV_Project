// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_game_platform.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "msg_game_platform.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace IPlatformPayProto {

namespace {

const ::google::protobuf::Descriptor* MsgG2PRegisterReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgG2PRegisterReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgP2GRegisterRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgP2GRegisterRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgP2GKickOffAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgP2GKickOffAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgP2GOrderNotifyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgP2GOrderNotifyReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgG2POrderNotifyRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgG2POrderNotifyRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ErrorCodeAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ErrorCodeAck_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ipay_err_code_t_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_msg_5fgame_5fplatform_2eproto() {
  protobuf_AddDesc_msg_5fgame_5fplatform_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "msg_game_platform.proto");
  GOOGLE_CHECK(file != NULL);
  MsgG2PRegisterReq_descriptor_ = file->message_type(0);
  static const int MsgG2PRegisterReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgG2PRegisterReq, game_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgG2PRegisterReq, server_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgG2PRegisterReq, server_flag_),
  };
  MsgG2PRegisterReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgG2PRegisterReq_descriptor_,
      MsgG2PRegisterReq::default_instance_,
      MsgG2PRegisterReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgG2PRegisterReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgG2PRegisterReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgG2PRegisterReq, _internal_metadata_),
      -1);
  MsgP2GRegisterRsp_descriptor_ = file->message_type(1);
  static const int MsgP2GRegisterRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgP2GRegisterRsp, err_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgP2GRegisterRsp, err_msg_),
  };
  MsgP2GRegisterRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgP2GRegisterRsp_descriptor_,
      MsgP2GRegisterRsp::default_instance_,
      MsgP2GRegisterRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgP2GRegisterRsp, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgP2GRegisterRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgP2GRegisterRsp, _internal_metadata_),
      -1);
  MsgP2GKickOffAck_descriptor_ = file->message_type(2);
  static const int MsgP2GKickOffAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgP2GKickOffAck, last_reg_time_),
  };
  MsgP2GKickOffAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgP2GKickOffAck_descriptor_,
      MsgP2GKickOffAck::default_instance_,
      MsgP2GKickOffAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgP2GKickOffAck, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgP2GKickOffAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgP2GKickOffAck, _internal_metadata_),
      -1);
  MsgP2GOrderNotifyReq_descriptor_ = file->message_type(3);
  static const int MsgP2GOrderNotifyReq_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgP2GOrderNotifyReq, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgP2GOrderNotifyReq, server_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgP2GOrderNotifyReq, server_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgP2GOrderNotifyReq, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgP2GOrderNotifyReq, channel_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgP2GOrderNotifyReq, order_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgP2GOrderNotifyReq, product_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgP2GOrderNotifyReq, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgP2GOrderNotifyReq, ext_data_),
  };
  MsgP2GOrderNotifyReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgP2GOrderNotifyReq_descriptor_,
      MsgP2GOrderNotifyReq::default_instance_,
      MsgP2GOrderNotifyReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgP2GOrderNotifyReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgP2GOrderNotifyReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgP2GOrderNotifyReq, _internal_metadata_),
      -1);
  MsgG2POrderNotifyRsp_descriptor_ = file->message_type(4);
  static const int MsgG2POrderNotifyRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgG2POrderNotifyRsp, err_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgG2POrderNotifyRsp, order_id_),
  };
  MsgG2POrderNotifyRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgG2POrderNotifyRsp_descriptor_,
      MsgG2POrderNotifyRsp::default_instance_,
      MsgG2POrderNotifyRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgG2POrderNotifyRsp, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgG2POrderNotifyRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgG2POrderNotifyRsp, _internal_metadata_),
      -1);
  ErrorCodeAck_descriptor_ = file->message_type(5);
  static const int ErrorCodeAck_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorCodeAck, err_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorCodeAck, err_msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorCodeAck, ori_msg_typename_),
  };
  ErrorCodeAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ErrorCodeAck_descriptor_,
      ErrorCodeAck::default_instance_,
      ErrorCodeAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorCodeAck, _has_bits_[0]),
      -1,
      -1,
      sizeof(ErrorCodeAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorCodeAck, _internal_metadata_),
      -1);
  ipay_err_code_t_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_msg_5fgame_5fplatform_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgG2PRegisterReq_descriptor_, &MsgG2PRegisterReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgP2GRegisterRsp_descriptor_, &MsgP2GRegisterRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgP2GKickOffAck_descriptor_, &MsgP2GKickOffAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgP2GOrderNotifyReq_descriptor_, &MsgP2GOrderNotifyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgG2POrderNotifyRsp_descriptor_, &MsgG2POrderNotifyRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ErrorCodeAck_descriptor_, &ErrorCodeAck::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_msg_5fgame_5fplatform_2eproto() {
  delete MsgG2PRegisterReq::default_instance_;
  delete MsgG2PRegisterReq_reflection_;
  delete MsgP2GRegisterRsp::default_instance_;
  delete MsgP2GRegisterRsp_reflection_;
  delete MsgP2GKickOffAck::default_instance_;
  delete MsgP2GKickOffAck_reflection_;
  delete MsgP2GOrderNotifyReq::default_instance_;
  delete MsgP2GOrderNotifyReq_reflection_;
  delete MsgG2POrderNotifyRsp::default_instance_;
  delete MsgG2POrderNotifyRsp_reflection_;
  delete ErrorCodeAck::default_instance_;
  delete ErrorCodeAck_reflection_;
  delete ErrorCodeAck::_default_err_msg_;
  delete ErrorCodeAck::_default_ori_msg_typename_;
}

void protobuf_AddDesc_msg_5fgame_5fplatform_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027msg_game_platform.proto\022\021IPlatformPayP"
    "roto\"L\n\021MsgG2PRegisterReq\022\017\n\007game_id\030\001 \002"
    "(\r\022\021\n\tserver_id\030\002 \002(\r\022\023\n\013server_flag\030\003 \002"
    "(\r\"8\n\021MsgP2GRegisterRsp\022\020\n\010err_code\030\001 \002("
    "\005\022\021\n\007err_msg\030\002 \001(\t:\000\")\n\020MsgP2GKickOffAck"
    "\022\025\n\rlast_reg_time\030\001 \002(\r\"\272\001\n\024MsgP2GOrderN"
    "otifyReq\022\016\n\006status\030\001 \002(\r\022\021\n\tserver_id\030\002 "
    "\002(\r\022\023\n\013server_flag\030\003 \002(\r\022\017\n\007user_id\030\004 \002("
    "\004\022\022\n\nchannel_id\030\005 \002(\r\022\020\n\010order_id\030\006 \002(\r\022"
    "\022\n\nproduct_id\030\007 \002(\t\022\r\n\005price\030\010 \002(\r\022\020\n\010ex"
    "t_data\030\t \001(\t\":\n\024MsgG2POrderNotifyRsp\022\020\n\010"
    "err_code\030\001 \002(\005\022\020\n\010order_id\030\002 \002(\r\"c\n\014Erro"
    "rCodeAck\022\020\n\010err_code\030\001 \002(\005\022\036\n\007err_msg\030\002 "
    "\001(\t:\rdefault error\022!\n\020ori_msg_typename\030\003"
    " \001(\t:\007Unknown*\320\004\n\017ipay_err_code_t\022\017\n\013IPA"
    "Y_ERR_OK\020\000\022\026\n\021IPAY_ERR_SYS_BUSY\020\351\007\022\030\n\023IP"
    "AY_ERR_INV_PKGLEN\020\352\007\022\035\n\030IPAY_ERR_UNSUPPO"
    "RTED_MSG\020\353\007\022\034\n\027IPAY_ERR_NOT_ENOUGH_RES\020\354"
    "\007\022\"\n\035IPAY_ERR_UNSUPPORTED_MSG_TYPE\020\355\007\022\034\n"
    "\027IPAY_ERR_NOFOUND_SERVER\020\356\007\022\026\n\021IPAY_ERR_"
    "INV_SIGN\020\357\007\022\034\n\027IPAY_ERR_HAS_REGISTERED\020\321"
    "\017\022\031\n\024IPAY_ERR_REG_TIMEOUT\020\322\017\022\035\n\030IPAY_ERR"
    "_NO_MATCH_REG_FD\020\323\017\022\031\n\024IPAY_ERR_WRONG_OR"
    "DER\020\324\017\022\032\n\025IPAY_ERR_NO_SUCH_ITEM\020\325\017\022\037\n\032IP"
    "AY_ERR_ORDER_IN_HANDLING\020\326\017\022\037\n\032IPAY_ERR_"
    "ORDER_HAS_HANDLED\020\327\017\022\036\n\031IPAY_ERR_GAME_SE"
    "RVER_DOWN\020\330\017\022\031\n\024IPAY_ERR_NO_REG_GAME\020\271\027\022"
    "\032\n\025IPAY_ERR_NO_SUCH_USER\020\241\037\022\033\n\026IPAY_ERR_"
    "NO_SUCH_ORDER\020\242\037\022\036\n\031IPAY_ERR_ITEM_DECODE"
    "_FAIL\020\243\037", 1168);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg_game_platform.proto", &protobuf_RegisterTypes);
  MsgG2PRegisterReq::default_instance_ = new MsgG2PRegisterReq();
  MsgP2GRegisterRsp::default_instance_ = new MsgP2GRegisterRsp();
  MsgP2GKickOffAck::default_instance_ = new MsgP2GKickOffAck();
  MsgP2GOrderNotifyReq::default_instance_ = new MsgP2GOrderNotifyReq();
  MsgG2POrderNotifyRsp::default_instance_ = new MsgG2POrderNotifyRsp();
  ErrorCodeAck::_default_err_msg_ =
      new ::std::string("default error", 13);
  ErrorCodeAck::_default_ori_msg_typename_ =
      new ::std::string("Unknown", 7);
  ErrorCodeAck::default_instance_ = new ErrorCodeAck();
  MsgG2PRegisterReq::default_instance_->InitAsDefaultInstance();
  MsgP2GRegisterRsp::default_instance_->InitAsDefaultInstance();
  MsgP2GKickOffAck::default_instance_->InitAsDefaultInstance();
  MsgP2GOrderNotifyReq::default_instance_->InitAsDefaultInstance();
  MsgG2POrderNotifyRsp::default_instance_->InitAsDefaultInstance();
  ErrorCodeAck::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_msg_5fgame_5fplatform_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_msg_5fgame_5fplatform_2eproto {
  StaticDescriptorInitializer_msg_5fgame_5fplatform_2eproto() {
    protobuf_AddDesc_msg_5fgame_5fplatform_2eproto();
  }
} static_descriptor_initializer_msg_5fgame_5fplatform_2eproto_;
const ::google::protobuf::EnumDescriptor* ipay_err_code_t_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ipay_err_code_t_descriptor_;
}
bool ipay_err_code_t_IsValid(int value) {
  switch(value) {
    case 0:
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 1005:
    case 1006:
    case 1007:
    case 2001:
    case 2002:
    case 2003:
    case 2004:
    case 2005:
    case 2006:
    case 2007:
    case 2008:
    case 3001:
    case 4001:
    case 4002:
    case 4003:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int MsgG2PRegisterReq::kGameIdFieldNumber;
const int MsgG2PRegisterReq::kServerIdFieldNumber;
const int MsgG2PRegisterReq::kServerFlagFieldNumber;
#endif  // !_MSC_VER

MsgG2PRegisterReq::MsgG2PRegisterReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IPlatformPayProto.MsgG2PRegisterReq)
}

void MsgG2PRegisterReq::InitAsDefaultInstance() {
}

MsgG2PRegisterReq::MsgG2PRegisterReq(const MsgG2PRegisterReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:IPlatformPayProto.MsgG2PRegisterReq)
}

void MsgG2PRegisterReq::SharedCtor() {
  _cached_size_ = 0;
  game_id_ = 0u;
  server_id_ = 0u;
  server_flag_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgG2PRegisterReq::~MsgG2PRegisterReq() {
  // @@protoc_insertion_point(destructor:IPlatformPayProto.MsgG2PRegisterReq)
  SharedDtor();
}

void MsgG2PRegisterReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgG2PRegisterReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgG2PRegisterReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgG2PRegisterReq_descriptor_;
}

const MsgG2PRegisterReq& MsgG2PRegisterReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fplatform_2eproto();
  return *default_instance_;
}

MsgG2PRegisterReq* MsgG2PRegisterReq::default_instance_ = NULL;

MsgG2PRegisterReq* MsgG2PRegisterReq::New(::google::protobuf::Arena* arena) const {
  MsgG2PRegisterReq* n = new MsgG2PRegisterReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgG2PRegisterReq::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgG2PRegisterReq*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(game_id_, server_flag_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgG2PRegisterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IPlatformPayProto.MsgG2PRegisterReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 game_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_id_)));
          set_has_game_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_server_id;
        break;
      }

      // required uint32 server_id = 2;
      case 2: {
        if (tag == 16) {
         parse_server_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_id_)));
          set_has_server_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_server_flag;
        break;
      }

      // required uint32 server_flag = 3;
      case 3: {
        if (tag == 24) {
         parse_server_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_flag_)));
          set_has_server_flag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IPlatformPayProto.MsgG2PRegisterReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IPlatformPayProto.MsgG2PRegisterReq)
  return false;
#undef DO_
}

void MsgG2PRegisterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IPlatformPayProto.MsgG2PRegisterReq)
  // required uint32 game_id = 1;
  if (has_game_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->game_id(), output);
  }

  // required uint32 server_id = 2;
  if (has_server_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->server_id(), output);
  }

  // required uint32 server_flag = 3;
  if (has_server_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->server_flag(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:IPlatformPayProto.MsgG2PRegisterReq)
}

::google::protobuf::uint8* MsgG2PRegisterReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:IPlatformPayProto.MsgG2PRegisterReq)
  // required uint32 game_id = 1;
  if (has_game_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->game_id(), target);
  }

  // required uint32 server_id = 2;
  if (has_server_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->server_id(), target);
  }

  // required uint32 server_flag = 3;
  if (has_server_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->server_flag(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IPlatformPayProto.MsgG2PRegisterReq)
  return target;
}

int MsgG2PRegisterReq::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_game_id()) {
    // required uint32 game_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->game_id());
  }

  if (has_server_id()) {
    // required uint32 server_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_id());
  }

  if (has_server_flag()) {
    // required uint32 server_flag = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_flag());
  }

  return total_size;
}
int MsgG2PRegisterReq::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 game_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->game_id());

    // required uint32 server_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_id());

    // required uint32 server_flag = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_flag());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgG2PRegisterReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgG2PRegisterReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgG2PRegisterReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgG2PRegisterReq::MergeFrom(const MsgG2PRegisterReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_game_id()) {
      set_game_id(from.game_id());
    }
    if (from.has_server_id()) {
      set_server_id(from.server_id());
    }
    if (from.has_server_flag()) {
      set_server_flag(from.server_flag());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgG2PRegisterReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgG2PRegisterReq::CopyFrom(const MsgG2PRegisterReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgG2PRegisterReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void MsgG2PRegisterReq::Swap(MsgG2PRegisterReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgG2PRegisterReq::InternalSwap(MsgG2PRegisterReq* other) {
  std::swap(game_id_, other->game_id_);
  std::swap(server_id_, other->server_id_);
  std::swap(server_flag_, other->server_flag_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgG2PRegisterReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgG2PRegisterReq_descriptor_;
  metadata.reflection = MsgG2PRegisterReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgG2PRegisterReq

// required uint32 game_id = 1;
 bool MsgG2PRegisterReq::has_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgG2PRegisterReq::set_has_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgG2PRegisterReq::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgG2PRegisterReq::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
 ::google::protobuf::uint32 MsgG2PRegisterReq::game_id() const {
  // @@protoc_insertion_point(field_get:IPlatformPayProto.MsgG2PRegisterReq.game_id)
  return game_id_;
}
 void MsgG2PRegisterReq::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:IPlatformPayProto.MsgG2PRegisterReq.game_id)
}

// required uint32 server_id = 2;
 bool MsgG2PRegisterReq::has_server_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgG2PRegisterReq::set_has_server_id() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgG2PRegisterReq::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgG2PRegisterReq::clear_server_id() {
  server_id_ = 0u;
  clear_has_server_id();
}
 ::google::protobuf::uint32 MsgG2PRegisterReq::server_id() const {
  // @@protoc_insertion_point(field_get:IPlatformPayProto.MsgG2PRegisterReq.server_id)
  return server_id_;
}
 void MsgG2PRegisterReq::set_server_id(::google::protobuf::uint32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:IPlatformPayProto.MsgG2PRegisterReq.server_id)
}

// required uint32 server_flag = 3;
 bool MsgG2PRegisterReq::has_server_flag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void MsgG2PRegisterReq::set_has_server_flag() {
  _has_bits_[0] |= 0x00000004u;
}
 void MsgG2PRegisterReq::clear_has_server_flag() {
  _has_bits_[0] &= ~0x00000004u;
}
 void MsgG2PRegisterReq::clear_server_flag() {
  server_flag_ = 0u;
  clear_has_server_flag();
}
 ::google::protobuf::uint32 MsgG2PRegisterReq::server_flag() const {
  // @@protoc_insertion_point(field_get:IPlatformPayProto.MsgG2PRegisterReq.server_flag)
  return server_flag_;
}
 void MsgG2PRegisterReq::set_server_flag(::google::protobuf::uint32 value) {
  set_has_server_flag();
  server_flag_ = value;
  // @@protoc_insertion_point(field_set:IPlatformPayProto.MsgG2PRegisterReq.server_flag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgP2GRegisterRsp::kErrCodeFieldNumber;
const int MsgP2GRegisterRsp::kErrMsgFieldNumber;
#endif  // !_MSC_VER

MsgP2GRegisterRsp::MsgP2GRegisterRsp()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IPlatformPayProto.MsgP2GRegisterRsp)
}

void MsgP2GRegisterRsp::InitAsDefaultInstance() {
}

MsgP2GRegisterRsp::MsgP2GRegisterRsp(const MsgP2GRegisterRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:IPlatformPayProto.MsgP2GRegisterRsp)
}

void MsgP2GRegisterRsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  err_code_ = 0;
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgP2GRegisterRsp::~MsgP2GRegisterRsp() {
  // @@protoc_insertion_point(destructor:IPlatformPayProto.MsgP2GRegisterRsp)
  SharedDtor();
}

void MsgP2GRegisterRsp::SharedDtor() {
  err_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgP2GRegisterRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgP2GRegisterRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgP2GRegisterRsp_descriptor_;
}

const MsgP2GRegisterRsp& MsgP2GRegisterRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fplatform_2eproto();
  return *default_instance_;
}

MsgP2GRegisterRsp* MsgP2GRegisterRsp::default_instance_ = NULL;

MsgP2GRegisterRsp* MsgP2GRegisterRsp::New(::google::protobuf::Arena* arena) const {
  MsgP2GRegisterRsp* n = new MsgP2GRegisterRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgP2GRegisterRsp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    err_code_ = 0;
    if (has_err_msg()) {
      err_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgP2GRegisterRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IPlatformPayProto.MsgP2GRegisterRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 err_code = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_code_)));
          set_has_err_code();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err_msg;
        break;
      }

      // optional string err_msg = 2 [default = ""];
      case 2: {
        if (tag == 18) {
         parse_err_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err_msg().data(), this->err_msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "IPlatformPayProto.MsgP2GRegisterRsp.err_msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IPlatformPayProto.MsgP2GRegisterRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IPlatformPayProto.MsgP2GRegisterRsp)
  return false;
#undef DO_
}

void MsgP2GRegisterRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IPlatformPayProto.MsgP2GRegisterRsp)
  // required int32 err_code = 1;
  if (has_err_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->err_code(), output);
  }

  // optional string err_msg = 2 [default = ""];
  if (has_err_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err_msg().data(), this->err_msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "IPlatformPayProto.MsgP2GRegisterRsp.err_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err_msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:IPlatformPayProto.MsgP2GRegisterRsp)
}

::google::protobuf::uint8* MsgP2GRegisterRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:IPlatformPayProto.MsgP2GRegisterRsp)
  // required int32 err_code = 1;
  if (has_err_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->err_code(), target);
  }

  // optional string err_msg = 2 [default = ""];
  if (has_err_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err_msg().data(), this->err_msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "IPlatformPayProto.MsgP2GRegisterRsp.err_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err_msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IPlatformPayProto.MsgP2GRegisterRsp)
  return target;
}

int MsgP2GRegisterRsp::ByteSize() const {
  int total_size = 0;

  // required int32 err_code = 1;
  if (has_err_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err_code());
  }
  // optional string err_msg = 2 [default = ""];
  if (has_err_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err_msg());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgP2GRegisterRsp::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgP2GRegisterRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgP2GRegisterRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgP2GRegisterRsp::MergeFrom(const MsgP2GRegisterRsp& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err_code()) {
      set_err_code(from.err_code());
    }
    if (from.has_err_msg()) {
      set_has_err_msg();
      err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgP2GRegisterRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgP2GRegisterRsp::CopyFrom(const MsgP2GRegisterRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgP2GRegisterRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MsgP2GRegisterRsp::Swap(MsgP2GRegisterRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgP2GRegisterRsp::InternalSwap(MsgP2GRegisterRsp* other) {
  std::swap(err_code_, other->err_code_);
  err_msg_.Swap(&other->err_msg_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgP2GRegisterRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgP2GRegisterRsp_descriptor_;
  metadata.reflection = MsgP2GRegisterRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgP2GRegisterRsp

// required int32 err_code = 1;
 bool MsgP2GRegisterRsp::has_err_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgP2GRegisterRsp::set_has_err_code() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgP2GRegisterRsp::clear_has_err_code() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgP2GRegisterRsp::clear_err_code() {
  err_code_ = 0;
  clear_has_err_code();
}
 ::google::protobuf::int32 MsgP2GRegisterRsp::err_code() const {
  // @@protoc_insertion_point(field_get:IPlatformPayProto.MsgP2GRegisterRsp.err_code)
  return err_code_;
}
 void MsgP2GRegisterRsp::set_err_code(::google::protobuf::int32 value) {
  set_has_err_code();
  err_code_ = value;
  // @@protoc_insertion_point(field_set:IPlatformPayProto.MsgP2GRegisterRsp.err_code)
}

// optional string err_msg = 2 [default = ""];
 bool MsgP2GRegisterRsp::has_err_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgP2GRegisterRsp::set_has_err_msg() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgP2GRegisterRsp::clear_has_err_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgP2GRegisterRsp::clear_err_msg() {
  err_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err_msg();
}
 const ::std::string& MsgP2GRegisterRsp::err_msg() const {
  // @@protoc_insertion_point(field_get:IPlatformPayProto.MsgP2GRegisterRsp.err_msg)
  return err_msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgP2GRegisterRsp::set_err_msg(const ::std::string& value) {
  set_has_err_msg();
  err_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IPlatformPayProto.MsgP2GRegisterRsp.err_msg)
}
 void MsgP2GRegisterRsp::set_err_msg(const char* value) {
  set_has_err_msg();
  err_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IPlatformPayProto.MsgP2GRegisterRsp.err_msg)
}
 void MsgP2GRegisterRsp::set_err_msg(const char* value, size_t size) {
  set_has_err_msg();
  err_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IPlatformPayProto.MsgP2GRegisterRsp.err_msg)
}
 ::std::string* MsgP2GRegisterRsp::mutable_err_msg() {
  set_has_err_msg();
  // @@protoc_insertion_point(field_mutable:IPlatformPayProto.MsgP2GRegisterRsp.err_msg)
  return err_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgP2GRegisterRsp::release_err_msg() {
  clear_has_err_msg();
  return err_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgP2GRegisterRsp::set_allocated_err_msg(::std::string* err_msg) {
  if (err_msg != NULL) {
    set_has_err_msg();
  } else {
    clear_has_err_msg();
  }
  err_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err_msg);
  // @@protoc_insertion_point(field_set_allocated:IPlatformPayProto.MsgP2GRegisterRsp.err_msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgP2GKickOffAck::kLastRegTimeFieldNumber;
#endif  // !_MSC_VER

MsgP2GKickOffAck::MsgP2GKickOffAck()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IPlatformPayProto.MsgP2GKickOffAck)
}

void MsgP2GKickOffAck::InitAsDefaultInstance() {
}

MsgP2GKickOffAck::MsgP2GKickOffAck(const MsgP2GKickOffAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:IPlatformPayProto.MsgP2GKickOffAck)
}

void MsgP2GKickOffAck::SharedCtor() {
  _cached_size_ = 0;
  last_reg_time_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgP2GKickOffAck::~MsgP2GKickOffAck() {
  // @@protoc_insertion_point(destructor:IPlatformPayProto.MsgP2GKickOffAck)
  SharedDtor();
}

void MsgP2GKickOffAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgP2GKickOffAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgP2GKickOffAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgP2GKickOffAck_descriptor_;
}

const MsgP2GKickOffAck& MsgP2GKickOffAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fplatform_2eproto();
  return *default_instance_;
}

MsgP2GKickOffAck* MsgP2GKickOffAck::default_instance_ = NULL;

MsgP2GKickOffAck* MsgP2GKickOffAck::New(::google::protobuf::Arena* arena) const {
  MsgP2GKickOffAck* n = new MsgP2GKickOffAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgP2GKickOffAck::Clear() {
  last_reg_time_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgP2GKickOffAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IPlatformPayProto.MsgP2GKickOffAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 last_reg_time = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_reg_time_)));
          set_has_last_reg_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IPlatformPayProto.MsgP2GKickOffAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IPlatformPayProto.MsgP2GKickOffAck)
  return false;
#undef DO_
}

void MsgP2GKickOffAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IPlatformPayProto.MsgP2GKickOffAck)
  // required uint32 last_reg_time = 1;
  if (has_last_reg_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->last_reg_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:IPlatformPayProto.MsgP2GKickOffAck)
}

::google::protobuf::uint8* MsgP2GKickOffAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:IPlatformPayProto.MsgP2GKickOffAck)
  // required uint32 last_reg_time = 1;
  if (has_last_reg_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->last_reg_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IPlatformPayProto.MsgP2GKickOffAck)
  return target;
}

int MsgP2GKickOffAck::ByteSize() const {
  int total_size = 0;

  // required uint32 last_reg_time = 1;
  if (has_last_reg_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_reg_time());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgP2GKickOffAck::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgP2GKickOffAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgP2GKickOffAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgP2GKickOffAck::MergeFrom(const MsgP2GKickOffAck& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_last_reg_time()) {
      set_last_reg_time(from.last_reg_time());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgP2GKickOffAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgP2GKickOffAck::CopyFrom(const MsgP2GKickOffAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgP2GKickOffAck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MsgP2GKickOffAck::Swap(MsgP2GKickOffAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgP2GKickOffAck::InternalSwap(MsgP2GKickOffAck* other) {
  std::swap(last_reg_time_, other->last_reg_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgP2GKickOffAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgP2GKickOffAck_descriptor_;
  metadata.reflection = MsgP2GKickOffAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgP2GKickOffAck

// required uint32 last_reg_time = 1;
 bool MsgP2GKickOffAck::has_last_reg_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgP2GKickOffAck::set_has_last_reg_time() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgP2GKickOffAck::clear_has_last_reg_time() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgP2GKickOffAck::clear_last_reg_time() {
  last_reg_time_ = 0u;
  clear_has_last_reg_time();
}
 ::google::protobuf::uint32 MsgP2GKickOffAck::last_reg_time() const {
  // @@protoc_insertion_point(field_get:IPlatformPayProto.MsgP2GKickOffAck.last_reg_time)
  return last_reg_time_;
}
 void MsgP2GKickOffAck::set_last_reg_time(::google::protobuf::uint32 value) {
  set_has_last_reg_time();
  last_reg_time_ = value;
  // @@protoc_insertion_point(field_set:IPlatformPayProto.MsgP2GKickOffAck.last_reg_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgP2GOrderNotifyReq::kStatusFieldNumber;
const int MsgP2GOrderNotifyReq::kServerIdFieldNumber;
const int MsgP2GOrderNotifyReq::kServerFlagFieldNumber;
const int MsgP2GOrderNotifyReq::kUserIdFieldNumber;
const int MsgP2GOrderNotifyReq::kChannelIdFieldNumber;
const int MsgP2GOrderNotifyReq::kOrderIdFieldNumber;
const int MsgP2GOrderNotifyReq::kProductIdFieldNumber;
const int MsgP2GOrderNotifyReq::kPriceFieldNumber;
const int MsgP2GOrderNotifyReq::kExtDataFieldNumber;
#endif  // !_MSC_VER

MsgP2GOrderNotifyReq::MsgP2GOrderNotifyReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IPlatformPayProto.MsgP2GOrderNotifyReq)
}

void MsgP2GOrderNotifyReq::InitAsDefaultInstance() {
}

MsgP2GOrderNotifyReq::MsgP2GOrderNotifyReq(const MsgP2GOrderNotifyReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:IPlatformPayProto.MsgP2GOrderNotifyReq)
}

void MsgP2GOrderNotifyReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 0u;
  server_id_ = 0u;
  server_flag_ = 0u;
  user_id_ = GOOGLE_ULONGLONG(0);
  channel_id_ = 0u;
  order_id_ = 0u;
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_ = 0u;
  ext_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgP2GOrderNotifyReq::~MsgP2GOrderNotifyReq() {
  // @@protoc_insertion_point(destructor:IPlatformPayProto.MsgP2GOrderNotifyReq)
  SharedDtor();
}

void MsgP2GOrderNotifyReq::SharedDtor() {
  product_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ext_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgP2GOrderNotifyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgP2GOrderNotifyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgP2GOrderNotifyReq_descriptor_;
}

const MsgP2GOrderNotifyReq& MsgP2GOrderNotifyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fplatform_2eproto();
  return *default_instance_;
}

MsgP2GOrderNotifyReq* MsgP2GOrderNotifyReq::default_instance_ = NULL;

MsgP2GOrderNotifyReq* MsgP2GOrderNotifyReq::New(::google::protobuf::Arena* arena) const {
  MsgP2GOrderNotifyReq* n = new MsgP2GOrderNotifyReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgP2GOrderNotifyReq::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgP2GOrderNotifyReq*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(status_, channel_id_);
    ZR_(order_id_, price_);
    if (has_product_id()) {
      product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (has_ext_data()) {
    ext_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgP2GOrderNotifyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IPlatformPayProto.MsgP2GOrderNotifyReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_server_id;
        break;
      }

      // required uint32 server_id = 2;
      case 2: {
        if (tag == 16) {
         parse_server_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_id_)));
          set_has_server_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_server_flag;
        break;
      }

      // required uint32 server_flag = 3;
      case 3: {
        if (tag == 24) {
         parse_server_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_flag_)));
          set_has_server_flag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_user_id;
        break;
      }

      // required uint64 user_id = 4;
      case 4: {
        if (tag == 32) {
         parse_user_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_channel_id;
        break;
      }

      // required uint32 channel_id = 5;
      case 5: {
        if (tag == 40) {
         parse_channel_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_id_)));
          set_has_channel_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_order_id;
        break;
      }

      // required uint32 order_id = 6;
      case 6: {
        if (tag == 48) {
         parse_order_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &order_id_)));
          set_has_order_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_product_id;
        break;
      }

      // required string product_id = 7;
      case 7: {
        if (tag == 58) {
         parse_product_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->product_id().data(), this->product_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "IPlatformPayProto.MsgP2GOrderNotifyReq.product_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_price;
        break;
      }

      // required uint32 price = 8;
      case 8: {
        if (tag == 64) {
         parse_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_)));
          set_has_price();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_ext_data;
        break;
      }

      // optional string ext_data = 9;
      case 9: {
        if (tag == 74) {
         parse_ext_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ext_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ext_data().data(), this->ext_data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "IPlatformPayProto.MsgP2GOrderNotifyReq.ext_data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IPlatformPayProto.MsgP2GOrderNotifyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IPlatformPayProto.MsgP2GOrderNotifyReq)
  return false;
#undef DO_
}

void MsgP2GOrderNotifyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IPlatformPayProto.MsgP2GOrderNotifyReq)
  // required uint32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->status(), output);
  }

  // required uint32 server_id = 2;
  if (has_server_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->server_id(), output);
  }

  // required uint32 server_flag = 3;
  if (has_server_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->server_flag(), output);
  }

  // required uint64 user_id = 4;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->user_id(), output);
  }

  // required uint32 channel_id = 5;
  if (has_channel_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->channel_id(), output);
  }

  // required uint32 order_id = 6;
  if (has_order_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->order_id(), output);
  }

  // required string product_id = 7;
  if (has_product_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->product_id().data(), this->product_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "IPlatformPayProto.MsgP2GOrderNotifyReq.product_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->product_id(), output);
  }

  // required uint32 price = 8;
  if (has_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->price(), output);
  }

  // optional string ext_data = 9;
  if (has_ext_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ext_data().data(), this->ext_data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "IPlatformPayProto.MsgP2GOrderNotifyReq.ext_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->ext_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:IPlatformPayProto.MsgP2GOrderNotifyReq)
}

::google::protobuf::uint8* MsgP2GOrderNotifyReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:IPlatformPayProto.MsgP2GOrderNotifyReq)
  // required uint32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->status(), target);
  }

  // required uint32 server_id = 2;
  if (has_server_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->server_id(), target);
  }

  // required uint32 server_flag = 3;
  if (has_server_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->server_flag(), target);
  }

  // required uint64 user_id = 4;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->user_id(), target);
  }

  // required uint32 channel_id = 5;
  if (has_channel_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->channel_id(), target);
  }

  // required uint32 order_id = 6;
  if (has_order_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->order_id(), target);
  }

  // required string product_id = 7;
  if (has_product_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->product_id().data(), this->product_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "IPlatformPayProto.MsgP2GOrderNotifyReq.product_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->product_id(), target);
  }

  // required uint32 price = 8;
  if (has_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->price(), target);
  }

  // optional string ext_data = 9;
  if (has_ext_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ext_data().data(), this->ext_data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "IPlatformPayProto.MsgP2GOrderNotifyReq.ext_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->ext_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IPlatformPayProto.MsgP2GOrderNotifyReq)
  return target;
}

int MsgP2GOrderNotifyReq::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_status()) {
    // required uint32 status = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  if (has_server_id()) {
    // required uint32 server_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_id());
  }

  if (has_server_flag()) {
    // required uint32 server_flag = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_flag());
  }

  if (has_user_id()) {
    // required uint64 user_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());
  }

  if (has_channel_id()) {
    // required uint32 channel_id = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel_id());
  }

  if (has_order_id()) {
    // required uint32 order_id = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->order_id());
  }

  if (has_product_id()) {
    // required string product_id = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_id());
  }

  if (has_price()) {
    // required uint32 price = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->price());
  }

  return total_size;
}
int MsgP2GOrderNotifyReq::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x000000ff) ^ 0x000000ff) == 0) {  // All required fields are present.
    // required uint32 status = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());

    // required uint32 server_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_id());

    // required uint32 server_flag = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_flag());

    // required uint64 user_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());

    // required uint32 channel_id = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel_id());

    // required uint32 order_id = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->order_id());

    // required string product_id = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_id());

    // required uint32 price = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->price());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string ext_data = 9;
  if (has_ext_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ext_data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgP2GOrderNotifyReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgP2GOrderNotifyReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgP2GOrderNotifyReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgP2GOrderNotifyReq::MergeFrom(const MsgP2GOrderNotifyReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_server_id()) {
      set_server_id(from.server_id());
    }
    if (from.has_server_flag()) {
      set_server_flag(from.server_flag());
    }
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
    if (from.has_channel_id()) {
      set_channel_id(from.channel_id());
    }
    if (from.has_order_id()) {
      set_order_id(from.order_id());
    }
    if (from.has_product_id()) {
      set_has_product_id();
      product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
    }
    if (from.has_price()) {
      set_price(from.price());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_ext_data()) {
      set_has_ext_data();
      ext_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ext_data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgP2GOrderNotifyReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgP2GOrderNotifyReq::CopyFrom(const MsgP2GOrderNotifyReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgP2GOrderNotifyReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;

  return true;
}

void MsgP2GOrderNotifyReq::Swap(MsgP2GOrderNotifyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgP2GOrderNotifyReq::InternalSwap(MsgP2GOrderNotifyReq* other) {
  std::swap(status_, other->status_);
  std::swap(server_id_, other->server_id_);
  std::swap(server_flag_, other->server_flag_);
  std::swap(user_id_, other->user_id_);
  std::swap(channel_id_, other->channel_id_);
  std::swap(order_id_, other->order_id_);
  product_id_.Swap(&other->product_id_);
  std::swap(price_, other->price_);
  ext_data_.Swap(&other->ext_data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgP2GOrderNotifyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgP2GOrderNotifyReq_descriptor_;
  metadata.reflection = MsgP2GOrderNotifyReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgP2GOrderNotifyReq

// required uint32 status = 1;
 bool MsgP2GOrderNotifyReq::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgP2GOrderNotifyReq::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgP2GOrderNotifyReq::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgP2GOrderNotifyReq::clear_status() {
  status_ = 0u;
  clear_has_status();
}
 ::google::protobuf::uint32 MsgP2GOrderNotifyReq::status() const {
  // @@protoc_insertion_point(field_get:IPlatformPayProto.MsgP2GOrderNotifyReq.status)
  return status_;
}
 void MsgP2GOrderNotifyReq::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:IPlatformPayProto.MsgP2GOrderNotifyReq.status)
}

// required uint32 server_id = 2;
 bool MsgP2GOrderNotifyReq::has_server_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgP2GOrderNotifyReq::set_has_server_id() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgP2GOrderNotifyReq::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgP2GOrderNotifyReq::clear_server_id() {
  server_id_ = 0u;
  clear_has_server_id();
}
 ::google::protobuf::uint32 MsgP2GOrderNotifyReq::server_id() const {
  // @@protoc_insertion_point(field_get:IPlatformPayProto.MsgP2GOrderNotifyReq.server_id)
  return server_id_;
}
 void MsgP2GOrderNotifyReq::set_server_id(::google::protobuf::uint32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:IPlatformPayProto.MsgP2GOrderNotifyReq.server_id)
}

// required uint32 server_flag = 3;
 bool MsgP2GOrderNotifyReq::has_server_flag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void MsgP2GOrderNotifyReq::set_has_server_flag() {
  _has_bits_[0] |= 0x00000004u;
}
 void MsgP2GOrderNotifyReq::clear_has_server_flag() {
  _has_bits_[0] &= ~0x00000004u;
}
 void MsgP2GOrderNotifyReq::clear_server_flag() {
  server_flag_ = 0u;
  clear_has_server_flag();
}
 ::google::protobuf::uint32 MsgP2GOrderNotifyReq::server_flag() const {
  // @@protoc_insertion_point(field_get:IPlatformPayProto.MsgP2GOrderNotifyReq.server_flag)
  return server_flag_;
}
 void MsgP2GOrderNotifyReq::set_server_flag(::google::protobuf::uint32 value) {
  set_has_server_flag();
  server_flag_ = value;
  // @@protoc_insertion_point(field_set:IPlatformPayProto.MsgP2GOrderNotifyReq.server_flag)
}

// required uint64 user_id = 4;
 bool MsgP2GOrderNotifyReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void MsgP2GOrderNotifyReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000008u;
}
 void MsgP2GOrderNotifyReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000008u;
}
 void MsgP2GOrderNotifyReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
 ::google::protobuf::uint64 MsgP2GOrderNotifyReq::user_id() const {
  // @@protoc_insertion_point(field_get:IPlatformPayProto.MsgP2GOrderNotifyReq.user_id)
  return user_id_;
}
 void MsgP2GOrderNotifyReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IPlatformPayProto.MsgP2GOrderNotifyReq.user_id)
}

// required uint32 channel_id = 5;
 bool MsgP2GOrderNotifyReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void MsgP2GOrderNotifyReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000010u;
}
 void MsgP2GOrderNotifyReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000010u;
}
 void MsgP2GOrderNotifyReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
 ::google::protobuf::uint32 MsgP2GOrderNotifyReq::channel_id() const {
  // @@protoc_insertion_point(field_get:IPlatformPayProto.MsgP2GOrderNotifyReq.channel_id)
  return channel_id_;
}
 void MsgP2GOrderNotifyReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:IPlatformPayProto.MsgP2GOrderNotifyReq.channel_id)
}

// required uint32 order_id = 6;
 bool MsgP2GOrderNotifyReq::has_order_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void MsgP2GOrderNotifyReq::set_has_order_id() {
  _has_bits_[0] |= 0x00000020u;
}
 void MsgP2GOrderNotifyReq::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000020u;
}
 void MsgP2GOrderNotifyReq::clear_order_id() {
  order_id_ = 0u;
  clear_has_order_id();
}
 ::google::protobuf::uint32 MsgP2GOrderNotifyReq::order_id() const {
  // @@protoc_insertion_point(field_get:IPlatformPayProto.MsgP2GOrderNotifyReq.order_id)
  return order_id_;
}
 void MsgP2GOrderNotifyReq::set_order_id(::google::protobuf::uint32 value) {
  set_has_order_id();
  order_id_ = value;
  // @@protoc_insertion_point(field_set:IPlatformPayProto.MsgP2GOrderNotifyReq.order_id)
}

// required string product_id = 7;
 bool MsgP2GOrderNotifyReq::has_product_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
 void MsgP2GOrderNotifyReq::set_has_product_id() {
  _has_bits_[0] |= 0x00000040u;
}
 void MsgP2GOrderNotifyReq::clear_has_product_id() {
  _has_bits_[0] &= ~0x00000040u;
}
 void MsgP2GOrderNotifyReq::clear_product_id() {
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_product_id();
}
 const ::std::string& MsgP2GOrderNotifyReq::product_id() const {
  // @@protoc_insertion_point(field_get:IPlatformPayProto.MsgP2GOrderNotifyReq.product_id)
  return product_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgP2GOrderNotifyReq::set_product_id(const ::std::string& value) {
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IPlatformPayProto.MsgP2GOrderNotifyReq.product_id)
}
 void MsgP2GOrderNotifyReq::set_product_id(const char* value) {
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IPlatformPayProto.MsgP2GOrderNotifyReq.product_id)
}
 void MsgP2GOrderNotifyReq::set_product_id(const char* value, size_t size) {
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IPlatformPayProto.MsgP2GOrderNotifyReq.product_id)
}
 ::std::string* MsgP2GOrderNotifyReq::mutable_product_id() {
  set_has_product_id();
  // @@protoc_insertion_point(field_mutable:IPlatformPayProto.MsgP2GOrderNotifyReq.product_id)
  return product_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgP2GOrderNotifyReq::release_product_id() {
  clear_has_product_id();
  return product_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgP2GOrderNotifyReq::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    set_has_product_id();
  } else {
    clear_has_product_id();
  }
  product_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:IPlatformPayProto.MsgP2GOrderNotifyReq.product_id)
}

// required uint32 price = 8;
 bool MsgP2GOrderNotifyReq::has_price() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
 void MsgP2GOrderNotifyReq::set_has_price() {
  _has_bits_[0] |= 0x00000080u;
}
 void MsgP2GOrderNotifyReq::clear_has_price() {
  _has_bits_[0] &= ~0x00000080u;
}
 void MsgP2GOrderNotifyReq::clear_price() {
  price_ = 0u;
  clear_has_price();
}
 ::google::protobuf::uint32 MsgP2GOrderNotifyReq::price() const {
  // @@protoc_insertion_point(field_get:IPlatformPayProto.MsgP2GOrderNotifyReq.price)
  return price_;
}
 void MsgP2GOrderNotifyReq::set_price(::google::protobuf::uint32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:IPlatformPayProto.MsgP2GOrderNotifyReq.price)
}

// optional string ext_data = 9;
 bool MsgP2GOrderNotifyReq::has_ext_data() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
 void MsgP2GOrderNotifyReq::set_has_ext_data() {
  _has_bits_[0] |= 0x00000100u;
}
 void MsgP2GOrderNotifyReq::clear_has_ext_data() {
  _has_bits_[0] &= ~0x00000100u;
}
 void MsgP2GOrderNotifyReq::clear_ext_data() {
  ext_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ext_data();
}
 const ::std::string& MsgP2GOrderNotifyReq::ext_data() const {
  // @@protoc_insertion_point(field_get:IPlatformPayProto.MsgP2GOrderNotifyReq.ext_data)
  return ext_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgP2GOrderNotifyReq::set_ext_data(const ::std::string& value) {
  set_has_ext_data();
  ext_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IPlatformPayProto.MsgP2GOrderNotifyReq.ext_data)
}
 void MsgP2GOrderNotifyReq::set_ext_data(const char* value) {
  set_has_ext_data();
  ext_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IPlatformPayProto.MsgP2GOrderNotifyReq.ext_data)
}
 void MsgP2GOrderNotifyReq::set_ext_data(const char* value, size_t size) {
  set_has_ext_data();
  ext_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IPlatformPayProto.MsgP2GOrderNotifyReq.ext_data)
}
 ::std::string* MsgP2GOrderNotifyReq::mutable_ext_data() {
  set_has_ext_data();
  // @@protoc_insertion_point(field_mutable:IPlatformPayProto.MsgP2GOrderNotifyReq.ext_data)
  return ext_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgP2GOrderNotifyReq::release_ext_data() {
  clear_has_ext_data();
  return ext_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgP2GOrderNotifyReq::set_allocated_ext_data(::std::string* ext_data) {
  if (ext_data != NULL) {
    set_has_ext_data();
  } else {
    clear_has_ext_data();
  }
  ext_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ext_data);
  // @@protoc_insertion_point(field_set_allocated:IPlatformPayProto.MsgP2GOrderNotifyReq.ext_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgG2POrderNotifyRsp::kErrCodeFieldNumber;
const int MsgG2POrderNotifyRsp::kOrderIdFieldNumber;
#endif  // !_MSC_VER

MsgG2POrderNotifyRsp::MsgG2POrderNotifyRsp()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IPlatformPayProto.MsgG2POrderNotifyRsp)
}

void MsgG2POrderNotifyRsp::InitAsDefaultInstance() {
}

MsgG2POrderNotifyRsp::MsgG2POrderNotifyRsp(const MsgG2POrderNotifyRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:IPlatformPayProto.MsgG2POrderNotifyRsp)
}

void MsgG2POrderNotifyRsp::SharedCtor() {
  _cached_size_ = 0;
  err_code_ = 0;
  order_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgG2POrderNotifyRsp::~MsgG2POrderNotifyRsp() {
  // @@protoc_insertion_point(destructor:IPlatformPayProto.MsgG2POrderNotifyRsp)
  SharedDtor();
}

void MsgG2POrderNotifyRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgG2POrderNotifyRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgG2POrderNotifyRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgG2POrderNotifyRsp_descriptor_;
}

const MsgG2POrderNotifyRsp& MsgG2POrderNotifyRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fplatform_2eproto();
  return *default_instance_;
}

MsgG2POrderNotifyRsp* MsgG2POrderNotifyRsp::default_instance_ = NULL;

MsgG2POrderNotifyRsp* MsgG2POrderNotifyRsp::New(::google::protobuf::Arena* arena) const {
  MsgG2POrderNotifyRsp* n = new MsgG2POrderNotifyRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgG2POrderNotifyRsp::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgG2POrderNotifyRsp*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(err_code_, order_id_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgG2POrderNotifyRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IPlatformPayProto.MsgG2POrderNotifyRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 err_code = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_code_)));
          set_has_err_code();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_order_id;
        break;
      }

      // required uint32 order_id = 2;
      case 2: {
        if (tag == 16) {
         parse_order_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &order_id_)));
          set_has_order_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IPlatformPayProto.MsgG2POrderNotifyRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IPlatformPayProto.MsgG2POrderNotifyRsp)
  return false;
#undef DO_
}

void MsgG2POrderNotifyRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IPlatformPayProto.MsgG2POrderNotifyRsp)
  // required int32 err_code = 1;
  if (has_err_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->err_code(), output);
  }

  // required uint32 order_id = 2;
  if (has_order_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->order_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:IPlatformPayProto.MsgG2POrderNotifyRsp)
}

::google::protobuf::uint8* MsgG2POrderNotifyRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:IPlatformPayProto.MsgG2POrderNotifyRsp)
  // required int32 err_code = 1;
  if (has_err_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->err_code(), target);
  }

  // required uint32 order_id = 2;
  if (has_order_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->order_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IPlatformPayProto.MsgG2POrderNotifyRsp)
  return target;
}

int MsgG2POrderNotifyRsp::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_err_code()) {
    // required int32 err_code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err_code());
  }

  if (has_order_id()) {
    // required uint32 order_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->order_id());
  }

  return total_size;
}
int MsgG2POrderNotifyRsp::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 err_code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err_code());

    // required uint32 order_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->order_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgG2POrderNotifyRsp::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgG2POrderNotifyRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgG2POrderNotifyRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgG2POrderNotifyRsp::MergeFrom(const MsgG2POrderNotifyRsp& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err_code()) {
      set_err_code(from.err_code());
    }
    if (from.has_order_id()) {
      set_order_id(from.order_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgG2POrderNotifyRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgG2POrderNotifyRsp::CopyFrom(const MsgG2POrderNotifyRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgG2POrderNotifyRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MsgG2POrderNotifyRsp::Swap(MsgG2POrderNotifyRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgG2POrderNotifyRsp::InternalSwap(MsgG2POrderNotifyRsp* other) {
  std::swap(err_code_, other->err_code_);
  std::swap(order_id_, other->order_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgG2POrderNotifyRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgG2POrderNotifyRsp_descriptor_;
  metadata.reflection = MsgG2POrderNotifyRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgG2POrderNotifyRsp

// required int32 err_code = 1;
 bool MsgG2POrderNotifyRsp::has_err_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgG2POrderNotifyRsp::set_has_err_code() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgG2POrderNotifyRsp::clear_has_err_code() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgG2POrderNotifyRsp::clear_err_code() {
  err_code_ = 0;
  clear_has_err_code();
}
 ::google::protobuf::int32 MsgG2POrderNotifyRsp::err_code() const {
  // @@protoc_insertion_point(field_get:IPlatformPayProto.MsgG2POrderNotifyRsp.err_code)
  return err_code_;
}
 void MsgG2POrderNotifyRsp::set_err_code(::google::protobuf::int32 value) {
  set_has_err_code();
  err_code_ = value;
  // @@protoc_insertion_point(field_set:IPlatformPayProto.MsgG2POrderNotifyRsp.err_code)
}

// required uint32 order_id = 2;
 bool MsgG2POrderNotifyRsp::has_order_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgG2POrderNotifyRsp::set_has_order_id() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgG2POrderNotifyRsp::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgG2POrderNotifyRsp::clear_order_id() {
  order_id_ = 0u;
  clear_has_order_id();
}
 ::google::protobuf::uint32 MsgG2POrderNotifyRsp::order_id() const {
  // @@protoc_insertion_point(field_get:IPlatformPayProto.MsgG2POrderNotifyRsp.order_id)
  return order_id_;
}
 void MsgG2POrderNotifyRsp::set_order_id(::google::protobuf::uint32 value) {
  set_has_order_id();
  order_id_ = value;
  // @@protoc_insertion_point(field_set:IPlatformPayProto.MsgG2POrderNotifyRsp.order_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

::std::string* ErrorCodeAck::_default_err_msg_ = NULL;
::std::string* ErrorCodeAck::_default_ori_msg_typename_ = NULL;
#ifndef _MSC_VER
const int ErrorCodeAck::kErrCodeFieldNumber;
const int ErrorCodeAck::kErrMsgFieldNumber;
const int ErrorCodeAck::kOriMsgTypenameFieldNumber;
#endif  // !_MSC_VER

ErrorCodeAck::ErrorCodeAck()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IPlatformPayProto.ErrorCodeAck)
}

void ErrorCodeAck::InitAsDefaultInstance() {
}

ErrorCodeAck::ErrorCodeAck(const ErrorCodeAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:IPlatformPayProto.ErrorCodeAck)
}

void ErrorCodeAck::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  err_code_ = 0;
  err_msg_.UnsafeSetDefault(_default_err_msg_);
  ori_msg_typename_.UnsafeSetDefault(_default_ori_msg_typename_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ErrorCodeAck::~ErrorCodeAck() {
  // @@protoc_insertion_point(destructor:IPlatformPayProto.ErrorCodeAck)
  SharedDtor();
}

void ErrorCodeAck::SharedDtor() {
  err_msg_.DestroyNoArena(_default_err_msg_);
  ori_msg_typename_.DestroyNoArena(_default_ori_msg_typename_);
  if (this != default_instance_) {
  }
}

void ErrorCodeAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ErrorCodeAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorCodeAck_descriptor_;
}

const ErrorCodeAck& ErrorCodeAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fplatform_2eproto();
  return *default_instance_;
}

ErrorCodeAck* ErrorCodeAck::default_instance_ = NULL;

ErrorCodeAck* ErrorCodeAck::New(::google::protobuf::Arena* arena) const {
  ErrorCodeAck* n = new ErrorCodeAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ErrorCodeAck::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    err_code_ = 0;
    if (has_err_msg()) {
      err_msg_.ClearToDefaultNoArena(_default_err_msg_);
    }
    if (has_ori_msg_typename()) {
      ori_msg_typename_.ClearToDefaultNoArena(_default_ori_msg_typename_);
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ErrorCodeAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IPlatformPayProto.ErrorCodeAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 err_code = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_code_)));
          set_has_err_code();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err_msg;
        break;
      }

      // optional string err_msg = 2 [default = "default error"];
      case 2: {
        if (tag == 18) {
         parse_err_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err_msg().data(), this->err_msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "IPlatformPayProto.ErrorCodeAck.err_msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ori_msg_typename;
        break;
      }

      // optional string ori_msg_typename = 3 [default = "Unknown"];
      case 3: {
        if (tag == 26) {
         parse_ori_msg_typename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ori_msg_typename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ori_msg_typename().data(), this->ori_msg_typename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "IPlatformPayProto.ErrorCodeAck.ori_msg_typename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IPlatformPayProto.ErrorCodeAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IPlatformPayProto.ErrorCodeAck)
  return false;
#undef DO_
}

void ErrorCodeAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IPlatformPayProto.ErrorCodeAck)
  // required int32 err_code = 1;
  if (has_err_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->err_code(), output);
  }

  // optional string err_msg = 2 [default = "default error"];
  if (has_err_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err_msg().data(), this->err_msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "IPlatformPayProto.ErrorCodeAck.err_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err_msg(), output);
  }

  // optional string ori_msg_typename = 3 [default = "Unknown"];
  if (has_ori_msg_typename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ori_msg_typename().data(), this->ori_msg_typename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "IPlatformPayProto.ErrorCodeAck.ori_msg_typename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ori_msg_typename(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:IPlatformPayProto.ErrorCodeAck)
}

::google::protobuf::uint8* ErrorCodeAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:IPlatformPayProto.ErrorCodeAck)
  // required int32 err_code = 1;
  if (has_err_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->err_code(), target);
  }

  // optional string err_msg = 2 [default = "default error"];
  if (has_err_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err_msg().data(), this->err_msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "IPlatformPayProto.ErrorCodeAck.err_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err_msg(), target);
  }

  // optional string ori_msg_typename = 3 [default = "Unknown"];
  if (has_ori_msg_typename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ori_msg_typename().data(), this->ori_msg_typename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "IPlatformPayProto.ErrorCodeAck.ori_msg_typename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ori_msg_typename(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IPlatformPayProto.ErrorCodeAck)
  return target;
}

int ErrorCodeAck::ByteSize() const {
  int total_size = 0;

  // required int32 err_code = 1;
  if (has_err_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err_code());
  }
  if (_has_bits_[1 / 32] & 6) {
    // optional string err_msg = 2 [default = "default error"];
    if (has_err_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err_msg());
    }

    // optional string ori_msg_typename = 3 [default = "Unknown"];
    if (has_ori_msg_typename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ori_msg_typename());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ErrorCodeAck::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ErrorCodeAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ErrorCodeAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ErrorCodeAck::MergeFrom(const ErrorCodeAck& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err_code()) {
      set_err_code(from.err_code());
    }
    if (from.has_err_msg()) {
      set_has_err_msg();
      err_msg_.AssignWithDefault(_default_err_msg_, from.err_msg_);
    }
    if (from.has_ori_msg_typename()) {
      set_has_ori_msg_typename();
      ori_msg_typename_.AssignWithDefault(_default_ori_msg_typename_, from.ori_msg_typename_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ErrorCodeAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorCodeAck::CopyFrom(const ErrorCodeAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorCodeAck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ErrorCodeAck::Swap(ErrorCodeAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorCodeAck::InternalSwap(ErrorCodeAck* other) {
  std::swap(err_code_, other->err_code_);
  err_msg_.Swap(&other->err_msg_);
  ori_msg_typename_.Swap(&other->ori_msg_typename_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ErrorCodeAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ErrorCodeAck_descriptor_;
  metadata.reflection = ErrorCodeAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ErrorCodeAck

// required int32 err_code = 1;
 bool ErrorCodeAck::has_err_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void ErrorCodeAck::set_has_err_code() {
  _has_bits_[0] |= 0x00000001u;
}
 void ErrorCodeAck::clear_has_err_code() {
  _has_bits_[0] &= ~0x00000001u;
}
 void ErrorCodeAck::clear_err_code() {
  err_code_ = 0;
  clear_has_err_code();
}
 ::google::protobuf::int32 ErrorCodeAck::err_code() const {
  // @@protoc_insertion_point(field_get:IPlatformPayProto.ErrorCodeAck.err_code)
  return err_code_;
}
 void ErrorCodeAck::set_err_code(::google::protobuf::int32 value) {
  set_has_err_code();
  err_code_ = value;
  // @@protoc_insertion_point(field_set:IPlatformPayProto.ErrorCodeAck.err_code)
}

// optional string err_msg = 2 [default = "default error"];
 bool ErrorCodeAck::has_err_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void ErrorCodeAck::set_has_err_msg() {
  _has_bits_[0] |= 0x00000002u;
}
 void ErrorCodeAck::clear_has_err_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
 void ErrorCodeAck::clear_err_msg() {
  err_msg_.ClearToDefaultNoArena(_default_err_msg_);
  clear_has_err_msg();
}
 const ::std::string& ErrorCodeAck::err_msg() const {
  // @@protoc_insertion_point(field_get:IPlatformPayProto.ErrorCodeAck.err_msg)
  return err_msg_.GetNoArena(_default_err_msg_);
}
 void ErrorCodeAck::set_err_msg(const ::std::string& value) {
  set_has_err_msg();
  err_msg_.SetNoArena(_default_err_msg_, value);
  // @@protoc_insertion_point(field_set:IPlatformPayProto.ErrorCodeAck.err_msg)
}
 void ErrorCodeAck::set_err_msg(const char* value) {
  set_has_err_msg();
  err_msg_.SetNoArena(_default_err_msg_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IPlatformPayProto.ErrorCodeAck.err_msg)
}
 void ErrorCodeAck::set_err_msg(const char* value, size_t size) {
  set_has_err_msg();
  err_msg_.SetNoArena(_default_err_msg_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IPlatformPayProto.ErrorCodeAck.err_msg)
}
 ::std::string* ErrorCodeAck::mutable_err_msg() {
  set_has_err_msg();
  // @@protoc_insertion_point(field_mutable:IPlatformPayProto.ErrorCodeAck.err_msg)
  return err_msg_.MutableNoArena(_default_err_msg_);
}
 ::std::string* ErrorCodeAck::release_err_msg() {
  clear_has_err_msg();
  return err_msg_.ReleaseNoArena(_default_err_msg_);
}
 void ErrorCodeAck::set_allocated_err_msg(::std::string* err_msg) {
  if (err_msg != NULL) {
    set_has_err_msg();
  } else {
    clear_has_err_msg();
  }
  err_msg_.SetAllocatedNoArena(_default_err_msg_, err_msg);
  // @@protoc_insertion_point(field_set_allocated:IPlatformPayProto.ErrorCodeAck.err_msg)
}

// optional string ori_msg_typename = 3 [default = "Unknown"];
 bool ErrorCodeAck::has_ori_msg_typename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void ErrorCodeAck::set_has_ori_msg_typename() {
  _has_bits_[0] |= 0x00000004u;
}
 void ErrorCodeAck::clear_has_ori_msg_typename() {
  _has_bits_[0] &= ~0x00000004u;
}
 void ErrorCodeAck::clear_ori_msg_typename() {
  ori_msg_typename_.ClearToDefaultNoArena(_default_ori_msg_typename_);
  clear_has_ori_msg_typename();
}
 const ::std::string& ErrorCodeAck::ori_msg_typename() const {
  // @@protoc_insertion_point(field_get:IPlatformPayProto.ErrorCodeAck.ori_msg_typename)
  return ori_msg_typename_.GetNoArena(_default_ori_msg_typename_);
}
 void ErrorCodeAck::set_ori_msg_typename(const ::std::string& value) {
  set_has_ori_msg_typename();
  ori_msg_typename_.SetNoArena(_default_ori_msg_typename_, value);
  // @@protoc_insertion_point(field_set:IPlatformPayProto.ErrorCodeAck.ori_msg_typename)
}
 void ErrorCodeAck::set_ori_msg_typename(const char* value) {
  set_has_ori_msg_typename();
  ori_msg_typename_.SetNoArena(_default_ori_msg_typename_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IPlatformPayProto.ErrorCodeAck.ori_msg_typename)
}
 void ErrorCodeAck::set_ori_msg_typename(const char* value, size_t size) {
  set_has_ori_msg_typename();
  ori_msg_typename_.SetNoArena(_default_ori_msg_typename_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IPlatformPayProto.ErrorCodeAck.ori_msg_typename)
}
 ::std::string* ErrorCodeAck::mutable_ori_msg_typename() {
  set_has_ori_msg_typename();
  // @@protoc_insertion_point(field_mutable:IPlatformPayProto.ErrorCodeAck.ori_msg_typename)
  return ori_msg_typename_.MutableNoArena(_default_ori_msg_typename_);
}
 ::std::string* ErrorCodeAck::release_ori_msg_typename() {
  clear_has_ori_msg_typename();
  return ori_msg_typename_.ReleaseNoArena(_default_ori_msg_typename_);
}
 void ErrorCodeAck::set_allocated_ori_msg_typename(::std::string* ori_msg_typename) {
  if (ori_msg_typename != NULL) {
    set_has_ori_msg_typename();
  } else {
    clear_has_ori_msg_typename();
  }
  ori_msg_typename_.SetAllocatedNoArena(_default_ori_msg_typename_, ori_msg_typename);
  // @@protoc_insertion_point(field_set_allocated:IPlatformPayProto.ErrorCodeAck.ori_msg_typename)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace IPlatformPayProto

// @@protoc_insertion_point(global_scope)
