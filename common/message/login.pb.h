// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login.proto

#ifndef PROTOBUF_login_2eproto__INCLUDED
#define PROTOBUF_login_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace message {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_login_2eproto();
void protobuf_AssignDesc_login_2eproto();
void protobuf_ShutdownFile_login_2eproto();

class VersionTg;
class LoginRequest;
class RegisterAccountRequest;
class RegisterAccountFaildACK;
class LoginResponse;
class LoginGame;
class ClientExit;
class C2SPlatformVerifyReq;
class S2CPlatformVerifyACK;
class MsgS2CPingNotify;
class MsgC2SPingNotify;

enum enumLoginResult {
  enumLoginResult_Success = 0,
  enumLoginResult_Fail = 1,
  enumLoginResult_NameFail = 2,
  enumLoginResult_PwdFail = 3,
  enumLoginResult_HaveLogin = 4,
  enumLoginResult_ErrorVersion = 5,
  enumLoginResult_ErrorChannel = 6,
  enumLoginResult_ErrorNeedThirdVerify = 7
};
bool enumLoginResult_IsValid(int value);
const enumLoginResult enumLoginResult_MIN = enumLoginResult_Success;
const enumLoginResult enumLoginResult_MAX = enumLoginResult_ErrorNeedThirdVerify;
const int enumLoginResult_ARRAYSIZE = enumLoginResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* enumLoginResult_descriptor();
inline const ::std::string& enumLoginResult_Name(enumLoginResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    enumLoginResult_descriptor(), value);
}
inline bool enumLoginResult_Parse(
    const ::std::string& name, enumLoginResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enumLoginResult>(
    enumLoginResult_descriptor(), name, value);
}
// ===================================================================

class VersionTg : public ::google::protobuf::Message {
 public:
  VersionTg();
  virtual ~VersionTg();

  VersionTg(const VersionTg& from);

  inline VersionTg& operator=(const VersionTg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VersionTg& default_instance();

  void Swap(VersionTg* other);

  // implements Message ----------------------------------------------

  inline VersionTg* New() const { return New(NULL); }

  VersionTg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VersionTg& from);
  void MergeFrom(const VersionTg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VersionTg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 number_1 = 1;
  bool has_number_1() const;
  void clear_number_1();
  static const int kNumber1FieldNumber = 1;
  ::google::protobuf::int32 number_1() const;
  void set_number_1(::google::protobuf::int32 value);

  // required int32 number_2 = 2;
  bool has_number_2() const;
  void clear_number_2();
  static const int kNumber2FieldNumber = 2;
  ::google::protobuf::int32 number_2() const;
  void set_number_2(::google::protobuf::int32 value);

  // required int32 number_3 = 3;
  bool has_number_3() const;
  void clear_number_3();
  static const int kNumber3FieldNumber = 3;
  ::google::protobuf::int32 number_3() const;
  void set_number_3(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.VersionTg)
 private:
  inline void set_has_number_1();
  inline void clear_has_number_1();
  inline void set_has_number_2();
  inline void clear_has_number_2();
  inline void set_has_number_3();
  inline void clear_has_number_3();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 number_1_;
  ::google::protobuf::int32 number_2_;
  ::google::protobuf::int32 number_3_;
  friend void  protobuf_AddDesc_login_2eproto();
  friend void protobuf_AssignDesc_login_2eproto();
  friend void protobuf_ShutdownFile_login_2eproto();

  void InitAsDefaultInstance();
  static VersionTg* default_instance_;
};
// -------------------------------------------------------------------

class LoginRequest : public ::google::protobuf::Message {
 public:
  LoginRequest();
  virtual ~LoginRequest();

  LoginRequest(const LoginRequest& from);

  inline LoginRequest& operator=(const LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRequest& default_instance();

  void Swap(LoginRequest* other);

  // implements Message ----------------------------------------------

  inline LoginRequest* New() const { return New(NULL); }

  LoginRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRequest& from);
  void MergeFrom(const LoginRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string pwd = 2;
  bool has_pwd() const;
  void clear_pwd();
  static const int kPwdFieldNumber = 2;
  const ::std::string& pwd() const;
  void set_pwd(const ::std::string& value);
  void set_pwd(const char* value);
  void set_pwd(const char* value, size_t size);
  ::std::string* mutable_pwd();
  ::std::string* release_pwd();
  void set_allocated_pwd(::std::string* pwd);

  // optional .message.VersionTg version = 3;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  const ::message::VersionTg& version() const;
  ::message::VersionTg* mutable_version();
  ::message::VersionTg* release_version();
  void set_allocated_version(::message::VersionTg* version);

  // optional int32 channel = 4;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 4;
  ::google::protobuf::int32 channel() const;
  void set_channel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.LoginRequest)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_pwd();
  inline void clear_has_pwd();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_channel();
  inline void clear_has_channel();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr pwd_;
  ::message::VersionTg* version_;
  ::google::protobuf::int32 channel_;
  friend void  protobuf_AddDesc_login_2eproto();
  friend void protobuf_AssignDesc_login_2eproto();
  friend void protobuf_ShutdownFile_login_2eproto();

  void InitAsDefaultInstance();
  static LoginRequest* default_instance_;
};
// -------------------------------------------------------------------

class RegisterAccountRequest : public ::google::protobuf::Message {
 public:
  RegisterAccountRequest();
  virtual ~RegisterAccountRequest();

  RegisterAccountRequest(const RegisterAccountRequest& from);

  inline RegisterAccountRequest& operator=(const RegisterAccountRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterAccountRequest& default_instance();

  void Swap(RegisterAccountRequest* other);

  // implements Message ----------------------------------------------

  inline RegisterAccountRequest* New() const { return New(NULL); }

  RegisterAccountRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RegisterAccountRequest& from);
  void MergeFrom(const RegisterAccountRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RegisterAccountRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required string pwd = 2;
  bool has_pwd() const;
  void clear_pwd();
  static const int kPwdFieldNumber = 2;
  const ::std::string& pwd() const;
  void set_pwd(const ::std::string& value);
  void set_pwd(const char* value);
  void set_pwd(const char* value, size_t size);
  ::std::string* mutable_pwd();
  ::std::string* release_pwd();
  void set_allocated_pwd(::std::string* pwd);

  // @@protoc_insertion_point(class_scope:message.RegisterAccountRequest)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_pwd();
  inline void clear_has_pwd();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr pwd_;
  friend void  protobuf_AddDesc_login_2eproto();
  friend void protobuf_AssignDesc_login_2eproto();
  friend void protobuf_ShutdownFile_login_2eproto();

  void InitAsDefaultInstance();
  static RegisterAccountRequest* default_instance_;
};
// -------------------------------------------------------------------

class RegisterAccountFaildACK : public ::google::protobuf::Message {
 public:
  RegisterAccountFaildACK();
  virtual ~RegisterAccountFaildACK();

  RegisterAccountFaildACK(const RegisterAccountFaildACK& from);

  inline RegisterAccountFaildACK& operator=(const RegisterAccountFaildACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterAccountFaildACK& default_instance();

  void Swap(RegisterAccountFaildACK* other);

  // implements Message ----------------------------------------------

  inline RegisterAccountFaildACK* New() const { return New(NULL); }

  RegisterAccountFaildACK* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RegisterAccountFaildACK& from);
  void MergeFrom(const RegisterAccountFaildACK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RegisterAccountFaildACK* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:message.RegisterAccountFaildACK)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_login_2eproto();
  friend void protobuf_AssignDesc_login_2eproto();
  friend void protobuf_ShutdownFile_login_2eproto();

  void InitAsDefaultInstance();
  static RegisterAccountFaildACK* default_instance_;
};
// -------------------------------------------------------------------

class LoginResponse : public ::google::protobuf::Message {
 public:
  LoginResponse();
  virtual ~LoginResponse();

  LoginResponse(const LoginResponse& from);

  inline LoginResponse& operator=(const LoginResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginResponse& default_instance();

  void Swap(LoginResponse* other);

  // implements Message ----------------------------------------------

  inline LoginResponse* New() const { return New(NULL); }

  LoginResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginResponse& from);
  void MergeFrom(const LoginResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string gate_ip = 1;
  bool has_gate_ip() const;
  void clear_gate_ip();
  static const int kGateIpFieldNumber = 1;
  const ::std::string& gate_ip() const;
  void set_gate_ip(const ::std::string& value);
  void set_gate_ip(const char* value);
  void set_gate_ip(const char* value, size_t size);
  ::std::string* mutable_gate_ip();
  ::std::string* release_gate_ip();
  void set_allocated_gate_ip(::std::string* gate_ip);

  // optional uint32 gate_port = 2;
  bool has_gate_port() const;
  void clear_gate_port();
  static const int kGatePortFieldNumber = 2;
  ::google::protobuf::uint32 gate_port() const;
  void set_gate_port(::google::protobuf::uint32 value);

  // optional uint32 user_account = 3;
  bool has_user_account() const;
  void clear_user_account();
  static const int kUserAccountFieldNumber = 3;
  ::google::protobuf::uint32 user_account() const;
  void set_user_account(::google::protobuf::uint32 value);

  // optional .message.enumLoginResult result = 4;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 4;
  ::message::enumLoginResult result() const;
  void set_result(::message::enumLoginResult value);

  // optional .message.VersionTg version = 5;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 5;
  const ::message::VersionTg& version() const;
  ::message::VersionTg* mutable_version();
  ::message::VersionTg* release_version();
  void set_allocated_version(::message::VersionTg* version);

  // @@protoc_insertion_point(class_scope:message.LoginResponse)
 private:
  inline void set_has_gate_ip();
  inline void clear_has_gate_ip();
  inline void set_has_gate_port();
  inline void clear_has_gate_port();
  inline void set_has_user_account();
  inline void clear_has_user_account();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr gate_ip_;
  ::google::protobuf::uint32 gate_port_;
  ::google::protobuf::uint32 user_account_;
  ::message::VersionTg* version_;
  int result_;
  friend void  protobuf_AddDesc_login_2eproto();
  friend void protobuf_AssignDesc_login_2eproto();
  friend void protobuf_ShutdownFile_login_2eproto();

  void InitAsDefaultInstance();
  static LoginResponse* default_instance_;
};
// -------------------------------------------------------------------

class LoginGame : public ::google::protobuf::Message {
 public:
  LoginGame();
  virtual ~LoginGame();

  LoginGame(const LoginGame& from);

  inline LoginGame& operator=(const LoginGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginGame& default_instance();

  void Swap(LoginGame* other);

  // implements Message ----------------------------------------------

  inline LoginGame* New() const { return New(NULL); }

  LoginGame* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginGame& from);
  void MergeFrom(const LoginGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_account = 1;
  bool has_user_account() const;
  void clear_user_account();
  static const int kUserAccountFieldNumber = 1;
  ::google::protobuf::uint32 user_account() const;
  void set_user_account(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:message.LoginGame)
 private:
  inline void set_has_user_account();
  inline void clear_has_user_account();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_account_;
  friend void  protobuf_AddDesc_login_2eproto();
  friend void protobuf_AssignDesc_login_2eproto();
  friend void protobuf_ShutdownFile_login_2eproto();

  void InitAsDefaultInstance();
  static LoginGame* default_instance_;
};
// -------------------------------------------------------------------

class ClientExit : public ::google::protobuf::Message {
 public:
  ClientExit();
  virtual ~ClientExit();

  ClientExit(const ClientExit& from);

  inline ClientExit& operator=(const ClientExit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientExit& default_instance();

  void Swap(ClientExit* other);

  // implements Message ----------------------------------------------

  inline ClientExit* New() const { return New(NULL); }

  ClientExit* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientExit& from);
  void MergeFrom(const ClientExit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientExit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 charid = 1;
  bool has_charid() const;
  void clear_charid();
  static const int kCharidFieldNumber = 1;
  ::google::protobuf::uint32 charid() const;
  void set_charid(::google::protobuf::uint32 value);

  // optional uint64 user_account = 2;
  bool has_user_account() const;
  void clear_user_account();
  static const int kUserAccountFieldNumber = 2;
  ::google::protobuf::uint64 user_account() const;
  void set_user_account(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:message.ClientExit)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_user_account();
  inline void clear_has_user_account();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_account_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_login_2eproto();
  friend void protobuf_AssignDesc_login_2eproto();
  friend void protobuf_ShutdownFile_login_2eproto();

  void InitAsDefaultInstance();
  static ClientExit* default_instance_;
};
// -------------------------------------------------------------------

class C2SPlatformVerifyReq : public ::google::protobuf::Message {
 public:
  C2SPlatformVerifyReq();
  virtual ~C2SPlatformVerifyReq();

  C2SPlatformVerifyReq(const C2SPlatformVerifyReq& from);

  inline C2SPlatformVerifyReq& operator=(const C2SPlatformVerifyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2SPlatformVerifyReq& default_instance();

  void Swap(C2SPlatformVerifyReq* other);

  // implements Message ----------------------------------------------

  inline C2SPlatformVerifyReq* New() const { return New(NULL); }

  C2SPlatformVerifyReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2SPlatformVerifyReq& from);
  void MergeFrom(const C2SPlatformVerifyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(C2SPlatformVerifyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // required string app_id = 2;
  bool has_app_id() const;
  void clear_app_id();
  static const int kAppIdFieldNumber = 2;
  const ::std::string& app_id() const;
  void set_app_id(const ::std::string& value);
  void set_app_id(const char* value);
  void set_app_id(const char* value, size_t size);
  ::std::string* mutable_app_id();
  ::std::string* release_app_id();
  void set_allocated_app_id(::std::string* app_id);

  // required string app_key = 3;
  bool has_app_key() const;
  void clear_app_key();
  static const int kAppKeyFieldNumber = 3;
  const ::std::string& app_key() const;
  void set_app_key(const ::std::string& value);
  void set_app_key(const char* value);
  void set_app_key(const char* value, size_t size);
  ::std::string* mutable_app_key();
  ::std::string* release_app_key();
  void set_allocated_app_key(::std::string* app_key);

  // required string token_id = 4;
  bool has_token_id() const;
  void clear_token_id();
  static const int kTokenIdFieldNumber = 4;
  const ::std::string& token_id() const;
  void set_token_id(const ::std::string& value);
  void set_token_id(const char* value);
  void set_token_id(const char* value, size_t size);
  ::std::string* mutable_token_id();
  ::std::string* release_token_id();
  void set_allocated_token_id(::std::string* token_id);

  // required int32 channel_id = 5;
  bool has_channel_id() const;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 5;
  ::google::protobuf::int32 channel_id() const;
  void set_channel_id(::google::protobuf::int32 value);

  // required string extra_data = 6;
  bool has_extra_data() const;
  void clear_extra_data();
  static const int kExtraDataFieldNumber = 6;
  const ::std::string& extra_data() const;
  void set_extra_data(const ::std::string& value);
  void set_extra_data(const char* value);
  void set_extra_data(const char* value, size_t size);
  ::std::string* mutable_extra_data();
  ::std::string* release_extra_data();
  void set_allocated_extra_data(::std::string* extra_data);

  // @@protoc_insertion_point(class_scope:message.C2SPlatformVerifyReq)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_app_id();
  inline void clear_has_app_id();
  inline void set_has_app_key();
  inline void clear_has_app_key();
  inline void set_has_token_id();
  inline void clear_has_token_id();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_extra_data();
  inline void clear_has_extra_data();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr app_id_;
  ::google::protobuf::internal::ArenaStringPtr app_key_;
  ::google::protobuf::internal::ArenaStringPtr token_id_;
  ::google::protobuf::internal::ArenaStringPtr extra_data_;
  ::google::protobuf::int32 channel_id_;
  friend void  protobuf_AddDesc_login_2eproto();
  friend void protobuf_AssignDesc_login_2eproto();
  friend void protobuf_ShutdownFile_login_2eproto();

  void InitAsDefaultInstance();
  static C2SPlatformVerifyReq* default_instance_;
};
// -------------------------------------------------------------------

class S2CPlatformVerifyACK : public ::google::protobuf::Message {
 public:
  S2CPlatformVerifyACK();
  virtual ~S2CPlatformVerifyACK();

  S2CPlatformVerifyACK(const S2CPlatformVerifyACK& from);

  inline S2CPlatformVerifyACK& operator=(const S2CPlatformVerifyACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2CPlatformVerifyACK& default_instance();

  void Swap(S2CPlatformVerifyACK* other);

  // implements Message ----------------------------------------------

  inline S2CPlatformVerifyACK* New() const { return New(NULL); }

  S2CPlatformVerifyACK* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2CPlatformVerifyACK& from);
  void MergeFrom(const S2CPlatformVerifyACK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S2CPlatformVerifyACK* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // required string nick_name = 2;
  bool has_nick_name() const;
  void clear_nick_name();
  static const int kNickNameFieldNumber = 2;
  const ::std::string& nick_name() const;
  void set_nick_name(const ::std::string& value);
  void set_nick_name(const char* value);
  void set_nick_name(const char* value, size_t size);
  ::std::string* mutable_nick_name();
  ::std::string* release_nick_name();
  void set_allocated_nick_name(::std::string* nick_name);

  // required string token = 3;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 3;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // required bool success = 4;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 4;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:message.S2CPlatformVerifyACK)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();
  inline void set_has_token();
  inline void clear_has_token();
  inline void set_has_success();
  inline void clear_has_success();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr nick_name_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  bool success_;
  friend void  protobuf_AddDesc_login_2eproto();
  friend void protobuf_AssignDesc_login_2eproto();
  friend void protobuf_ShutdownFile_login_2eproto();

  void InitAsDefaultInstance();
  static S2CPlatformVerifyACK* default_instance_;
};
// -------------------------------------------------------------------

class MsgS2CPingNotify : public ::google::protobuf::Message {
 public:
  MsgS2CPingNotify();
  virtual ~MsgS2CPingNotify();

  MsgS2CPingNotify(const MsgS2CPingNotify& from);

  inline MsgS2CPingNotify& operator=(const MsgS2CPingNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgS2CPingNotify& default_instance();

  void Swap(MsgS2CPingNotify* other);

  // implements Message ----------------------------------------------

  inline MsgS2CPingNotify* New() const { return New(NULL); }

  MsgS2CPingNotify* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgS2CPingNotify& from);
  void MergeFrom(const MsgS2CPingNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgS2CPingNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 time = 1;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // required int32 ping_count = 2;
  bool has_ping_count() const;
  void clear_ping_count();
  static const int kPingCountFieldNumber = 2;
  ::google::protobuf::int32 ping_count() const;
  void set_ping_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.MsgS2CPingNotify)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_ping_count();
  inline void clear_has_ping_count();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 ping_count_;
  friend void  protobuf_AddDesc_login_2eproto();
  friend void protobuf_AssignDesc_login_2eproto();
  friend void protobuf_ShutdownFile_login_2eproto();

  void InitAsDefaultInstance();
  static MsgS2CPingNotify* default_instance_;
};
// -------------------------------------------------------------------

class MsgC2SPingNotify : public ::google::protobuf::Message {
 public:
  MsgC2SPingNotify();
  virtual ~MsgC2SPingNotify();

  MsgC2SPingNotify(const MsgC2SPingNotify& from);

  inline MsgC2SPingNotify& operator=(const MsgC2SPingNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgC2SPingNotify& default_instance();

  void Swap(MsgC2SPingNotify* other);

  // implements Message ----------------------------------------------

  inline MsgC2SPingNotify* New() const { return New(NULL); }

  MsgC2SPingNotify* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgC2SPingNotify& from);
  void MergeFrom(const MsgC2SPingNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgC2SPingNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:message.MsgC2SPingNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_login_2eproto();
  friend void protobuf_AssignDesc_login_2eproto();
  friend void protobuf_ShutdownFile_login_2eproto();

  void InitAsDefaultInstance();
  static MsgC2SPingNotify* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// VersionTg

// required int32 number_1 = 1;
inline bool VersionTg::has_number_1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VersionTg::set_has_number_1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VersionTg::clear_has_number_1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VersionTg::clear_number_1() {
  number_1_ = 0;
  clear_has_number_1();
}
inline ::google::protobuf::int32 VersionTg::number_1() const {
  // @@protoc_insertion_point(field_get:message.VersionTg.number_1)
  return number_1_;
}
inline void VersionTg::set_number_1(::google::protobuf::int32 value) {
  set_has_number_1();
  number_1_ = value;
  // @@protoc_insertion_point(field_set:message.VersionTg.number_1)
}

// required int32 number_2 = 2;
inline bool VersionTg::has_number_2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VersionTg::set_has_number_2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VersionTg::clear_has_number_2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VersionTg::clear_number_2() {
  number_2_ = 0;
  clear_has_number_2();
}
inline ::google::protobuf::int32 VersionTg::number_2() const {
  // @@protoc_insertion_point(field_get:message.VersionTg.number_2)
  return number_2_;
}
inline void VersionTg::set_number_2(::google::protobuf::int32 value) {
  set_has_number_2();
  number_2_ = value;
  // @@protoc_insertion_point(field_set:message.VersionTg.number_2)
}

// required int32 number_3 = 3;
inline bool VersionTg::has_number_3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VersionTg::set_has_number_3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VersionTg::clear_has_number_3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VersionTg::clear_number_3() {
  number_3_ = 0;
  clear_has_number_3();
}
inline ::google::protobuf::int32 VersionTg::number_3() const {
  // @@protoc_insertion_point(field_get:message.VersionTg.number_3)
  return number_3_;
}
inline void VersionTg::set_number_3(::google::protobuf::int32 value) {
  set_has_number_3();
  number_3_ = value;
  // @@protoc_insertion_point(field_set:message.VersionTg.number_3)
}

// -------------------------------------------------------------------

// LoginRequest

// optional string name = 1;
inline bool LoginRequest::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRequest::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& LoginRequest::name() const {
  // @@protoc_insertion_point(field_get:message.LoginRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.LoginRequest.name)
}
inline void LoginRequest::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.LoginRequest.name)
}
inline void LoginRequest::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.LoginRequest.name)
}
inline ::std::string* LoginRequest::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:message.LoginRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:message.LoginRequest.name)
}

// optional string pwd = 2;
inline bool LoginRequest::has_pwd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRequest::set_has_pwd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRequest::clear_has_pwd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRequest::clear_pwd() {
  pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pwd();
}
inline const ::std::string& LoginRequest::pwd() const {
  // @@protoc_insertion_point(field_get:message.LoginRequest.pwd)
  return pwd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_pwd(const ::std::string& value) {
  set_has_pwd();
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.LoginRequest.pwd)
}
inline void LoginRequest::set_pwd(const char* value) {
  set_has_pwd();
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.LoginRequest.pwd)
}
inline void LoginRequest::set_pwd(const char* value, size_t size) {
  set_has_pwd();
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.LoginRequest.pwd)
}
inline ::std::string* LoginRequest::mutable_pwd() {
  set_has_pwd();
  // @@protoc_insertion_point(field_mutable:message.LoginRequest.pwd)
  return pwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_pwd() {
  clear_has_pwd();
  return pwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_pwd(::std::string* pwd) {
  if (pwd != NULL) {
    set_has_pwd();
  } else {
    clear_has_pwd();
  }
  pwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pwd);
  // @@protoc_insertion_point(field_set_allocated:message.LoginRequest.pwd)
}

// optional .message.VersionTg version = 3;
inline bool LoginRequest::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginRequest::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginRequest::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginRequest::clear_version() {
  if (version_ != NULL) version_->::message::VersionTg::Clear();
  clear_has_version();
}
inline const ::message::VersionTg& LoginRequest::version() const {
  // @@protoc_insertion_point(field_get:message.LoginRequest.version)
  return version_ != NULL ? *version_ : *default_instance_->version_;
}
inline ::message::VersionTg* LoginRequest::mutable_version() {
  set_has_version();
  if (version_ == NULL) {
    version_ = new ::message::VersionTg;
  }
  // @@protoc_insertion_point(field_mutable:message.LoginRequest.version)
  return version_;
}
inline ::message::VersionTg* LoginRequest::release_version() {
  clear_has_version();
  ::message::VersionTg* temp = version_;
  version_ = NULL;
  return temp;
}
inline void LoginRequest::set_allocated_version(::message::VersionTg* version) {
  delete version_;
  version_ = version;
  if (version) {
    set_has_version();
  } else {
    clear_has_version();
  }
  // @@protoc_insertion_point(field_set_allocated:message.LoginRequest.version)
}

// optional int32 channel = 4;
inline bool LoginRequest::has_channel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginRequest::set_has_channel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginRequest::clear_has_channel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginRequest::clear_channel() {
  channel_ = 0;
  clear_has_channel();
}
inline ::google::protobuf::int32 LoginRequest::channel() const {
  // @@protoc_insertion_point(field_get:message.LoginRequest.channel)
  return channel_;
}
inline void LoginRequest::set_channel(::google::protobuf::int32 value) {
  set_has_channel();
  channel_ = value;
  // @@protoc_insertion_point(field_set:message.LoginRequest.channel)
}

// -------------------------------------------------------------------

// RegisterAccountRequest

// required string name = 1;
inline bool RegisterAccountRequest::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RegisterAccountRequest::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RegisterAccountRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RegisterAccountRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& RegisterAccountRequest::name() const {
  // @@protoc_insertion_point(field_get:message.RegisterAccountRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterAccountRequest::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.RegisterAccountRequest.name)
}
inline void RegisterAccountRequest::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.RegisterAccountRequest.name)
}
inline void RegisterAccountRequest::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.RegisterAccountRequest.name)
}
inline ::std::string* RegisterAccountRequest::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:message.RegisterAccountRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterAccountRequest::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterAccountRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:message.RegisterAccountRequest.name)
}

// required string pwd = 2;
inline bool RegisterAccountRequest::has_pwd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RegisterAccountRequest::set_has_pwd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RegisterAccountRequest::clear_has_pwd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RegisterAccountRequest::clear_pwd() {
  pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pwd();
}
inline const ::std::string& RegisterAccountRequest::pwd() const {
  // @@protoc_insertion_point(field_get:message.RegisterAccountRequest.pwd)
  return pwd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterAccountRequest::set_pwd(const ::std::string& value) {
  set_has_pwd();
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.RegisterAccountRequest.pwd)
}
inline void RegisterAccountRequest::set_pwd(const char* value) {
  set_has_pwd();
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.RegisterAccountRequest.pwd)
}
inline void RegisterAccountRequest::set_pwd(const char* value, size_t size) {
  set_has_pwd();
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.RegisterAccountRequest.pwd)
}
inline ::std::string* RegisterAccountRequest::mutable_pwd() {
  set_has_pwd();
  // @@protoc_insertion_point(field_mutable:message.RegisterAccountRequest.pwd)
  return pwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterAccountRequest::release_pwd() {
  clear_has_pwd();
  return pwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterAccountRequest::set_allocated_pwd(::std::string* pwd) {
  if (pwd != NULL) {
    set_has_pwd();
  } else {
    clear_has_pwd();
  }
  pwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pwd);
  // @@protoc_insertion_point(field_set_allocated:message.RegisterAccountRequest.pwd)
}

// -------------------------------------------------------------------

// RegisterAccountFaildACK

// -------------------------------------------------------------------

// LoginResponse

// optional string gate_ip = 1;
inline bool LoginResponse::has_gate_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginResponse::set_has_gate_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginResponse::clear_has_gate_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginResponse::clear_gate_ip() {
  gate_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gate_ip();
}
inline const ::std::string& LoginResponse::gate_ip() const {
  // @@protoc_insertion_point(field_get:message.LoginResponse.gate_ip)
  return gate_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResponse::set_gate_ip(const ::std::string& value) {
  set_has_gate_ip();
  gate_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.LoginResponse.gate_ip)
}
inline void LoginResponse::set_gate_ip(const char* value) {
  set_has_gate_ip();
  gate_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.LoginResponse.gate_ip)
}
inline void LoginResponse::set_gate_ip(const char* value, size_t size) {
  set_has_gate_ip();
  gate_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.LoginResponse.gate_ip)
}
inline ::std::string* LoginResponse::mutable_gate_ip() {
  set_has_gate_ip();
  // @@protoc_insertion_point(field_mutable:message.LoginResponse.gate_ip)
  return gate_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginResponse::release_gate_ip() {
  clear_has_gate_ip();
  return gate_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResponse::set_allocated_gate_ip(::std::string* gate_ip) {
  if (gate_ip != NULL) {
    set_has_gate_ip();
  } else {
    clear_has_gate_ip();
  }
  gate_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gate_ip);
  // @@protoc_insertion_point(field_set_allocated:message.LoginResponse.gate_ip)
}

// optional uint32 gate_port = 2;
inline bool LoginResponse::has_gate_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginResponse::set_has_gate_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginResponse::clear_has_gate_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginResponse::clear_gate_port() {
  gate_port_ = 0u;
  clear_has_gate_port();
}
inline ::google::protobuf::uint32 LoginResponse::gate_port() const {
  // @@protoc_insertion_point(field_get:message.LoginResponse.gate_port)
  return gate_port_;
}
inline void LoginResponse::set_gate_port(::google::protobuf::uint32 value) {
  set_has_gate_port();
  gate_port_ = value;
  // @@protoc_insertion_point(field_set:message.LoginResponse.gate_port)
}

// optional uint32 user_account = 3;
inline bool LoginResponse::has_user_account() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginResponse::set_has_user_account() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginResponse::clear_has_user_account() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginResponse::clear_user_account() {
  user_account_ = 0u;
  clear_has_user_account();
}
inline ::google::protobuf::uint32 LoginResponse::user_account() const {
  // @@protoc_insertion_point(field_get:message.LoginResponse.user_account)
  return user_account_;
}
inline void LoginResponse::set_user_account(::google::protobuf::uint32 value) {
  set_has_user_account();
  user_account_ = value;
  // @@protoc_insertion_point(field_set:message.LoginResponse.user_account)
}

// optional .message.enumLoginResult result = 4;
inline bool LoginResponse::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginResponse::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::message::enumLoginResult LoginResponse::result() const {
  // @@protoc_insertion_point(field_get:message.LoginResponse.result)
  return static_cast< ::message::enumLoginResult >(result_);
}
inline void LoginResponse::set_result(::message::enumLoginResult value) {
  assert(::message::enumLoginResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:message.LoginResponse.result)
}

// optional .message.VersionTg version = 5;
inline bool LoginResponse::has_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoginResponse::set_has_version() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoginResponse::clear_has_version() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoginResponse::clear_version() {
  if (version_ != NULL) version_->::message::VersionTg::Clear();
  clear_has_version();
}
inline const ::message::VersionTg& LoginResponse::version() const {
  // @@protoc_insertion_point(field_get:message.LoginResponse.version)
  return version_ != NULL ? *version_ : *default_instance_->version_;
}
inline ::message::VersionTg* LoginResponse::mutable_version() {
  set_has_version();
  if (version_ == NULL) {
    version_ = new ::message::VersionTg;
  }
  // @@protoc_insertion_point(field_mutable:message.LoginResponse.version)
  return version_;
}
inline ::message::VersionTg* LoginResponse::release_version() {
  clear_has_version();
  ::message::VersionTg* temp = version_;
  version_ = NULL;
  return temp;
}
inline void LoginResponse::set_allocated_version(::message::VersionTg* version) {
  delete version_;
  version_ = version;
  if (version) {
    set_has_version();
  } else {
    clear_has_version();
  }
  // @@protoc_insertion_point(field_set_allocated:message.LoginResponse.version)
}

// -------------------------------------------------------------------

// LoginGame

// required uint32 user_account = 1;
inline bool LoginGame::has_user_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginGame::set_has_user_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginGame::clear_has_user_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginGame::clear_user_account() {
  user_account_ = 0u;
  clear_has_user_account();
}
inline ::google::protobuf::uint32 LoginGame::user_account() const {
  // @@protoc_insertion_point(field_get:message.LoginGame.user_account)
  return user_account_;
}
inline void LoginGame::set_user_account(::google::protobuf::uint32 value) {
  set_has_user_account();
  user_account_ = value;
  // @@protoc_insertion_point(field_set:message.LoginGame.user_account)
}

// -------------------------------------------------------------------

// ClientExit

// optional uint32 charid = 1;
inline bool ClientExit::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientExit::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientExit::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientExit::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
inline ::google::protobuf::uint32 ClientExit::charid() const {
  // @@protoc_insertion_point(field_get:message.ClientExit.charid)
  return charid_;
}
inline void ClientExit::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:message.ClientExit.charid)
}

// optional uint64 user_account = 2;
inline bool ClientExit::has_user_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientExit::set_has_user_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientExit::clear_has_user_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientExit::clear_user_account() {
  user_account_ = GOOGLE_ULONGLONG(0);
  clear_has_user_account();
}
inline ::google::protobuf::uint64 ClientExit::user_account() const {
  // @@protoc_insertion_point(field_get:message.ClientExit.user_account)
  return user_account_;
}
inline void ClientExit::set_user_account(::google::protobuf::uint64 value) {
  set_has_user_account();
  user_account_ = value;
  // @@protoc_insertion_point(field_set:message.ClientExit.user_account)
}

// -------------------------------------------------------------------

// C2SPlatformVerifyReq

// required string user_id = 1;
inline bool C2SPlatformVerifyReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2SPlatformVerifyReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2SPlatformVerifyReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2SPlatformVerifyReq::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& C2SPlatformVerifyReq::user_id() const {
  // @@protoc_insertion_point(field_get:message.C2SPlatformVerifyReq.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C2SPlatformVerifyReq::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.C2SPlatformVerifyReq.user_id)
}
inline void C2SPlatformVerifyReq::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.C2SPlatformVerifyReq.user_id)
}
inline void C2SPlatformVerifyReq::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.C2SPlatformVerifyReq.user_id)
}
inline ::std::string* C2SPlatformVerifyReq::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:message.C2SPlatformVerifyReq.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C2SPlatformVerifyReq::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C2SPlatformVerifyReq::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:message.C2SPlatformVerifyReq.user_id)
}

// required string app_id = 2;
inline bool C2SPlatformVerifyReq::has_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2SPlatformVerifyReq::set_has_app_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2SPlatformVerifyReq::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2SPlatformVerifyReq::clear_app_id() {
  app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_id();
}
inline const ::std::string& C2SPlatformVerifyReq::app_id() const {
  // @@protoc_insertion_point(field_get:message.C2SPlatformVerifyReq.app_id)
  return app_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C2SPlatformVerifyReq::set_app_id(const ::std::string& value) {
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.C2SPlatformVerifyReq.app_id)
}
inline void C2SPlatformVerifyReq::set_app_id(const char* value) {
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.C2SPlatformVerifyReq.app_id)
}
inline void C2SPlatformVerifyReq::set_app_id(const char* value, size_t size) {
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.C2SPlatformVerifyReq.app_id)
}
inline ::std::string* C2SPlatformVerifyReq::mutable_app_id() {
  set_has_app_id();
  // @@protoc_insertion_point(field_mutable:message.C2SPlatformVerifyReq.app_id)
  return app_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C2SPlatformVerifyReq::release_app_id() {
  clear_has_app_id();
  return app_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C2SPlatformVerifyReq::set_allocated_app_id(::std::string* app_id) {
  if (app_id != NULL) {
    set_has_app_id();
  } else {
    clear_has_app_id();
  }
  app_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_id);
  // @@protoc_insertion_point(field_set_allocated:message.C2SPlatformVerifyReq.app_id)
}

// required string app_key = 3;
inline bool C2SPlatformVerifyReq::has_app_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2SPlatformVerifyReq::set_has_app_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2SPlatformVerifyReq::clear_has_app_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2SPlatformVerifyReq::clear_app_key() {
  app_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_key();
}
inline const ::std::string& C2SPlatformVerifyReq::app_key() const {
  // @@protoc_insertion_point(field_get:message.C2SPlatformVerifyReq.app_key)
  return app_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C2SPlatformVerifyReq::set_app_key(const ::std::string& value) {
  set_has_app_key();
  app_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.C2SPlatformVerifyReq.app_key)
}
inline void C2SPlatformVerifyReq::set_app_key(const char* value) {
  set_has_app_key();
  app_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.C2SPlatformVerifyReq.app_key)
}
inline void C2SPlatformVerifyReq::set_app_key(const char* value, size_t size) {
  set_has_app_key();
  app_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.C2SPlatformVerifyReq.app_key)
}
inline ::std::string* C2SPlatformVerifyReq::mutable_app_key() {
  set_has_app_key();
  // @@protoc_insertion_point(field_mutable:message.C2SPlatformVerifyReq.app_key)
  return app_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C2SPlatformVerifyReq::release_app_key() {
  clear_has_app_key();
  return app_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C2SPlatformVerifyReq::set_allocated_app_key(::std::string* app_key) {
  if (app_key != NULL) {
    set_has_app_key();
  } else {
    clear_has_app_key();
  }
  app_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_key);
  // @@protoc_insertion_point(field_set_allocated:message.C2SPlatformVerifyReq.app_key)
}

// required string token_id = 4;
inline bool C2SPlatformVerifyReq::has_token_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2SPlatformVerifyReq::set_has_token_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2SPlatformVerifyReq::clear_has_token_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2SPlatformVerifyReq::clear_token_id() {
  token_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token_id();
}
inline const ::std::string& C2SPlatformVerifyReq::token_id() const {
  // @@protoc_insertion_point(field_get:message.C2SPlatformVerifyReq.token_id)
  return token_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C2SPlatformVerifyReq::set_token_id(const ::std::string& value) {
  set_has_token_id();
  token_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.C2SPlatformVerifyReq.token_id)
}
inline void C2SPlatformVerifyReq::set_token_id(const char* value) {
  set_has_token_id();
  token_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.C2SPlatformVerifyReq.token_id)
}
inline void C2SPlatformVerifyReq::set_token_id(const char* value, size_t size) {
  set_has_token_id();
  token_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.C2SPlatformVerifyReq.token_id)
}
inline ::std::string* C2SPlatformVerifyReq::mutable_token_id() {
  set_has_token_id();
  // @@protoc_insertion_point(field_mutable:message.C2SPlatformVerifyReq.token_id)
  return token_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C2SPlatformVerifyReq::release_token_id() {
  clear_has_token_id();
  return token_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C2SPlatformVerifyReq::set_allocated_token_id(::std::string* token_id) {
  if (token_id != NULL) {
    set_has_token_id();
  } else {
    clear_has_token_id();
  }
  token_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token_id);
  // @@protoc_insertion_point(field_set_allocated:message.C2SPlatformVerifyReq.token_id)
}

// required int32 channel_id = 5;
inline bool C2SPlatformVerifyReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void C2SPlatformVerifyReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void C2SPlatformVerifyReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void C2SPlatformVerifyReq::clear_channel_id() {
  channel_id_ = 0;
  clear_has_channel_id();
}
inline ::google::protobuf::int32 C2SPlatformVerifyReq::channel_id() const {
  // @@protoc_insertion_point(field_get:message.C2SPlatformVerifyReq.channel_id)
  return channel_id_;
}
inline void C2SPlatformVerifyReq::set_channel_id(::google::protobuf::int32 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:message.C2SPlatformVerifyReq.channel_id)
}

// required string extra_data = 6;
inline bool C2SPlatformVerifyReq::has_extra_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void C2SPlatformVerifyReq::set_has_extra_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void C2SPlatformVerifyReq::clear_has_extra_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void C2SPlatformVerifyReq::clear_extra_data() {
  extra_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extra_data();
}
inline const ::std::string& C2SPlatformVerifyReq::extra_data() const {
  // @@protoc_insertion_point(field_get:message.C2SPlatformVerifyReq.extra_data)
  return extra_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C2SPlatformVerifyReq::set_extra_data(const ::std::string& value) {
  set_has_extra_data();
  extra_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.C2SPlatformVerifyReq.extra_data)
}
inline void C2SPlatformVerifyReq::set_extra_data(const char* value) {
  set_has_extra_data();
  extra_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.C2SPlatformVerifyReq.extra_data)
}
inline void C2SPlatformVerifyReq::set_extra_data(const char* value, size_t size) {
  set_has_extra_data();
  extra_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.C2SPlatformVerifyReq.extra_data)
}
inline ::std::string* C2SPlatformVerifyReq::mutable_extra_data() {
  set_has_extra_data();
  // @@protoc_insertion_point(field_mutable:message.C2SPlatformVerifyReq.extra_data)
  return extra_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C2SPlatformVerifyReq::release_extra_data() {
  clear_has_extra_data();
  return extra_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C2SPlatformVerifyReq::set_allocated_extra_data(::std::string* extra_data) {
  if (extra_data != NULL) {
    set_has_extra_data();
  } else {
    clear_has_extra_data();
  }
  extra_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra_data);
  // @@protoc_insertion_point(field_set_allocated:message.C2SPlatformVerifyReq.extra_data)
}

// -------------------------------------------------------------------

// S2CPlatformVerifyACK

// required string user_id = 1;
inline bool S2CPlatformVerifyACK::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2CPlatformVerifyACK::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2CPlatformVerifyACK::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2CPlatformVerifyACK::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& S2CPlatformVerifyACK::user_id() const {
  // @@protoc_insertion_point(field_get:message.S2CPlatformVerifyACK.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2CPlatformVerifyACK::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.S2CPlatformVerifyACK.user_id)
}
inline void S2CPlatformVerifyACK::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.S2CPlatformVerifyACK.user_id)
}
inline void S2CPlatformVerifyACK::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.S2CPlatformVerifyACK.user_id)
}
inline ::std::string* S2CPlatformVerifyACK::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:message.S2CPlatformVerifyACK.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2CPlatformVerifyACK::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2CPlatformVerifyACK::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:message.S2CPlatformVerifyACK.user_id)
}

// required string nick_name = 2;
inline bool S2CPlatformVerifyACK::has_nick_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2CPlatformVerifyACK::set_has_nick_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2CPlatformVerifyACK::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2CPlatformVerifyACK::clear_nick_name() {
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nick_name();
}
inline const ::std::string& S2CPlatformVerifyACK::nick_name() const {
  // @@protoc_insertion_point(field_get:message.S2CPlatformVerifyACK.nick_name)
  return nick_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2CPlatformVerifyACK::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.S2CPlatformVerifyACK.nick_name)
}
inline void S2CPlatformVerifyACK::set_nick_name(const char* value) {
  set_has_nick_name();
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.S2CPlatformVerifyACK.nick_name)
}
inline void S2CPlatformVerifyACK::set_nick_name(const char* value, size_t size) {
  set_has_nick_name();
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.S2CPlatformVerifyACK.nick_name)
}
inline ::std::string* S2CPlatformVerifyACK::mutable_nick_name() {
  set_has_nick_name();
  // @@protoc_insertion_point(field_mutable:message.S2CPlatformVerifyACK.nick_name)
  return nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2CPlatformVerifyACK::release_nick_name() {
  clear_has_nick_name();
  return nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2CPlatformVerifyACK::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name != NULL) {
    set_has_nick_name();
  } else {
    clear_has_nick_name();
  }
  nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick_name);
  // @@protoc_insertion_point(field_set_allocated:message.S2CPlatformVerifyACK.nick_name)
}

// required string token = 3;
inline bool S2CPlatformVerifyACK::has_token() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2CPlatformVerifyACK::set_has_token() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2CPlatformVerifyACK::clear_has_token() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2CPlatformVerifyACK::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
inline const ::std::string& S2CPlatformVerifyACK::token() const {
  // @@protoc_insertion_point(field_get:message.S2CPlatformVerifyACK.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2CPlatformVerifyACK::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.S2CPlatformVerifyACK.token)
}
inline void S2CPlatformVerifyACK::set_token(const char* value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.S2CPlatformVerifyACK.token)
}
inline void S2CPlatformVerifyACK::set_token(const char* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.S2CPlatformVerifyACK.token)
}
inline ::std::string* S2CPlatformVerifyACK::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:message.S2CPlatformVerifyACK.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2CPlatformVerifyACK::release_token() {
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2CPlatformVerifyACK::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:message.S2CPlatformVerifyACK.token)
}

// required bool success = 4;
inline bool S2CPlatformVerifyACK::has_success() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2CPlatformVerifyACK::set_has_success() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2CPlatformVerifyACK::clear_has_success() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2CPlatformVerifyACK::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool S2CPlatformVerifyACK::success() const {
  // @@protoc_insertion_point(field_get:message.S2CPlatformVerifyACK.success)
  return success_;
}
inline void S2CPlatformVerifyACK::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:message.S2CPlatformVerifyACK.success)
}

// -------------------------------------------------------------------

// MsgS2CPingNotify

// required int32 time = 1;
inline bool MsgS2CPingNotify::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgS2CPingNotify::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgS2CPingNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgS2CPingNotify::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 MsgS2CPingNotify::time() const {
  // @@protoc_insertion_point(field_get:message.MsgS2CPingNotify.time)
  return time_;
}
inline void MsgS2CPingNotify::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:message.MsgS2CPingNotify.time)
}

// required int32 ping_count = 2;
inline bool MsgS2CPingNotify::has_ping_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgS2CPingNotify::set_has_ping_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgS2CPingNotify::clear_has_ping_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgS2CPingNotify::clear_ping_count() {
  ping_count_ = 0;
  clear_has_ping_count();
}
inline ::google::protobuf::int32 MsgS2CPingNotify::ping_count() const {
  // @@protoc_insertion_point(field_get:message.MsgS2CPingNotify.ping_count)
  return ping_count_;
}
inline void MsgS2CPingNotify::set_ping_count(::google::protobuf::int32 value) {
  set_has_ping_count();
  ping_count_ = value;
  // @@protoc_insertion_point(field_set:message.MsgS2CPingNotify.ping_count)
}

// -------------------------------------------------------------------

// MsgC2SPingNotify

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace message

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::message::enumLoginResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::message::enumLoginResult>() {
  return ::message::enumLoginResult_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_login_2eproto__INCLUDED
