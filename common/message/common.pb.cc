// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace message {

namespace {

const ::google::protobuf::Descriptor* MsgIntPair_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgIntPair_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgIntBoolPair_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgIntBoolPair_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgWatchRecordInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgWatchRecordInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgVideo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgVideo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMovieExternal_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMovieExternal_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMovie_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMovie_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMovieThemeExternal_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMovieThemeExternal_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMovieTheme_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMovieTheme_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* VideoType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MovieType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_common_2eproto() {
  protobuf_AddDesc_common_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "common.proto");
  GOOGLE_CHECK(file != NULL);
  MsgIntPair_descriptor_ = file->message_type(0);
  static const int MsgIntPair_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntPair, number_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntPair, number_2_),
  };
  MsgIntPair_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgIntPair_descriptor_,
      MsgIntPair::default_instance_,
      MsgIntPair_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntPair, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgIntPair),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntPair, _internal_metadata_),
      -1);
  MsgIntBoolPair_descriptor_ = file->message_type(1);
  static const int MsgIntBoolPair_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntBoolPair, number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntBoolPair, valid_),
  };
  MsgIntBoolPair_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgIntBoolPair_descriptor_,
      MsgIntBoolPair::default_instance_,
      MsgIntBoolPair_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntBoolPair, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgIntBoolPair),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntBoolPair, _internal_metadata_),
      -1);
  MsgWatchRecordInfo_descriptor_ = file->message_type(2);
  static const int MsgWatchRecordInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgWatchRecordInfo, movie_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgWatchRecordInfo, video_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgWatchRecordInfo, progress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgWatchRecordInfo, time_),
  };
  MsgWatchRecordInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgWatchRecordInfo_descriptor_,
      MsgWatchRecordInfo::default_instance_,
      MsgWatchRecordInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgWatchRecordInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgWatchRecordInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgWatchRecordInfo, _internal_metadata_),
      -1);
  MsgVideo_descriptor_ = file->message_type(3);
  static const int MsgVideo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgVideo, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgVideo, describe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgVideo, rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgVideo, video_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgVideo, name_),
  };
  MsgVideo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgVideo_descriptor_,
      MsgVideo::default_instance_,
      MsgVideo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgVideo, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgVideo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgVideo, _internal_metadata_),
      -1);
  MsgMovieExternal_descriptor_ = file->message_type(4);
  static const int MsgMovieExternal_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMovieExternal, movie_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMovieExternal, describe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMovieExternal, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMovieExternal, name_),
  };
  MsgMovieExternal_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgMovieExternal_descriptor_,
      MsgMovieExternal::default_instance_,
      MsgMovieExternal_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMovieExternal, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgMovieExternal),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMovieExternal, _internal_metadata_),
      -1);
  MsgMovie_descriptor_ = file->message_type(5);
  static const int MsgMovie_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMovie, external_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMovie, videos_),
  };
  MsgMovie_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgMovie_descriptor_,
      MsgMovie::default_instance_,
      MsgMovie_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMovie, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgMovie),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMovie, _internal_metadata_),
      -1);
  MsgMovieThemeExternal_descriptor_ = file->message_type(6);
  static const int MsgMovieThemeExternal_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMovieThemeExternal, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMovieThemeExternal, describe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMovieThemeExternal, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMovieThemeExternal, id_),
  };
  MsgMovieThemeExternal_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgMovieThemeExternal_descriptor_,
      MsgMovieThemeExternal::default_instance_,
      MsgMovieThemeExternal_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMovieThemeExternal, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgMovieThemeExternal),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMovieThemeExternal, _internal_metadata_),
      -1);
  MsgMovieTheme_descriptor_ = file->message_type(7);
  static const int MsgMovieTheme_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMovieTheme, theme_external_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMovieTheme, movies_externals_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMovieTheme, movie_ratting_),
  };
  MsgMovieTheme_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgMovieTheme_descriptor_,
      MsgMovieTheme::default_instance_,
      MsgMovieTheme_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMovieTheme, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgMovieTheme),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMovieTheme, _internal_metadata_),
      -1);
  VideoType_descriptor_ = file->enum_type(0);
  MovieType_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_common_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgIntPair_descriptor_, &MsgIntPair::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgIntBoolPair_descriptor_, &MsgIntBoolPair::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgWatchRecordInfo_descriptor_, &MsgWatchRecordInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgVideo_descriptor_, &MsgVideo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgMovieExternal_descriptor_, &MsgMovieExternal::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgMovie_descriptor_, &MsgMovie::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgMovieThemeExternal_descriptor_, &MsgMovieThemeExternal::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgMovieTheme_descriptor_, &MsgMovieTheme::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_common_2eproto() {
  delete MsgIntPair::default_instance_;
  delete MsgIntPair_reflection_;
  delete MsgIntBoolPair::default_instance_;
  delete MsgIntBoolPair_reflection_;
  delete MsgWatchRecordInfo::default_instance_;
  delete MsgWatchRecordInfo_reflection_;
  delete MsgVideo::default_instance_;
  delete MsgVideo_reflection_;
  delete MsgMovieExternal::default_instance_;
  delete MsgMovieExternal_reflection_;
  delete MsgMovie::default_instance_;
  delete MsgMovie_reflection_;
  delete MsgMovieThemeExternal::default_instance_;
  delete MsgMovieThemeExternal_reflection_;
  delete MsgMovieTheme::default_instance_;
  delete MsgMovieTheme_reflection_;
}

void protobuf_AddDesc_common_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014common.proto\022\007message\"0\n\nMsgIntPair\022\020\n"
    "\010number_1\030\001 \002(\003\022\020\n\010number_2\030\002 \002(\003\"/\n\016Msg"
    "IntBoolPair\022\016\n\006number\030\001 \002(\005\022\r\n\005valid\030\002 \002"
    "(\010\"X\n\022MsgWatchRecordInfo\022\020\n\010movie_id\030\001 \002"
    "(\003\022\020\n\010video_id\030\002 \002(\003\022\020\n\010Progress\030\003 \002(\005\022\014"
    "\n\004time\030\004 \002(\003\"X\n\010MsgVideo\022\014\n\004path\030\001 \002(\t\022\020"
    "\n\010describe\030\002 \002(\t\022\014\n\004rank\030\003 \002(\005\022\020\n\010video_"
    "id\030\004 \002(\003\022\014\n\004name\030\005 \002(\t\"w\n\020MsgMovieExtern"
    "al\022\020\n\010movie_id\030\001 \002(\003\022\020\n\010describe\030\002 \002(\t\0221"
    "\n\004type\030\003 \002(\0162\022.message.VideoType:\017VideoT"
    "ype_Video\022\014\n\004name\030\004 \002(\t\"Z\n\010MsgMovie\022+\n\010e"
    "xternal\030\001 \002(\0132\031.message.MsgMovieExternal"
    "\022!\n\006videos\030\002 \003(\0132\021.message.MsgVideo\"|\n\025M"
    "sgMovieThemeExternal\022\014\n\004name\030\001 \002(\t\022\020\n\010de"
    "scribe\030\002 \002(\t\0227\n\004type\030\003 \002(\0162\022.message.Mov"
    "ieType:\025MovieType_MyFavourite\022\n\n\002id\030\004 \002("
    "\003\"\250\001\n\rMsgMovieTheme\0226\n\016theme_external\030\001 "
    "\002(\0132\036.message.MsgMovieThemeExternal\0223\n\020m"
    "ovies_externals\030\002 \003(\0132\031.message.MsgMovie"
    "External\022*\n\rmovie_ratting\030\003 \003(\0132\023.messag"
    "e.MsgIntPair*5\n\tVideoType\022\023\n\017VideoType_V"
    "ideo\020\000\022\023\n\017VideoType_Movie\020\001*\207\002\n\tMovieTyp"
    "e\022\032\n\026MovieType_RecentlyPlay\020\000\022\031\n\025MovieTy"
    "pe_MyFavourite\020\001\022\034\n\030MovieType_Derivative"
    "Shop\020\002\022\026\n\022MovieType_Festival\020\003\022\022\n\016MovieT"
    "ype_Rank\020\004\022\025\n\021MovieType_Feature\020\005\022#\n\037Mov"
    "ieType_CartoonRecommendation\020\006\022*\n&MovieT"
    "ype_EarlyEducationRecommendation\020\007\022\021\n\rMo"
    "vieType_New\020\010", 1133);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common.proto", &protobuf_RegisterTypes);
  MsgIntPair::default_instance_ = new MsgIntPair();
  MsgIntBoolPair::default_instance_ = new MsgIntBoolPair();
  MsgWatchRecordInfo::default_instance_ = new MsgWatchRecordInfo();
  MsgVideo::default_instance_ = new MsgVideo();
  MsgMovieExternal::default_instance_ = new MsgMovieExternal();
  MsgMovie::default_instance_ = new MsgMovie();
  MsgMovieThemeExternal::default_instance_ = new MsgMovieThemeExternal();
  MsgMovieTheme::default_instance_ = new MsgMovieTheme();
  MsgIntPair::default_instance_->InitAsDefaultInstance();
  MsgIntBoolPair::default_instance_->InitAsDefaultInstance();
  MsgWatchRecordInfo::default_instance_->InitAsDefaultInstance();
  MsgVideo::default_instance_->InitAsDefaultInstance();
  MsgMovieExternal::default_instance_->InitAsDefaultInstance();
  MsgMovie::default_instance_->InitAsDefaultInstance();
  MsgMovieThemeExternal::default_instance_->InitAsDefaultInstance();
  MsgMovieTheme::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_common_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_common_2eproto {
  StaticDescriptorInitializer_common_2eproto() {
    protobuf_AddDesc_common_2eproto();
  }
} static_descriptor_initializer_common_2eproto_;
const ::google::protobuf::EnumDescriptor* VideoType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VideoType_descriptor_;
}
bool VideoType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MovieType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MovieType_descriptor_;
}
bool MovieType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int MsgIntPair::kNumber1FieldNumber;
const int MsgIntPair::kNumber2FieldNumber;
#endif  // !_MSC_VER

MsgIntPair::MsgIntPair()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgIntPair)
}

void MsgIntPair::InitAsDefaultInstance() {
}

MsgIntPair::MsgIntPair(const MsgIntPair& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgIntPair)
}

void MsgIntPair::SharedCtor() {
  _cached_size_ = 0;
  number_1_ = GOOGLE_LONGLONG(0);
  number_2_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgIntPair::~MsgIntPair() {
  // @@protoc_insertion_point(destructor:message.MsgIntPair)
  SharedDtor();
}

void MsgIntPair::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgIntPair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgIntPair::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgIntPair_descriptor_;
}

const MsgIntPair& MsgIntPair::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

MsgIntPair* MsgIntPair::default_instance_ = NULL;

MsgIntPair* MsgIntPair::New(::google::protobuf::Arena* arena) const {
  MsgIntPair* n = new MsgIntPair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgIntPair::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgIntPair*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(number_1_, number_2_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgIntPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgIntPair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 number_1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &number_1_)));
          set_has_number_1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_number_2;
        break;
      }

      // required int64 number_2 = 2;
      case 2: {
        if (tag == 16) {
         parse_number_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &number_2_)));
          set_has_number_2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgIntPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgIntPair)
  return false;
#undef DO_
}

void MsgIntPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgIntPair)
  // required int64 number_1 = 1;
  if (has_number_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->number_1(), output);
  }

  // required int64 number_2 = 2;
  if (has_number_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->number_2(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgIntPair)
}

::google::protobuf::uint8* MsgIntPair::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgIntPair)
  // required int64 number_1 = 1;
  if (has_number_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->number_1(), target);
  }

  // required int64 number_2 = 2;
  if (has_number_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->number_2(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgIntPair)
  return target;
}

int MsgIntPair::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_number_1()) {
    // required int64 number_1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->number_1());
  }

  if (has_number_2()) {
    // required int64 number_2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->number_2());
  }

  return total_size;
}
int MsgIntPair::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 number_1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->number_1());

    // required int64 number_2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->number_2());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgIntPair::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgIntPair* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgIntPair*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgIntPair::MergeFrom(const MsgIntPair& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_number_1()) {
      set_number_1(from.number_1());
    }
    if (from.has_number_2()) {
      set_number_2(from.number_2());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgIntPair::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgIntPair::CopyFrom(const MsgIntPair& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgIntPair::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MsgIntPair::Swap(MsgIntPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgIntPair::InternalSwap(MsgIntPair* other) {
  std::swap(number_1_, other->number_1_);
  std::swap(number_2_, other->number_2_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgIntPair::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgIntPair_descriptor_;
  metadata.reflection = MsgIntPair_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgIntPair

// required int64 number_1 = 1;
 bool MsgIntPair::has_number_1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgIntPair::set_has_number_1() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgIntPair::clear_has_number_1() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgIntPair::clear_number_1() {
  number_1_ = GOOGLE_LONGLONG(0);
  clear_has_number_1();
}
 ::google::protobuf::int64 MsgIntPair::number_1() const {
  // @@protoc_insertion_point(field_get:message.MsgIntPair.number_1)
  return number_1_;
}
 void MsgIntPair::set_number_1(::google::protobuf::int64 value) {
  set_has_number_1();
  number_1_ = value;
  // @@protoc_insertion_point(field_set:message.MsgIntPair.number_1)
}

// required int64 number_2 = 2;
 bool MsgIntPair::has_number_2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgIntPair::set_has_number_2() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgIntPair::clear_has_number_2() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgIntPair::clear_number_2() {
  number_2_ = GOOGLE_LONGLONG(0);
  clear_has_number_2();
}
 ::google::protobuf::int64 MsgIntPair::number_2() const {
  // @@protoc_insertion_point(field_get:message.MsgIntPair.number_2)
  return number_2_;
}
 void MsgIntPair::set_number_2(::google::protobuf::int64 value) {
  set_has_number_2();
  number_2_ = value;
  // @@protoc_insertion_point(field_set:message.MsgIntPair.number_2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgIntBoolPair::kNumberFieldNumber;
const int MsgIntBoolPair::kValidFieldNumber;
#endif  // !_MSC_VER

MsgIntBoolPair::MsgIntBoolPair()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgIntBoolPair)
}

void MsgIntBoolPair::InitAsDefaultInstance() {
}

MsgIntBoolPair::MsgIntBoolPair(const MsgIntBoolPair& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgIntBoolPair)
}

void MsgIntBoolPair::SharedCtor() {
  _cached_size_ = 0;
  number_ = 0;
  valid_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgIntBoolPair::~MsgIntBoolPair() {
  // @@protoc_insertion_point(destructor:message.MsgIntBoolPair)
  SharedDtor();
}

void MsgIntBoolPair::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgIntBoolPair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgIntBoolPair::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgIntBoolPair_descriptor_;
}

const MsgIntBoolPair& MsgIntBoolPair::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

MsgIntBoolPair* MsgIntBoolPair::default_instance_ = NULL;

MsgIntBoolPair* MsgIntBoolPair::New(::google::protobuf::Arena* arena) const {
  MsgIntBoolPair* n = new MsgIntBoolPair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgIntBoolPair::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgIntBoolPair*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(number_, valid_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgIntBoolPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgIntBoolPair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 number = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_)));
          set_has_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_valid;
        break;
      }

      // required bool valid = 2;
      case 2: {
        if (tag == 16) {
         parse_valid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &valid_)));
          set_has_valid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgIntBoolPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgIntBoolPair)
  return false;
#undef DO_
}

void MsgIntBoolPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgIntBoolPair)
  // required int32 number = 1;
  if (has_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->number(), output);
  }

  // required bool valid = 2;
  if (has_valid()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->valid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgIntBoolPair)
}

::google::protobuf::uint8* MsgIntBoolPair::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgIntBoolPair)
  // required int32 number = 1;
  if (has_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->number(), target);
  }

  // required bool valid = 2;
  if (has_valid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->valid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgIntBoolPair)
  return target;
}

int MsgIntBoolPair::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_number()) {
    // required int32 number = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number());
  }

  if (has_valid()) {
    // required bool valid = 2;
    total_size += 1 + 1;
  }

  return total_size;
}
int MsgIntBoolPair::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 number = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number());

    // required bool valid = 2;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgIntBoolPair::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgIntBoolPair* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgIntBoolPair*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgIntBoolPair::MergeFrom(const MsgIntBoolPair& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_number()) {
      set_number(from.number());
    }
    if (from.has_valid()) {
      set_valid(from.valid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgIntBoolPair::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgIntBoolPair::CopyFrom(const MsgIntBoolPair& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgIntBoolPair::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MsgIntBoolPair::Swap(MsgIntBoolPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgIntBoolPair::InternalSwap(MsgIntBoolPair* other) {
  std::swap(number_, other->number_);
  std::swap(valid_, other->valid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgIntBoolPair::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgIntBoolPair_descriptor_;
  metadata.reflection = MsgIntBoolPair_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgIntBoolPair

// required int32 number = 1;
 bool MsgIntBoolPair::has_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgIntBoolPair::set_has_number() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgIntBoolPair::clear_has_number() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgIntBoolPair::clear_number() {
  number_ = 0;
  clear_has_number();
}
 ::google::protobuf::int32 MsgIntBoolPair::number() const {
  // @@protoc_insertion_point(field_get:message.MsgIntBoolPair.number)
  return number_;
}
 void MsgIntBoolPair::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
  // @@protoc_insertion_point(field_set:message.MsgIntBoolPair.number)
}

// required bool valid = 2;
 bool MsgIntBoolPair::has_valid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgIntBoolPair::set_has_valid() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgIntBoolPair::clear_has_valid() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgIntBoolPair::clear_valid() {
  valid_ = false;
  clear_has_valid();
}
 bool MsgIntBoolPair::valid() const {
  // @@protoc_insertion_point(field_get:message.MsgIntBoolPair.valid)
  return valid_;
}
 void MsgIntBoolPair::set_valid(bool value) {
  set_has_valid();
  valid_ = value;
  // @@protoc_insertion_point(field_set:message.MsgIntBoolPair.valid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgWatchRecordInfo::kMovieIdFieldNumber;
const int MsgWatchRecordInfo::kVideoIdFieldNumber;
const int MsgWatchRecordInfo::kProgressFieldNumber;
const int MsgWatchRecordInfo::kTimeFieldNumber;
#endif  // !_MSC_VER

MsgWatchRecordInfo::MsgWatchRecordInfo()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgWatchRecordInfo)
}

void MsgWatchRecordInfo::InitAsDefaultInstance() {
}

MsgWatchRecordInfo::MsgWatchRecordInfo(const MsgWatchRecordInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgWatchRecordInfo)
}

void MsgWatchRecordInfo::SharedCtor() {
  _cached_size_ = 0;
  movie_id_ = GOOGLE_LONGLONG(0);
  video_id_ = GOOGLE_LONGLONG(0);
  progress_ = 0;
  time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgWatchRecordInfo::~MsgWatchRecordInfo() {
  // @@protoc_insertion_point(destructor:message.MsgWatchRecordInfo)
  SharedDtor();
}

void MsgWatchRecordInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgWatchRecordInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgWatchRecordInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgWatchRecordInfo_descriptor_;
}

const MsgWatchRecordInfo& MsgWatchRecordInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

MsgWatchRecordInfo* MsgWatchRecordInfo::default_instance_ = NULL;

MsgWatchRecordInfo* MsgWatchRecordInfo::New(::google::protobuf::Arena* arena) const {
  MsgWatchRecordInfo* n = new MsgWatchRecordInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgWatchRecordInfo::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgWatchRecordInfo*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(movie_id_, progress_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgWatchRecordInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgWatchRecordInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 movie_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &movie_id_)));
          set_has_movie_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_video_id;
        break;
      }

      // required int64 video_id = 2;
      case 2: {
        if (tag == 16) {
         parse_video_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &video_id_)));
          set_has_video_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Progress;
        break;
      }

      // required int32 Progress = 3;
      case 3: {
        if (tag == 24) {
         parse_Progress:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &progress_)));
          set_has_progress();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_time;
        break;
      }

      // required int64 time = 4;
      case 4: {
        if (tag == 32) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgWatchRecordInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgWatchRecordInfo)
  return false;
#undef DO_
}

void MsgWatchRecordInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgWatchRecordInfo)
  // required int64 movie_id = 1;
  if (has_movie_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->movie_id(), output);
  }

  // required int64 video_id = 2;
  if (has_video_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->video_id(), output);
  }

  // required int32 Progress = 3;
  if (has_progress()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->progress(), output);
  }

  // required int64 time = 4;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgWatchRecordInfo)
}

::google::protobuf::uint8* MsgWatchRecordInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgWatchRecordInfo)
  // required int64 movie_id = 1;
  if (has_movie_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->movie_id(), target);
  }

  // required int64 video_id = 2;
  if (has_video_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->video_id(), target);
  }

  // required int32 Progress = 3;
  if (has_progress()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->progress(), target);
  }

  // required int64 time = 4;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgWatchRecordInfo)
  return target;
}

int MsgWatchRecordInfo::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_movie_id()) {
    // required int64 movie_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->movie_id());
  }

  if (has_video_id()) {
    // required int64 video_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->video_id());
  }

  if (has_progress()) {
    // required int32 Progress = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->progress());
  }

  if (has_time()) {
    // required int64 time = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  return total_size;
}
int MsgWatchRecordInfo::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int64 movie_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->movie_id());

    // required int64 video_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->video_id());

    // required int32 Progress = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->progress());

    // required int64 time = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgWatchRecordInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgWatchRecordInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgWatchRecordInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgWatchRecordInfo::MergeFrom(const MsgWatchRecordInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_movie_id()) {
      set_movie_id(from.movie_id());
    }
    if (from.has_video_id()) {
      set_video_id(from.video_id());
    }
    if (from.has_progress()) {
      set_progress(from.progress());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgWatchRecordInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgWatchRecordInfo::CopyFrom(const MsgWatchRecordInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgWatchRecordInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void MsgWatchRecordInfo::Swap(MsgWatchRecordInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgWatchRecordInfo::InternalSwap(MsgWatchRecordInfo* other) {
  std::swap(movie_id_, other->movie_id_);
  std::swap(video_id_, other->video_id_);
  std::swap(progress_, other->progress_);
  std::swap(time_, other->time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgWatchRecordInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgWatchRecordInfo_descriptor_;
  metadata.reflection = MsgWatchRecordInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgWatchRecordInfo

// required int64 movie_id = 1;
 bool MsgWatchRecordInfo::has_movie_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgWatchRecordInfo::set_has_movie_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgWatchRecordInfo::clear_has_movie_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgWatchRecordInfo::clear_movie_id() {
  movie_id_ = GOOGLE_LONGLONG(0);
  clear_has_movie_id();
}
 ::google::protobuf::int64 MsgWatchRecordInfo::movie_id() const {
  // @@protoc_insertion_point(field_get:message.MsgWatchRecordInfo.movie_id)
  return movie_id_;
}
 void MsgWatchRecordInfo::set_movie_id(::google::protobuf::int64 value) {
  set_has_movie_id();
  movie_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgWatchRecordInfo.movie_id)
}

// required int64 video_id = 2;
 bool MsgWatchRecordInfo::has_video_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgWatchRecordInfo::set_has_video_id() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgWatchRecordInfo::clear_has_video_id() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgWatchRecordInfo::clear_video_id() {
  video_id_ = GOOGLE_LONGLONG(0);
  clear_has_video_id();
}
 ::google::protobuf::int64 MsgWatchRecordInfo::video_id() const {
  // @@protoc_insertion_point(field_get:message.MsgWatchRecordInfo.video_id)
  return video_id_;
}
 void MsgWatchRecordInfo::set_video_id(::google::protobuf::int64 value) {
  set_has_video_id();
  video_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgWatchRecordInfo.video_id)
}

// required int32 Progress = 3;
 bool MsgWatchRecordInfo::has_progress() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void MsgWatchRecordInfo::set_has_progress() {
  _has_bits_[0] |= 0x00000004u;
}
 void MsgWatchRecordInfo::clear_has_progress() {
  _has_bits_[0] &= ~0x00000004u;
}
 void MsgWatchRecordInfo::clear_progress() {
  progress_ = 0;
  clear_has_progress();
}
 ::google::protobuf::int32 MsgWatchRecordInfo::progress() const {
  // @@protoc_insertion_point(field_get:message.MsgWatchRecordInfo.Progress)
  return progress_;
}
 void MsgWatchRecordInfo::set_progress(::google::protobuf::int32 value) {
  set_has_progress();
  progress_ = value;
  // @@protoc_insertion_point(field_set:message.MsgWatchRecordInfo.Progress)
}

// required int64 time = 4;
 bool MsgWatchRecordInfo::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void MsgWatchRecordInfo::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
 void MsgWatchRecordInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
 void MsgWatchRecordInfo::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
 ::google::protobuf::int64 MsgWatchRecordInfo::time() const {
  // @@protoc_insertion_point(field_get:message.MsgWatchRecordInfo.time)
  return time_;
}
 void MsgWatchRecordInfo::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:message.MsgWatchRecordInfo.time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgVideo::kPathFieldNumber;
const int MsgVideo::kDescribeFieldNumber;
const int MsgVideo::kRankFieldNumber;
const int MsgVideo::kVideoIdFieldNumber;
const int MsgVideo::kNameFieldNumber;
#endif  // !_MSC_VER

MsgVideo::MsgVideo()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgVideo)
}

void MsgVideo::InitAsDefaultInstance() {
}

MsgVideo::MsgVideo(const MsgVideo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgVideo)
}

void MsgVideo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  describe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rank_ = 0;
  video_id_ = GOOGLE_LONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgVideo::~MsgVideo() {
  // @@protoc_insertion_point(destructor:message.MsgVideo)
  SharedDtor();
}

void MsgVideo::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  describe_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgVideo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgVideo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgVideo_descriptor_;
}

const MsgVideo& MsgVideo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

MsgVideo* MsgVideo::default_instance_ = NULL;

MsgVideo* MsgVideo::New(::google::protobuf::Arena* arena) const {
  MsgVideo* n = new MsgVideo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgVideo::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    if (has_path()) {
      path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_describe()) {
      describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    rank_ = 0;
    video_id_ = GOOGLE_LONGLONG(0);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgVideo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgVideo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.MsgVideo.path");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_describe;
        break;
      }

      // required string describe = 2;
      case 2: {
        if (tag == 18) {
         parse_describe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_describe()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->describe().data(), this->describe().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.MsgVideo.describe");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_rank;
        break;
      }

      // required int32 rank = 3;
      case 3: {
        if (tag == 24) {
         parse_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
          set_has_rank();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_video_id;
        break;
      }

      // required int64 video_id = 4;
      case 4: {
        if (tag == 32) {
         parse_video_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &video_id_)));
          set_has_video_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_name;
        break;
      }

      // required string name = 5;
      case 5: {
        if (tag == 42) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.MsgVideo.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgVideo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgVideo)
  return false;
#undef DO_
}

void MsgVideo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgVideo)
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgVideo.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // required string describe = 2;
  if (has_describe()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->describe().data(), this->describe().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgVideo.describe");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->describe(), output);
  }

  // required int32 rank = 3;
  if (has_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->rank(), output);
  }

  // required int64 video_id = 4;
  if (has_video_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->video_id(), output);
  }

  // required string name = 5;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgVideo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgVideo)
}

::google::protobuf::uint8* MsgVideo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgVideo)
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgVideo.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // required string describe = 2;
  if (has_describe()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->describe().data(), this->describe().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgVideo.describe");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->describe(), target);
  }

  // required int32 rank = 3;
  if (has_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->rank(), target);
  }

  // required int64 video_id = 4;
  if (has_video_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->video_id(), target);
  }

  // required string name = 5;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgVideo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgVideo)
  return target;
}

int MsgVideo::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_path()) {
    // required string path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  if (has_describe()) {
    // required string describe = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->describe());
  }

  if (has_rank()) {
    // required int32 rank = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rank());
  }

  if (has_video_id()) {
    // required int64 video_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->video_id());
  }

  if (has_name()) {
    // required string name = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  return total_size;
}
int MsgVideo::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());

    // required string describe = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->describe());

    // required int32 rank = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rank());

    // required int64 video_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->video_id());

    // required string name = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgVideo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgVideo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgVideo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgVideo::MergeFrom(const MsgVideo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_path()) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (from.has_describe()) {
      set_has_describe();
      describe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.describe_);
    }
    if (from.has_rank()) {
      set_rank(from.rank());
    }
    if (from.has_video_id()) {
      set_video_id(from.video_id());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgVideo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgVideo::CopyFrom(const MsgVideo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgVideo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void MsgVideo::Swap(MsgVideo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgVideo::InternalSwap(MsgVideo* other) {
  path_.Swap(&other->path_);
  describe_.Swap(&other->describe_);
  std::swap(rank_, other->rank_);
  std::swap(video_id_, other->video_id_);
  name_.Swap(&other->name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgVideo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgVideo_descriptor_;
  metadata.reflection = MsgVideo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgVideo

// required string path = 1;
 bool MsgVideo::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgVideo::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgVideo::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgVideo::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
 const ::std::string& MsgVideo::path() const {
  // @@protoc_insertion_point(field_get:message.MsgVideo.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgVideo::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgVideo.path)
}
 void MsgVideo::set_path(const char* value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgVideo.path)
}
 void MsgVideo::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgVideo.path)
}
 ::std::string* MsgVideo::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:message.MsgVideo.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgVideo::release_path() {
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgVideo::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:message.MsgVideo.path)
}

// required string describe = 2;
 bool MsgVideo::has_describe() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgVideo::set_has_describe() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgVideo::clear_has_describe() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgVideo::clear_describe() {
  describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_describe();
}
 const ::std::string& MsgVideo::describe() const {
  // @@protoc_insertion_point(field_get:message.MsgVideo.describe)
  return describe_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgVideo::set_describe(const ::std::string& value) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgVideo.describe)
}
 void MsgVideo::set_describe(const char* value) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgVideo.describe)
}
 void MsgVideo::set_describe(const char* value, size_t size) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgVideo.describe)
}
 ::std::string* MsgVideo::mutable_describe() {
  set_has_describe();
  // @@protoc_insertion_point(field_mutable:message.MsgVideo.describe)
  return describe_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgVideo::release_describe() {
  clear_has_describe();
  return describe_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgVideo::set_allocated_describe(::std::string* describe) {
  if (describe != NULL) {
    set_has_describe();
  } else {
    clear_has_describe();
  }
  describe_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), describe);
  // @@protoc_insertion_point(field_set_allocated:message.MsgVideo.describe)
}

// required int32 rank = 3;
 bool MsgVideo::has_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void MsgVideo::set_has_rank() {
  _has_bits_[0] |= 0x00000004u;
}
 void MsgVideo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
 void MsgVideo::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
 ::google::protobuf::int32 MsgVideo::rank() const {
  // @@protoc_insertion_point(field_get:message.MsgVideo.rank)
  return rank_;
}
 void MsgVideo::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:message.MsgVideo.rank)
}

// required int64 video_id = 4;
 bool MsgVideo::has_video_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void MsgVideo::set_has_video_id() {
  _has_bits_[0] |= 0x00000008u;
}
 void MsgVideo::clear_has_video_id() {
  _has_bits_[0] &= ~0x00000008u;
}
 void MsgVideo::clear_video_id() {
  video_id_ = GOOGLE_LONGLONG(0);
  clear_has_video_id();
}
 ::google::protobuf::int64 MsgVideo::video_id() const {
  // @@protoc_insertion_point(field_get:message.MsgVideo.video_id)
  return video_id_;
}
 void MsgVideo::set_video_id(::google::protobuf::int64 value) {
  set_has_video_id();
  video_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgVideo.video_id)
}

// required string name = 5;
 bool MsgVideo::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void MsgVideo::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
 void MsgVideo::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
 void MsgVideo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& MsgVideo::name() const {
  // @@protoc_insertion_point(field_get:message.MsgVideo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgVideo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgVideo.name)
}
 void MsgVideo::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgVideo.name)
}
 void MsgVideo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgVideo.name)
}
 ::std::string* MsgVideo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:message.MsgVideo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgVideo::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgVideo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:message.MsgVideo.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgMovieExternal::kMovieIdFieldNumber;
const int MsgMovieExternal::kDescribeFieldNumber;
const int MsgMovieExternal::kTypeFieldNumber;
const int MsgMovieExternal::kNameFieldNumber;
#endif  // !_MSC_VER

MsgMovieExternal::MsgMovieExternal()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgMovieExternal)
}

void MsgMovieExternal::InitAsDefaultInstance() {
}

MsgMovieExternal::MsgMovieExternal(const MsgMovieExternal& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgMovieExternal)
}

void MsgMovieExternal::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  movie_id_ = GOOGLE_LONGLONG(0);
  describe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMovieExternal::~MsgMovieExternal() {
  // @@protoc_insertion_point(destructor:message.MsgMovieExternal)
  SharedDtor();
}

void MsgMovieExternal::SharedDtor() {
  describe_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgMovieExternal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMovieExternal::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMovieExternal_descriptor_;
}

const MsgMovieExternal& MsgMovieExternal::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

MsgMovieExternal* MsgMovieExternal::default_instance_ = NULL;

MsgMovieExternal* MsgMovieExternal::New(::google::protobuf::Arena* arena) const {
  MsgMovieExternal* n = new MsgMovieExternal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgMovieExternal::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    movie_id_ = GOOGLE_LONGLONG(0);
    if (has_describe()) {
      describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    type_ = 0;
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgMovieExternal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgMovieExternal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 movie_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &movie_id_)));
          set_has_movie_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_describe;
        break;
      }

      // required string describe = 2;
      case 2: {
        if (tag == 18) {
         parse_describe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_describe()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->describe().data(), this->describe().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.MsgMovieExternal.describe");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // required .message.VideoType type = 3 [default = VideoType_Video];
      case 3: {
        if (tag == 24) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::message::VideoType_IsValid(value)) {
            set_type(static_cast< ::message::VideoType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_name;
        break;
      }

      // required string name = 4;
      case 4: {
        if (tag == 34) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.MsgMovieExternal.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgMovieExternal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgMovieExternal)
  return false;
#undef DO_
}

void MsgMovieExternal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgMovieExternal)
  // required int64 movie_id = 1;
  if (has_movie_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->movie_id(), output);
  }

  // required string describe = 2;
  if (has_describe()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->describe().data(), this->describe().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgMovieExternal.describe");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->describe(), output);
  }

  // required .message.VideoType type = 3 [default = VideoType_Video];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // required string name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgMovieExternal.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgMovieExternal)
}

::google::protobuf::uint8* MsgMovieExternal::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgMovieExternal)
  // required int64 movie_id = 1;
  if (has_movie_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->movie_id(), target);
  }

  // required string describe = 2;
  if (has_describe()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->describe().data(), this->describe().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgMovieExternal.describe");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->describe(), target);
  }

  // required .message.VideoType type = 3 [default = VideoType_Video];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // required string name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgMovieExternal.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgMovieExternal)
  return target;
}

int MsgMovieExternal::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_movie_id()) {
    // required int64 movie_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->movie_id());
  }

  if (has_describe()) {
    // required string describe = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->describe());
  }

  if (has_type()) {
    // required .message.VideoType type = 3 [default = VideoType_Video];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  if (has_name()) {
    // required string name = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  return total_size;
}
int MsgMovieExternal::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int64 movie_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->movie_id());

    // required string describe = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->describe());

    // required .message.VideoType type = 3 [default = VideoType_Video];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

    // required string name = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMovieExternal::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgMovieExternal* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMovieExternal*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMovieExternal::MergeFrom(const MsgMovieExternal& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_movie_id()) {
      set_movie_id(from.movie_id());
    }
    if (from.has_describe()) {
      set_has_describe();
      describe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.describe_);
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgMovieExternal::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMovieExternal::CopyFrom(const MsgMovieExternal& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMovieExternal::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void MsgMovieExternal::Swap(MsgMovieExternal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgMovieExternal::InternalSwap(MsgMovieExternal* other) {
  std::swap(movie_id_, other->movie_id_);
  describe_.Swap(&other->describe_);
  std::swap(type_, other->type_);
  name_.Swap(&other->name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgMovieExternal::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMovieExternal_descriptor_;
  metadata.reflection = MsgMovieExternal_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgMovieExternal

// required int64 movie_id = 1;
 bool MsgMovieExternal::has_movie_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgMovieExternal::set_has_movie_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgMovieExternal::clear_has_movie_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgMovieExternal::clear_movie_id() {
  movie_id_ = GOOGLE_LONGLONG(0);
  clear_has_movie_id();
}
 ::google::protobuf::int64 MsgMovieExternal::movie_id() const {
  // @@protoc_insertion_point(field_get:message.MsgMovieExternal.movie_id)
  return movie_id_;
}
 void MsgMovieExternal::set_movie_id(::google::protobuf::int64 value) {
  set_has_movie_id();
  movie_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgMovieExternal.movie_id)
}

// required string describe = 2;
 bool MsgMovieExternal::has_describe() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgMovieExternal::set_has_describe() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgMovieExternal::clear_has_describe() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgMovieExternal::clear_describe() {
  describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_describe();
}
 const ::std::string& MsgMovieExternal::describe() const {
  // @@protoc_insertion_point(field_get:message.MsgMovieExternal.describe)
  return describe_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgMovieExternal::set_describe(const ::std::string& value) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgMovieExternal.describe)
}
 void MsgMovieExternal::set_describe(const char* value) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgMovieExternal.describe)
}
 void MsgMovieExternal::set_describe(const char* value, size_t size) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgMovieExternal.describe)
}
 ::std::string* MsgMovieExternal::mutable_describe() {
  set_has_describe();
  // @@protoc_insertion_point(field_mutable:message.MsgMovieExternal.describe)
  return describe_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgMovieExternal::release_describe() {
  clear_has_describe();
  return describe_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgMovieExternal::set_allocated_describe(::std::string* describe) {
  if (describe != NULL) {
    set_has_describe();
  } else {
    clear_has_describe();
  }
  describe_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), describe);
  // @@protoc_insertion_point(field_set_allocated:message.MsgMovieExternal.describe)
}

// required .message.VideoType type = 3 [default = VideoType_Video];
 bool MsgMovieExternal::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void MsgMovieExternal::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
 void MsgMovieExternal::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
 void MsgMovieExternal::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::message::VideoType MsgMovieExternal::type() const {
  // @@protoc_insertion_point(field_get:message.MsgMovieExternal.type)
  return static_cast< ::message::VideoType >(type_);
}
 void MsgMovieExternal::set_type(::message::VideoType value) {
  assert(::message::VideoType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:message.MsgMovieExternal.type)
}

// required string name = 4;
 bool MsgMovieExternal::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void MsgMovieExternal::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
 void MsgMovieExternal::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
 void MsgMovieExternal::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& MsgMovieExternal::name() const {
  // @@protoc_insertion_point(field_get:message.MsgMovieExternal.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgMovieExternal::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgMovieExternal.name)
}
 void MsgMovieExternal::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgMovieExternal.name)
}
 void MsgMovieExternal::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgMovieExternal.name)
}
 ::std::string* MsgMovieExternal::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:message.MsgMovieExternal.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgMovieExternal::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgMovieExternal::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:message.MsgMovieExternal.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgMovie::kExternalFieldNumber;
const int MsgMovie::kVideosFieldNumber;
#endif  // !_MSC_VER

MsgMovie::MsgMovie()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgMovie)
}

void MsgMovie::InitAsDefaultInstance() {
  external_ = const_cast< ::message::MsgMovieExternal*>(&::message::MsgMovieExternal::default_instance());
}

MsgMovie::MsgMovie(const MsgMovie& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgMovie)
}

void MsgMovie::SharedCtor() {
  _cached_size_ = 0;
  external_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMovie::~MsgMovie() {
  // @@protoc_insertion_point(destructor:message.MsgMovie)
  SharedDtor();
}

void MsgMovie::SharedDtor() {
  if (this != default_instance_) {
    delete external_;
  }
}

void MsgMovie::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMovie::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMovie_descriptor_;
}

const MsgMovie& MsgMovie::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

MsgMovie* MsgMovie::default_instance_ = NULL;

MsgMovie* MsgMovie::New(::google::protobuf::Arena* arena) const {
  MsgMovie* n = new MsgMovie;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgMovie::Clear() {
  if (has_external()) {
    if (external_ != NULL) external_->::message::MsgMovieExternal::Clear();
  }
  videos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgMovie::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgMovie)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.MsgMovieExternal external = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_external()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_videos;
        break;
      }

      // repeated .message.MsgVideo videos = 2;
      case 2: {
        if (tag == 18) {
         parse_videos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_videos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_videos;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgMovie)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgMovie)
  return false;
#undef DO_
}

void MsgMovie::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgMovie)
  // required .message.MsgMovieExternal external = 1;
  if (has_external()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->external_, output);
  }

  // repeated .message.MsgVideo videos = 2;
  for (unsigned int i = 0, n = this->videos_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->videos(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgMovie)
}

::google::protobuf::uint8* MsgMovie::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgMovie)
  // required .message.MsgMovieExternal external = 1;
  if (has_external()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->external_, target);
  }

  // repeated .message.MsgVideo videos = 2;
  for (unsigned int i = 0, n = this->videos_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->videos(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgMovie)
  return target;
}

int MsgMovie::ByteSize() const {
  int total_size = 0;

  // required .message.MsgMovieExternal external = 1;
  if (has_external()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->external_);
  }
  // repeated .message.MsgVideo videos = 2;
  total_size += 1 * this->videos_size();
  for (int i = 0; i < this->videos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->videos(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMovie::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgMovie* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMovie*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMovie::MergeFrom(const MsgMovie& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  videos_.MergeFrom(from.videos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_external()) {
      mutable_external()->::message::MsgMovieExternal::MergeFrom(from.external());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgMovie::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMovie::CopyFrom(const MsgMovie& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMovie::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_external()) {
    if (!this->external_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->videos())) return false;
  return true;
}

void MsgMovie::Swap(MsgMovie* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgMovie::InternalSwap(MsgMovie* other) {
  std::swap(external_, other->external_);
  videos_.UnsafeArenaSwap(&other->videos_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgMovie::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMovie_descriptor_;
  metadata.reflection = MsgMovie_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgMovie

// required .message.MsgMovieExternal external = 1;
 bool MsgMovie::has_external() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgMovie::set_has_external() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgMovie::clear_has_external() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgMovie::clear_external() {
  if (external_ != NULL) external_->::message::MsgMovieExternal::Clear();
  clear_has_external();
}
 const ::message::MsgMovieExternal& MsgMovie::external() const {
  // @@protoc_insertion_point(field_get:message.MsgMovie.external)
  return external_ != NULL ? *external_ : *default_instance_->external_;
}
 ::message::MsgMovieExternal* MsgMovie::mutable_external() {
  set_has_external();
  if (external_ == NULL) {
    external_ = new ::message::MsgMovieExternal;
  }
  // @@protoc_insertion_point(field_mutable:message.MsgMovie.external)
  return external_;
}
 ::message::MsgMovieExternal* MsgMovie::release_external() {
  clear_has_external();
  ::message::MsgMovieExternal* temp = external_;
  external_ = NULL;
  return temp;
}
 void MsgMovie::set_allocated_external(::message::MsgMovieExternal* external) {
  delete external_;
  external_ = external;
  if (external) {
    set_has_external();
  } else {
    clear_has_external();
  }
  // @@protoc_insertion_point(field_set_allocated:message.MsgMovie.external)
}

// repeated .message.MsgVideo videos = 2;
 int MsgMovie::videos_size() const {
  return videos_.size();
}
 void MsgMovie::clear_videos() {
  videos_.Clear();
}
 const ::message::MsgVideo& MsgMovie::videos(int index) const {
  // @@protoc_insertion_point(field_get:message.MsgMovie.videos)
  return videos_.Get(index);
}
 ::message::MsgVideo* MsgMovie::mutable_videos(int index) {
  // @@protoc_insertion_point(field_mutable:message.MsgMovie.videos)
  return videos_.Mutable(index);
}
 ::message::MsgVideo* MsgMovie::add_videos() {
  // @@protoc_insertion_point(field_add:message.MsgMovie.videos)
  return videos_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::MsgVideo >&
MsgMovie::videos() const {
  // @@protoc_insertion_point(field_list:message.MsgMovie.videos)
  return videos_;
}
 ::google::protobuf::RepeatedPtrField< ::message::MsgVideo >*
MsgMovie::mutable_videos() {
  // @@protoc_insertion_point(field_mutable_list:message.MsgMovie.videos)
  return &videos_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgMovieThemeExternal::kNameFieldNumber;
const int MsgMovieThemeExternal::kDescribeFieldNumber;
const int MsgMovieThemeExternal::kTypeFieldNumber;
const int MsgMovieThemeExternal::kIdFieldNumber;
#endif  // !_MSC_VER

MsgMovieThemeExternal::MsgMovieThemeExternal()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgMovieThemeExternal)
}

void MsgMovieThemeExternal::InitAsDefaultInstance() {
}

MsgMovieThemeExternal::MsgMovieThemeExternal(const MsgMovieThemeExternal& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgMovieThemeExternal)
}

void MsgMovieThemeExternal::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  describe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 1;
  id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMovieThemeExternal::~MsgMovieThemeExternal() {
  // @@protoc_insertion_point(destructor:message.MsgMovieThemeExternal)
  SharedDtor();
}

void MsgMovieThemeExternal::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  describe_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgMovieThemeExternal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMovieThemeExternal::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMovieThemeExternal_descriptor_;
}

const MsgMovieThemeExternal& MsgMovieThemeExternal::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

MsgMovieThemeExternal* MsgMovieThemeExternal::default_instance_ = NULL;

MsgMovieThemeExternal* MsgMovieThemeExternal::New(::google::protobuf::Arena* arena) const {
  MsgMovieThemeExternal* n = new MsgMovieThemeExternal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgMovieThemeExternal::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_describe()) {
      describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    type_ = 1;
    id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgMovieThemeExternal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgMovieThemeExternal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.MsgMovieThemeExternal.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_describe;
        break;
      }

      // required string describe = 2;
      case 2: {
        if (tag == 18) {
         parse_describe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_describe()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->describe().data(), this->describe().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.MsgMovieThemeExternal.describe");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // required .message.MovieType type = 3 [default = MovieType_MyFavourite];
      case 3: {
        if (tag == 24) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::message::MovieType_IsValid(value)) {
            set_type(static_cast< ::message::MovieType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_id;
        break;
      }

      // required int64 id = 4;
      case 4: {
        if (tag == 32) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgMovieThemeExternal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgMovieThemeExternal)
  return false;
#undef DO_
}

void MsgMovieThemeExternal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgMovieThemeExternal)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgMovieThemeExternal.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required string describe = 2;
  if (has_describe()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->describe().data(), this->describe().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgMovieThemeExternal.describe");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->describe(), output);
  }

  // required .message.MovieType type = 3 [default = MovieType_MyFavourite];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // required int64 id = 4;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgMovieThemeExternal)
}

::google::protobuf::uint8* MsgMovieThemeExternal::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgMovieThemeExternal)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgMovieThemeExternal.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string describe = 2;
  if (has_describe()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->describe().data(), this->describe().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgMovieThemeExternal.describe");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->describe(), target);
  }

  // required .message.MovieType type = 3 [default = MovieType_MyFavourite];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // required int64 id = 4;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgMovieThemeExternal)
  return target;
}

int MsgMovieThemeExternal::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_describe()) {
    // required string describe = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->describe());
  }

  if (has_type()) {
    // required .message.MovieType type = 3 [default = MovieType_MyFavourite];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  if (has_id()) {
    // required int64 id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  return total_size;
}
int MsgMovieThemeExternal::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string describe = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->describe());

    // required .message.MovieType type = 3 [default = MovieType_MyFavourite];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

    // required int64 id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMovieThemeExternal::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgMovieThemeExternal* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMovieThemeExternal*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMovieThemeExternal::MergeFrom(const MsgMovieThemeExternal& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_describe()) {
      set_has_describe();
      describe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.describe_);
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgMovieThemeExternal::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMovieThemeExternal::CopyFrom(const MsgMovieThemeExternal& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMovieThemeExternal::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void MsgMovieThemeExternal::Swap(MsgMovieThemeExternal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgMovieThemeExternal::InternalSwap(MsgMovieThemeExternal* other) {
  name_.Swap(&other->name_);
  describe_.Swap(&other->describe_);
  std::swap(type_, other->type_);
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgMovieThemeExternal::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMovieThemeExternal_descriptor_;
  metadata.reflection = MsgMovieThemeExternal_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgMovieThemeExternal

// required string name = 1;
 bool MsgMovieThemeExternal::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgMovieThemeExternal::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgMovieThemeExternal::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgMovieThemeExternal::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& MsgMovieThemeExternal::name() const {
  // @@protoc_insertion_point(field_get:message.MsgMovieThemeExternal.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgMovieThemeExternal::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgMovieThemeExternal.name)
}
 void MsgMovieThemeExternal::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgMovieThemeExternal.name)
}
 void MsgMovieThemeExternal::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgMovieThemeExternal.name)
}
 ::std::string* MsgMovieThemeExternal::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:message.MsgMovieThemeExternal.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgMovieThemeExternal::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgMovieThemeExternal::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:message.MsgMovieThemeExternal.name)
}

// required string describe = 2;
 bool MsgMovieThemeExternal::has_describe() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgMovieThemeExternal::set_has_describe() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgMovieThemeExternal::clear_has_describe() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgMovieThemeExternal::clear_describe() {
  describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_describe();
}
 const ::std::string& MsgMovieThemeExternal::describe() const {
  // @@protoc_insertion_point(field_get:message.MsgMovieThemeExternal.describe)
  return describe_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgMovieThemeExternal::set_describe(const ::std::string& value) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgMovieThemeExternal.describe)
}
 void MsgMovieThemeExternal::set_describe(const char* value) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgMovieThemeExternal.describe)
}
 void MsgMovieThemeExternal::set_describe(const char* value, size_t size) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgMovieThemeExternal.describe)
}
 ::std::string* MsgMovieThemeExternal::mutable_describe() {
  set_has_describe();
  // @@protoc_insertion_point(field_mutable:message.MsgMovieThemeExternal.describe)
  return describe_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgMovieThemeExternal::release_describe() {
  clear_has_describe();
  return describe_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgMovieThemeExternal::set_allocated_describe(::std::string* describe) {
  if (describe != NULL) {
    set_has_describe();
  } else {
    clear_has_describe();
  }
  describe_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), describe);
  // @@protoc_insertion_point(field_set_allocated:message.MsgMovieThemeExternal.describe)
}

// required .message.MovieType type = 3 [default = MovieType_MyFavourite];
 bool MsgMovieThemeExternal::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void MsgMovieThemeExternal::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
 void MsgMovieThemeExternal::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
 void MsgMovieThemeExternal::clear_type() {
  type_ = 1;
  clear_has_type();
}
 ::message::MovieType MsgMovieThemeExternal::type() const {
  // @@protoc_insertion_point(field_get:message.MsgMovieThemeExternal.type)
  return static_cast< ::message::MovieType >(type_);
}
 void MsgMovieThemeExternal::set_type(::message::MovieType value) {
  assert(::message::MovieType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:message.MsgMovieThemeExternal.type)
}

// required int64 id = 4;
 bool MsgMovieThemeExternal::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void MsgMovieThemeExternal::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
 void MsgMovieThemeExternal::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
 void MsgMovieThemeExternal::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
 ::google::protobuf::int64 MsgMovieThemeExternal::id() const {
  // @@protoc_insertion_point(field_get:message.MsgMovieThemeExternal.id)
  return id_;
}
 void MsgMovieThemeExternal::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgMovieThemeExternal.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgMovieTheme::kThemeExternalFieldNumber;
const int MsgMovieTheme::kMoviesExternalsFieldNumber;
const int MsgMovieTheme::kMovieRattingFieldNumber;
#endif  // !_MSC_VER

MsgMovieTheme::MsgMovieTheme()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgMovieTheme)
}

void MsgMovieTheme::InitAsDefaultInstance() {
  theme_external_ = const_cast< ::message::MsgMovieThemeExternal*>(&::message::MsgMovieThemeExternal::default_instance());
}

MsgMovieTheme::MsgMovieTheme(const MsgMovieTheme& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgMovieTheme)
}

void MsgMovieTheme::SharedCtor() {
  _cached_size_ = 0;
  theme_external_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMovieTheme::~MsgMovieTheme() {
  // @@protoc_insertion_point(destructor:message.MsgMovieTheme)
  SharedDtor();
}

void MsgMovieTheme::SharedDtor() {
  if (this != default_instance_) {
    delete theme_external_;
  }
}

void MsgMovieTheme::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMovieTheme::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMovieTheme_descriptor_;
}

const MsgMovieTheme& MsgMovieTheme::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

MsgMovieTheme* MsgMovieTheme::default_instance_ = NULL;

MsgMovieTheme* MsgMovieTheme::New(::google::protobuf::Arena* arena) const {
  MsgMovieTheme* n = new MsgMovieTheme;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgMovieTheme::Clear() {
  if (has_theme_external()) {
    if (theme_external_ != NULL) theme_external_->::message::MsgMovieThemeExternal::Clear();
  }
  movies_externals_.Clear();
  movie_ratting_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgMovieTheme::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgMovieTheme)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.MsgMovieThemeExternal theme_external = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_theme_external()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_movies_externals;
        break;
      }

      // repeated .message.MsgMovieExternal movies_externals = 2;
      case 2: {
        if (tag == 18) {
         parse_movies_externals:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_movies_externals()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_movies_externals;
        if (input->ExpectTag(26)) goto parse_movie_ratting;
        break;
      }

      // repeated .message.MsgIntPair movie_ratting = 3;
      case 3: {
        if (tag == 26) {
         parse_movie_ratting:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_movie_ratting()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_movie_ratting;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgMovieTheme)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgMovieTheme)
  return false;
#undef DO_
}

void MsgMovieTheme::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgMovieTheme)
  // required .message.MsgMovieThemeExternal theme_external = 1;
  if (has_theme_external()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->theme_external_, output);
  }

  // repeated .message.MsgMovieExternal movies_externals = 2;
  for (unsigned int i = 0, n = this->movies_externals_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->movies_externals(i), output);
  }

  // repeated .message.MsgIntPair movie_ratting = 3;
  for (unsigned int i = 0, n = this->movie_ratting_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->movie_ratting(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgMovieTheme)
}

::google::protobuf::uint8* MsgMovieTheme::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgMovieTheme)
  // required .message.MsgMovieThemeExternal theme_external = 1;
  if (has_theme_external()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->theme_external_, target);
  }

  // repeated .message.MsgMovieExternal movies_externals = 2;
  for (unsigned int i = 0, n = this->movies_externals_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->movies_externals(i), target);
  }

  // repeated .message.MsgIntPair movie_ratting = 3;
  for (unsigned int i = 0, n = this->movie_ratting_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->movie_ratting(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgMovieTheme)
  return target;
}

int MsgMovieTheme::ByteSize() const {
  int total_size = 0;

  // required .message.MsgMovieThemeExternal theme_external = 1;
  if (has_theme_external()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->theme_external_);
  }
  // repeated .message.MsgMovieExternal movies_externals = 2;
  total_size += 1 * this->movies_externals_size();
  for (int i = 0; i < this->movies_externals_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->movies_externals(i));
  }

  // repeated .message.MsgIntPair movie_ratting = 3;
  total_size += 1 * this->movie_ratting_size();
  for (int i = 0; i < this->movie_ratting_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->movie_ratting(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMovieTheme::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgMovieTheme* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMovieTheme*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMovieTheme::MergeFrom(const MsgMovieTheme& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  movies_externals_.MergeFrom(from.movies_externals_);
  movie_ratting_.MergeFrom(from.movie_ratting_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_theme_external()) {
      mutable_theme_external()->::message::MsgMovieThemeExternal::MergeFrom(from.theme_external());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgMovieTheme::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMovieTheme::CopyFrom(const MsgMovieTheme& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMovieTheme::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_theme_external()) {
    if (!this->theme_external_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->movies_externals())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->movie_ratting())) return false;
  return true;
}

void MsgMovieTheme::Swap(MsgMovieTheme* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgMovieTheme::InternalSwap(MsgMovieTheme* other) {
  std::swap(theme_external_, other->theme_external_);
  movies_externals_.UnsafeArenaSwap(&other->movies_externals_);
  movie_ratting_.UnsafeArenaSwap(&other->movie_ratting_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgMovieTheme::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMovieTheme_descriptor_;
  metadata.reflection = MsgMovieTheme_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgMovieTheme

// required .message.MsgMovieThemeExternal theme_external = 1;
 bool MsgMovieTheme::has_theme_external() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgMovieTheme::set_has_theme_external() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgMovieTheme::clear_has_theme_external() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgMovieTheme::clear_theme_external() {
  if (theme_external_ != NULL) theme_external_->::message::MsgMovieThemeExternal::Clear();
  clear_has_theme_external();
}
 const ::message::MsgMovieThemeExternal& MsgMovieTheme::theme_external() const {
  // @@protoc_insertion_point(field_get:message.MsgMovieTheme.theme_external)
  return theme_external_ != NULL ? *theme_external_ : *default_instance_->theme_external_;
}
 ::message::MsgMovieThemeExternal* MsgMovieTheme::mutable_theme_external() {
  set_has_theme_external();
  if (theme_external_ == NULL) {
    theme_external_ = new ::message::MsgMovieThemeExternal;
  }
  // @@protoc_insertion_point(field_mutable:message.MsgMovieTheme.theme_external)
  return theme_external_;
}
 ::message::MsgMovieThemeExternal* MsgMovieTheme::release_theme_external() {
  clear_has_theme_external();
  ::message::MsgMovieThemeExternal* temp = theme_external_;
  theme_external_ = NULL;
  return temp;
}
 void MsgMovieTheme::set_allocated_theme_external(::message::MsgMovieThemeExternal* theme_external) {
  delete theme_external_;
  theme_external_ = theme_external;
  if (theme_external) {
    set_has_theme_external();
  } else {
    clear_has_theme_external();
  }
  // @@protoc_insertion_point(field_set_allocated:message.MsgMovieTheme.theme_external)
}

// repeated .message.MsgMovieExternal movies_externals = 2;
 int MsgMovieTheme::movies_externals_size() const {
  return movies_externals_.size();
}
 void MsgMovieTheme::clear_movies_externals() {
  movies_externals_.Clear();
}
 const ::message::MsgMovieExternal& MsgMovieTheme::movies_externals(int index) const {
  // @@protoc_insertion_point(field_get:message.MsgMovieTheme.movies_externals)
  return movies_externals_.Get(index);
}
 ::message::MsgMovieExternal* MsgMovieTheme::mutable_movies_externals(int index) {
  // @@protoc_insertion_point(field_mutable:message.MsgMovieTheme.movies_externals)
  return movies_externals_.Mutable(index);
}
 ::message::MsgMovieExternal* MsgMovieTheme::add_movies_externals() {
  // @@protoc_insertion_point(field_add:message.MsgMovieTheme.movies_externals)
  return movies_externals_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::MsgMovieExternal >&
MsgMovieTheme::movies_externals() const {
  // @@protoc_insertion_point(field_list:message.MsgMovieTheme.movies_externals)
  return movies_externals_;
}
 ::google::protobuf::RepeatedPtrField< ::message::MsgMovieExternal >*
MsgMovieTheme::mutable_movies_externals() {
  // @@protoc_insertion_point(field_mutable_list:message.MsgMovieTheme.movies_externals)
  return &movies_externals_;
}

// repeated .message.MsgIntPair movie_ratting = 3;
 int MsgMovieTheme::movie_ratting_size() const {
  return movie_ratting_.size();
}
 void MsgMovieTheme::clear_movie_ratting() {
  movie_ratting_.Clear();
}
 const ::message::MsgIntPair& MsgMovieTheme::movie_ratting(int index) const {
  // @@protoc_insertion_point(field_get:message.MsgMovieTheme.movie_ratting)
  return movie_ratting_.Get(index);
}
 ::message::MsgIntPair* MsgMovieTheme::mutable_movie_ratting(int index) {
  // @@protoc_insertion_point(field_mutable:message.MsgMovieTheme.movie_ratting)
  return movie_ratting_.Mutable(index);
}
 ::message::MsgIntPair* MsgMovieTheme::add_movie_ratting() {
  // @@protoc_insertion_point(field_add:message.MsgMovieTheme.movie_ratting)
  return movie_ratting_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::MsgIntPair >&
MsgMovieTheme::movie_ratting() const {
  // @@protoc_insertion_point(field_list:message.MsgMovieTheme.movie_ratting)
  return movie_ratting_;
}
 ::google::protobuf::RepeatedPtrField< ::message::MsgIntPair >*
MsgMovieTheme::mutable_movie_ratting() {
  // @@protoc_insertion_point(field_mutable_list:message.MsgMovieTheme.movie_ratting)
  return &movie_ratting_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)
