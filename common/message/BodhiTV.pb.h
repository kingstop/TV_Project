// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BodhiTV.proto

#ifndef PROTOBUF_BodhiTV_2eproto__INCLUDED
#define PROTOBUF_BodhiTV_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace message {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_BodhiTV_2eproto();
void protobuf_AssignDesc_BodhiTV_2eproto();
void protobuf_ShutdownFile_BodhiTV_2eproto();

class MsgC2SReqMovieThemes;
class MsgS2CMovieThemesACK;
class MsgS2CClientInit;
class MsgC2SReqThemeInfo;
class MsgS2CMovieThemeInfoACK;
class MsgC2SReqMovieInfo;
class MsgS2CMovieInfoACK;

// ===================================================================

class MsgC2SReqMovieThemes : public ::google::protobuf::Message {
 public:
  MsgC2SReqMovieThemes();
  virtual ~MsgC2SReqMovieThemes();

  MsgC2SReqMovieThemes(const MsgC2SReqMovieThemes& from);

  inline MsgC2SReqMovieThemes& operator=(const MsgC2SReqMovieThemes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgC2SReqMovieThemes& default_instance();

  void Swap(MsgC2SReqMovieThemes* other);

  // implements Message ----------------------------------------------

  inline MsgC2SReqMovieThemes* New() const { return New(NULL); }

  MsgC2SReqMovieThemes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgC2SReqMovieThemes& from);
  void MergeFrom(const MsgC2SReqMovieThemes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgC2SReqMovieThemes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:message.MsgC2SReqMovieThemes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_BodhiTV_2eproto();
  friend void protobuf_AssignDesc_BodhiTV_2eproto();
  friend void protobuf_ShutdownFile_BodhiTV_2eproto();

  void InitAsDefaultInstance();
  static MsgC2SReqMovieThemes* default_instance_;
};
// -------------------------------------------------------------------

class MsgS2CMovieThemesACK : public ::google::protobuf::Message {
 public:
  MsgS2CMovieThemesACK();
  virtual ~MsgS2CMovieThemesACK();

  MsgS2CMovieThemesACK(const MsgS2CMovieThemesACK& from);

  inline MsgS2CMovieThemesACK& operator=(const MsgS2CMovieThemesACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgS2CMovieThemesACK& default_instance();

  void Swap(MsgS2CMovieThemesACK* other);

  // implements Message ----------------------------------------------

  inline MsgS2CMovieThemesACK* New() const { return New(NULL); }

  MsgS2CMovieThemesACK* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgS2CMovieThemesACK& from);
  void MergeFrom(const MsgS2CMovieThemesACK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgS2CMovieThemesACK* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .message.MsgMovieThemeExternal infos = 1;
  int infos_size() const;
  void clear_infos();
  static const int kInfosFieldNumber = 1;
  const ::message::MsgMovieThemeExternal& infos(int index) const;
  ::message::MsgMovieThemeExternal* mutable_infos(int index);
  ::message::MsgMovieThemeExternal* add_infos();
  const ::google::protobuf::RepeatedPtrField< ::message::MsgMovieThemeExternal >&
      infos() const;
  ::google::protobuf::RepeatedPtrField< ::message::MsgMovieThemeExternal >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:message.MsgS2CMovieThemesACK)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::message::MsgMovieThemeExternal > infos_;
  friend void  protobuf_AddDesc_BodhiTV_2eproto();
  friend void protobuf_AssignDesc_BodhiTV_2eproto();
  friend void protobuf_ShutdownFile_BodhiTV_2eproto();

  void InitAsDefaultInstance();
  static MsgS2CMovieThemesACK* default_instance_;
};
// -------------------------------------------------------------------

class MsgS2CClientInit : public ::google::protobuf::Message {
 public:
  MsgS2CClientInit();
  virtual ~MsgS2CClientInit();

  MsgS2CClientInit(const MsgS2CClientInit& from);

  inline MsgS2CClientInit& operator=(const MsgS2CClientInit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgS2CClientInit& default_instance();

  void Swap(MsgS2CClientInit* other);

  // implements Message ----------------------------------------------

  inline MsgS2CClientInit* New() const { return New(NULL); }

  MsgS2CClientInit* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgS2CClientInit& from);
  void MergeFrom(const MsgS2CClientInit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgS2CClientInit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .message.MsgWatchRecordInfo watch_record = 1;
  int watch_record_size() const;
  void clear_watch_record();
  static const int kWatchRecordFieldNumber = 1;
  const ::message::MsgWatchRecordInfo& watch_record(int index) const;
  ::message::MsgWatchRecordInfo* mutable_watch_record(int index);
  ::message::MsgWatchRecordInfo* add_watch_record();
  const ::google::protobuf::RepeatedPtrField< ::message::MsgWatchRecordInfo >&
      watch_record() const;
  ::google::protobuf::RepeatedPtrField< ::message::MsgWatchRecordInfo >*
      mutable_watch_record();

  // required int32 vip = 2;
  bool has_vip() const;
  void clear_vip();
  static const int kVipFieldNumber = 2;
  ::google::protobuf::int32 vip() const;
  void set_vip(::google::protobuf::int32 value);

  // required string resource_path = 3;
  bool has_resource_path() const;
  void clear_resource_path();
  static const int kResourcePathFieldNumber = 3;
  const ::std::string& resource_path() const;
  void set_resource_path(const ::std::string& value);
  void set_resource_path(const char* value);
  void set_resource_path(const char* value, size_t size);
  ::std::string* mutable_resource_path();
  ::std::string* release_resource_path();
  void set_allocated_resource_path(::std::string* resource_path);

  // required string config_pic_path = 4;
  bool has_config_pic_path() const;
  void clear_config_pic_path();
  static const int kConfigPicPathFieldNumber = 4;
  const ::std::string& config_pic_path() const;
  void set_config_pic_path(const ::std::string& value);
  void set_config_pic_path(const char* value);
  void set_config_pic_path(const char* value, size_t size);
  ::std::string* mutable_config_pic_path();
  ::std::string* release_config_pic_path();
  void set_allocated_config_pic_path(::std::string* config_pic_path);

  // required string config_video_path = 5;
  bool has_config_video_path() const;
  void clear_config_video_path();
  static const int kConfigVideoPathFieldNumber = 5;
  const ::std::string& config_video_path() const;
  void set_config_video_path(const ::std::string& value);
  void set_config_video_path(const char* value);
  void set_config_video_path(const char* value, size_t size);
  ::std::string* mutable_config_video_path();
  ::std::string* release_config_video_path();
  void set_allocated_config_video_path(::std::string* config_video_path);

  // repeated .message.MsgIntPair gird_theme = 6;
  int gird_theme_size() const;
  void clear_gird_theme();
  static const int kGirdThemeFieldNumber = 6;
  const ::message::MsgIntPair& gird_theme(int index) const;
  ::message::MsgIntPair* mutable_gird_theme(int index);
  ::message::MsgIntPair* add_gird_theme();
  const ::google::protobuf::RepeatedPtrField< ::message::MsgIntPair >&
      gird_theme() const;
  ::google::protobuf::RepeatedPtrField< ::message::MsgIntPair >*
      mutable_gird_theme();

  // @@protoc_insertion_point(class_scope:message.MsgS2CClientInit)
 private:
  inline void set_has_vip();
  inline void clear_has_vip();
  inline void set_has_resource_path();
  inline void clear_has_resource_path();
  inline void set_has_config_pic_path();
  inline void clear_has_config_pic_path();
  inline void set_has_config_video_path();
  inline void clear_has_config_video_path();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::message::MsgWatchRecordInfo > watch_record_;
  ::google::protobuf::internal::ArenaStringPtr resource_path_;
  ::google::protobuf::internal::ArenaStringPtr config_pic_path_;
  ::google::protobuf::internal::ArenaStringPtr config_video_path_;
  ::google::protobuf::RepeatedPtrField< ::message::MsgIntPair > gird_theme_;
  ::google::protobuf::int32 vip_;
  friend void  protobuf_AddDesc_BodhiTV_2eproto();
  friend void protobuf_AssignDesc_BodhiTV_2eproto();
  friend void protobuf_ShutdownFile_BodhiTV_2eproto();

  void InitAsDefaultInstance();
  static MsgS2CClientInit* default_instance_;
};
// -------------------------------------------------------------------

class MsgC2SReqThemeInfo : public ::google::protobuf::Message {
 public:
  MsgC2SReqThemeInfo();
  virtual ~MsgC2SReqThemeInfo();

  MsgC2SReqThemeInfo(const MsgC2SReqThemeInfo& from);

  inline MsgC2SReqThemeInfo& operator=(const MsgC2SReqThemeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgC2SReqThemeInfo& default_instance();

  void Swap(MsgC2SReqThemeInfo* other);

  // implements Message ----------------------------------------------

  inline MsgC2SReqThemeInfo* New() const { return New(NULL); }

  MsgC2SReqThemeInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgC2SReqThemeInfo& from);
  void MergeFrom(const MsgC2SReqThemeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgC2SReqThemeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 Theme_id = 1;
  bool has_theme_id() const;
  void clear_theme_id();
  static const int kThemeIdFieldNumber = 1;
  ::google::protobuf::int32 theme_id() const;
  void set_theme_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.MsgC2SReqThemeInfo)
 private:
  inline void set_has_theme_id();
  inline void clear_has_theme_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 theme_id_;
  friend void  protobuf_AddDesc_BodhiTV_2eproto();
  friend void protobuf_AssignDesc_BodhiTV_2eproto();
  friend void protobuf_ShutdownFile_BodhiTV_2eproto();

  void InitAsDefaultInstance();
  static MsgC2SReqThemeInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgS2CMovieThemeInfoACK : public ::google::protobuf::Message {
 public:
  MsgS2CMovieThemeInfoACK();
  virtual ~MsgS2CMovieThemeInfoACK();

  MsgS2CMovieThemeInfoACK(const MsgS2CMovieThemeInfoACK& from);

  inline MsgS2CMovieThemeInfoACK& operator=(const MsgS2CMovieThemeInfoACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgS2CMovieThemeInfoACK& default_instance();

  void Swap(MsgS2CMovieThemeInfoACK* other);

  // implements Message ----------------------------------------------

  inline MsgS2CMovieThemeInfoACK* New() const { return New(NULL); }

  MsgS2CMovieThemeInfoACK* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgS2CMovieThemeInfoACK& from);
  void MergeFrom(const MsgS2CMovieThemeInfoACK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgS2CMovieThemeInfoACK* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .message.MsgMovieTheme info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::message::MsgMovieTheme& info() const;
  ::message::MsgMovieTheme* mutable_info();
  ::message::MsgMovieTheme* release_info();
  void set_allocated_info(::message::MsgMovieTheme* info);

  // @@protoc_insertion_point(class_scope:message.MsgS2CMovieThemeInfoACK)
 private:
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::message::MsgMovieTheme* info_;
  friend void  protobuf_AddDesc_BodhiTV_2eproto();
  friend void protobuf_AssignDesc_BodhiTV_2eproto();
  friend void protobuf_ShutdownFile_BodhiTV_2eproto();

  void InitAsDefaultInstance();
  static MsgS2CMovieThemeInfoACK* default_instance_;
};
// -------------------------------------------------------------------

class MsgC2SReqMovieInfo : public ::google::protobuf::Message {
 public:
  MsgC2SReqMovieInfo();
  virtual ~MsgC2SReqMovieInfo();

  MsgC2SReqMovieInfo(const MsgC2SReqMovieInfo& from);

  inline MsgC2SReqMovieInfo& operator=(const MsgC2SReqMovieInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgC2SReqMovieInfo& default_instance();

  void Swap(MsgC2SReqMovieInfo* other);

  // implements Message ----------------------------------------------

  inline MsgC2SReqMovieInfo* New() const { return New(NULL); }

  MsgC2SReqMovieInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgC2SReqMovieInfo& from);
  void MergeFrom(const MsgC2SReqMovieInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgC2SReqMovieInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 movie_id = 1;
  bool has_movie_id() const;
  void clear_movie_id();
  static const int kMovieIdFieldNumber = 1;
  ::google::protobuf::int32 movie_id() const;
  void set_movie_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.MsgC2SReqMovieInfo)
 private:
  inline void set_has_movie_id();
  inline void clear_has_movie_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 movie_id_;
  friend void  protobuf_AddDesc_BodhiTV_2eproto();
  friend void protobuf_AssignDesc_BodhiTV_2eproto();
  friend void protobuf_ShutdownFile_BodhiTV_2eproto();

  void InitAsDefaultInstance();
  static MsgC2SReqMovieInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgS2CMovieInfoACK : public ::google::protobuf::Message {
 public:
  MsgS2CMovieInfoACK();
  virtual ~MsgS2CMovieInfoACK();

  MsgS2CMovieInfoACK(const MsgS2CMovieInfoACK& from);

  inline MsgS2CMovieInfoACK& operator=(const MsgS2CMovieInfoACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgS2CMovieInfoACK& default_instance();

  void Swap(MsgS2CMovieInfoACK* other);

  // implements Message ----------------------------------------------

  inline MsgS2CMovieInfoACK* New() const { return New(NULL); }

  MsgS2CMovieInfoACK* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgS2CMovieInfoACK& from);
  void MergeFrom(const MsgS2CMovieInfoACK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgS2CMovieInfoACK* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .message.MsgMovie info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::message::MsgMovie& info() const;
  ::message::MsgMovie* mutable_info();
  ::message::MsgMovie* release_info();
  void set_allocated_info(::message::MsgMovie* info);

  // @@protoc_insertion_point(class_scope:message.MsgS2CMovieInfoACK)
 private:
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::message::MsgMovie* info_;
  friend void  protobuf_AddDesc_BodhiTV_2eproto();
  friend void protobuf_AssignDesc_BodhiTV_2eproto();
  friend void protobuf_ShutdownFile_BodhiTV_2eproto();

  void InitAsDefaultInstance();
  static MsgS2CMovieInfoACK* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgC2SReqMovieThemes

// -------------------------------------------------------------------

// MsgS2CMovieThemesACK

// repeated .message.MsgMovieThemeExternal infos = 1;
inline int MsgS2CMovieThemesACK::infos_size() const {
  return infos_.size();
}
inline void MsgS2CMovieThemesACK::clear_infos() {
  infos_.Clear();
}
inline const ::message::MsgMovieThemeExternal& MsgS2CMovieThemesACK::infos(int index) const {
  // @@protoc_insertion_point(field_get:message.MsgS2CMovieThemesACK.infos)
  return infos_.Get(index);
}
inline ::message::MsgMovieThemeExternal* MsgS2CMovieThemesACK::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:message.MsgS2CMovieThemesACK.infos)
  return infos_.Mutable(index);
}
inline ::message::MsgMovieThemeExternal* MsgS2CMovieThemesACK::add_infos() {
  // @@protoc_insertion_point(field_add:message.MsgS2CMovieThemesACK.infos)
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::message::MsgMovieThemeExternal >&
MsgS2CMovieThemesACK::infos() const {
  // @@protoc_insertion_point(field_list:message.MsgS2CMovieThemesACK.infos)
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::message::MsgMovieThemeExternal >*
MsgS2CMovieThemesACK::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:message.MsgS2CMovieThemesACK.infos)
  return &infos_;
}

// -------------------------------------------------------------------

// MsgS2CClientInit

// repeated .message.MsgWatchRecordInfo watch_record = 1;
inline int MsgS2CClientInit::watch_record_size() const {
  return watch_record_.size();
}
inline void MsgS2CClientInit::clear_watch_record() {
  watch_record_.Clear();
}
inline const ::message::MsgWatchRecordInfo& MsgS2CClientInit::watch_record(int index) const {
  // @@protoc_insertion_point(field_get:message.MsgS2CClientInit.watch_record)
  return watch_record_.Get(index);
}
inline ::message::MsgWatchRecordInfo* MsgS2CClientInit::mutable_watch_record(int index) {
  // @@protoc_insertion_point(field_mutable:message.MsgS2CClientInit.watch_record)
  return watch_record_.Mutable(index);
}
inline ::message::MsgWatchRecordInfo* MsgS2CClientInit::add_watch_record() {
  // @@protoc_insertion_point(field_add:message.MsgS2CClientInit.watch_record)
  return watch_record_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::message::MsgWatchRecordInfo >&
MsgS2CClientInit::watch_record() const {
  // @@protoc_insertion_point(field_list:message.MsgS2CClientInit.watch_record)
  return watch_record_;
}
inline ::google::protobuf::RepeatedPtrField< ::message::MsgWatchRecordInfo >*
MsgS2CClientInit::mutable_watch_record() {
  // @@protoc_insertion_point(field_mutable_list:message.MsgS2CClientInit.watch_record)
  return &watch_record_;
}

// required int32 vip = 2;
inline bool MsgS2CClientInit::has_vip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgS2CClientInit::set_has_vip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgS2CClientInit::clear_has_vip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgS2CClientInit::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
inline ::google::protobuf::int32 MsgS2CClientInit::vip() const {
  // @@protoc_insertion_point(field_get:message.MsgS2CClientInit.vip)
  return vip_;
}
inline void MsgS2CClientInit::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
  // @@protoc_insertion_point(field_set:message.MsgS2CClientInit.vip)
}

// required string resource_path = 3;
inline bool MsgS2CClientInit::has_resource_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgS2CClientInit::set_has_resource_path() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgS2CClientInit::clear_has_resource_path() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgS2CClientInit::clear_resource_path() {
  resource_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_resource_path();
}
inline const ::std::string& MsgS2CClientInit::resource_path() const {
  // @@protoc_insertion_point(field_get:message.MsgS2CClientInit.resource_path)
  return resource_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgS2CClientInit::set_resource_path(const ::std::string& value) {
  set_has_resource_path();
  resource_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgS2CClientInit.resource_path)
}
inline void MsgS2CClientInit::set_resource_path(const char* value) {
  set_has_resource_path();
  resource_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgS2CClientInit.resource_path)
}
inline void MsgS2CClientInit::set_resource_path(const char* value, size_t size) {
  set_has_resource_path();
  resource_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgS2CClientInit.resource_path)
}
inline ::std::string* MsgS2CClientInit::mutable_resource_path() {
  set_has_resource_path();
  // @@protoc_insertion_point(field_mutable:message.MsgS2CClientInit.resource_path)
  return resource_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgS2CClientInit::release_resource_path() {
  clear_has_resource_path();
  return resource_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgS2CClientInit::set_allocated_resource_path(::std::string* resource_path) {
  if (resource_path != NULL) {
    set_has_resource_path();
  } else {
    clear_has_resource_path();
  }
  resource_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_path);
  // @@protoc_insertion_point(field_set_allocated:message.MsgS2CClientInit.resource_path)
}

// required string config_pic_path = 4;
inline bool MsgS2CClientInit::has_config_pic_path() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgS2CClientInit::set_has_config_pic_path() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgS2CClientInit::clear_has_config_pic_path() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgS2CClientInit::clear_config_pic_path() {
  config_pic_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_config_pic_path();
}
inline const ::std::string& MsgS2CClientInit::config_pic_path() const {
  // @@protoc_insertion_point(field_get:message.MsgS2CClientInit.config_pic_path)
  return config_pic_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgS2CClientInit::set_config_pic_path(const ::std::string& value) {
  set_has_config_pic_path();
  config_pic_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgS2CClientInit.config_pic_path)
}
inline void MsgS2CClientInit::set_config_pic_path(const char* value) {
  set_has_config_pic_path();
  config_pic_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgS2CClientInit.config_pic_path)
}
inline void MsgS2CClientInit::set_config_pic_path(const char* value, size_t size) {
  set_has_config_pic_path();
  config_pic_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgS2CClientInit.config_pic_path)
}
inline ::std::string* MsgS2CClientInit::mutable_config_pic_path() {
  set_has_config_pic_path();
  // @@protoc_insertion_point(field_mutable:message.MsgS2CClientInit.config_pic_path)
  return config_pic_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgS2CClientInit::release_config_pic_path() {
  clear_has_config_pic_path();
  return config_pic_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgS2CClientInit::set_allocated_config_pic_path(::std::string* config_pic_path) {
  if (config_pic_path != NULL) {
    set_has_config_pic_path();
  } else {
    clear_has_config_pic_path();
  }
  config_pic_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), config_pic_path);
  // @@protoc_insertion_point(field_set_allocated:message.MsgS2CClientInit.config_pic_path)
}

// required string config_video_path = 5;
inline bool MsgS2CClientInit::has_config_video_path() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgS2CClientInit::set_has_config_video_path() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgS2CClientInit::clear_has_config_video_path() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgS2CClientInit::clear_config_video_path() {
  config_video_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_config_video_path();
}
inline const ::std::string& MsgS2CClientInit::config_video_path() const {
  // @@protoc_insertion_point(field_get:message.MsgS2CClientInit.config_video_path)
  return config_video_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgS2CClientInit::set_config_video_path(const ::std::string& value) {
  set_has_config_video_path();
  config_video_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgS2CClientInit.config_video_path)
}
inline void MsgS2CClientInit::set_config_video_path(const char* value) {
  set_has_config_video_path();
  config_video_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgS2CClientInit.config_video_path)
}
inline void MsgS2CClientInit::set_config_video_path(const char* value, size_t size) {
  set_has_config_video_path();
  config_video_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgS2CClientInit.config_video_path)
}
inline ::std::string* MsgS2CClientInit::mutable_config_video_path() {
  set_has_config_video_path();
  // @@protoc_insertion_point(field_mutable:message.MsgS2CClientInit.config_video_path)
  return config_video_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgS2CClientInit::release_config_video_path() {
  clear_has_config_video_path();
  return config_video_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgS2CClientInit::set_allocated_config_video_path(::std::string* config_video_path) {
  if (config_video_path != NULL) {
    set_has_config_video_path();
  } else {
    clear_has_config_video_path();
  }
  config_video_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), config_video_path);
  // @@protoc_insertion_point(field_set_allocated:message.MsgS2CClientInit.config_video_path)
}

// repeated .message.MsgIntPair gird_theme = 6;
inline int MsgS2CClientInit::gird_theme_size() const {
  return gird_theme_.size();
}
inline void MsgS2CClientInit::clear_gird_theme() {
  gird_theme_.Clear();
}
inline const ::message::MsgIntPair& MsgS2CClientInit::gird_theme(int index) const {
  // @@protoc_insertion_point(field_get:message.MsgS2CClientInit.gird_theme)
  return gird_theme_.Get(index);
}
inline ::message::MsgIntPair* MsgS2CClientInit::mutable_gird_theme(int index) {
  // @@protoc_insertion_point(field_mutable:message.MsgS2CClientInit.gird_theme)
  return gird_theme_.Mutable(index);
}
inline ::message::MsgIntPair* MsgS2CClientInit::add_gird_theme() {
  // @@protoc_insertion_point(field_add:message.MsgS2CClientInit.gird_theme)
  return gird_theme_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::message::MsgIntPair >&
MsgS2CClientInit::gird_theme() const {
  // @@protoc_insertion_point(field_list:message.MsgS2CClientInit.gird_theme)
  return gird_theme_;
}
inline ::google::protobuf::RepeatedPtrField< ::message::MsgIntPair >*
MsgS2CClientInit::mutable_gird_theme() {
  // @@protoc_insertion_point(field_mutable_list:message.MsgS2CClientInit.gird_theme)
  return &gird_theme_;
}

// -------------------------------------------------------------------

// MsgC2SReqThemeInfo

// required int32 Theme_id = 1;
inline bool MsgC2SReqThemeInfo::has_theme_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgC2SReqThemeInfo::set_has_theme_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgC2SReqThemeInfo::clear_has_theme_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgC2SReqThemeInfo::clear_theme_id() {
  theme_id_ = 0;
  clear_has_theme_id();
}
inline ::google::protobuf::int32 MsgC2SReqThemeInfo::theme_id() const {
  // @@protoc_insertion_point(field_get:message.MsgC2SReqThemeInfo.Theme_id)
  return theme_id_;
}
inline void MsgC2SReqThemeInfo::set_theme_id(::google::protobuf::int32 value) {
  set_has_theme_id();
  theme_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgC2SReqThemeInfo.Theme_id)
}

// -------------------------------------------------------------------

// MsgS2CMovieThemeInfoACK

// required .message.MsgMovieTheme info = 1;
inline bool MsgS2CMovieThemeInfoACK::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgS2CMovieThemeInfoACK::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgS2CMovieThemeInfoACK::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgS2CMovieThemeInfoACK::clear_info() {
  if (info_ != NULL) info_->::message::MsgMovieTheme::Clear();
  clear_has_info();
}
inline const ::message::MsgMovieTheme& MsgS2CMovieThemeInfoACK::info() const {
  // @@protoc_insertion_point(field_get:message.MsgS2CMovieThemeInfoACK.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::message::MsgMovieTheme* MsgS2CMovieThemeInfoACK::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::message::MsgMovieTheme;
  }
  // @@protoc_insertion_point(field_mutable:message.MsgS2CMovieThemeInfoACK.info)
  return info_;
}
inline ::message::MsgMovieTheme* MsgS2CMovieThemeInfoACK::release_info() {
  clear_has_info();
  ::message::MsgMovieTheme* temp = info_;
  info_ = NULL;
  return temp;
}
inline void MsgS2CMovieThemeInfoACK::set_allocated_info(::message::MsgMovieTheme* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:message.MsgS2CMovieThemeInfoACK.info)
}

// -------------------------------------------------------------------

// MsgC2SReqMovieInfo

// required int32 movie_id = 1;
inline bool MsgC2SReqMovieInfo::has_movie_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgC2SReqMovieInfo::set_has_movie_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgC2SReqMovieInfo::clear_has_movie_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgC2SReqMovieInfo::clear_movie_id() {
  movie_id_ = 0;
  clear_has_movie_id();
}
inline ::google::protobuf::int32 MsgC2SReqMovieInfo::movie_id() const {
  // @@protoc_insertion_point(field_get:message.MsgC2SReqMovieInfo.movie_id)
  return movie_id_;
}
inline void MsgC2SReqMovieInfo::set_movie_id(::google::protobuf::int32 value) {
  set_has_movie_id();
  movie_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgC2SReqMovieInfo.movie_id)
}

// -------------------------------------------------------------------

// MsgS2CMovieInfoACK

// required .message.MsgMovie info = 1;
inline bool MsgS2CMovieInfoACK::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgS2CMovieInfoACK::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgS2CMovieInfoACK::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgS2CMovieInfoACK::clear_info() {
  if (info_ != NULL) info_->::message::MsgMovie::Clear();
  clear_has_info();
}
inline const ::message::MsgMovie& MsgS2CMovieInfoACK::info() const {
  // @@protoc_insertion_point(field_get:message.MsgS2CMovieInfoACK.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::message::MsgMovie* MsgS2CMovieInfoACK::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::message::MsgMovie;
  }
  // @@protoc_insertion_point(field_mutable:message.MsgS2CMovieInfoACK.info)
  return info_;
}
inline ::message::MsgMovie* MsgS2CMovieInfoACK::release_info() {
  clear_has_info();
  ::message::MsgMovie* temp = info_;
  info_ = NULL;
  return temp;
}
inline void MsgS2CMovieInfoACK::set_allocated_info(::message::MsgMovie* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:message.MsgS2CMovieInfoACK.info)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BodhiTV_2eproto__INCLUDED
