// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#ifndef PROTOBUF_common_2eproto__INCLUDED
#define PROTOBUF_common_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace message {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_common_2eproto();
void protobuf_AssignDesc_common_2eproto();
void protobuf_ShutdownFile_common_2eproto();

class MsgIntPair;
class MsgIntBoolPair;
class MsgWatchRecordInfo;
class MsgVideo;
class MsgMovieExternal;
class MsgMovie;
class MsgMovieThemeExternal;
class MsgMovieTheme;

enum VideoType {
  VideoType_Video = 0,
  VideoType_Movie = 1
};
bool VideoType_IsValid(int value);
const VideoType VideoType_MIN = VideoType_Video;
const VideoType VideoType_MAX = VideoType_Movie;
const int VideoType_ARRAYSIZE = VideoType_MAX + 1;

const ::google::protobuf::EnumDescriptor* VideoType_descriptor();
inline const ::std::string& VideoType_Name(VideoType value) {
  return ::google::protobuf::internal::NameOfEnum(
    VideoType_descriptor(), value);
}
inline bool VideoType_Parse(
    const ::std::string& name, VideoType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VideoType>(
    VideoType_descriptor(), name, value);
}
enum MovieType {
  MovieType_RecentlyPlay = 0,
  MovieType_MyFavourite = 1,
  MovieType_DerivativeShop = 2,
  MovieType_Festival = 3,
  MovieType_Rank = 4,
  MovieType_Feature = 5,
  MovieType_CartoonRecommendation = 6,
  MovieType_EarlyEducationRecommendation = 7,
  MovieType_New = 8
};
bool MovieType_IsValid(int value);
const MovieType MovieType_MIN = MovieType_RecentlyPlay;
const MovieType MovieType_MAX = MovieType_New;
const int MovieType_ARRAYSIZE = MovieType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MovieType_descriptor();
inline const ::std::string& MovieType_Name(MovieType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MovieType_descriptor(), value);
}
inline bool MovieType_Parse(
    const ::std::string& name, MovieType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MovieType>(
    MovieType_descriptor(), name, value);
}
// ===================================================================

class MsgIntPair : public ::google::protobuf::Message {
 public:
  MsgIntPair();
  virtual ~MsgIntPair();

  MsgIntPair(const MsgIntPair& from);

  inline MsgIntPair& operator=(const MsgIntPair& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgIntPair& default_instance();

  void Swap(MsgIntPair* other);

  // implements Message ----------------------------------------------

  inline MsgIntPair* New() const { return New(NULL); }

  MsgIntPair* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgIntPair& from);
  void MergeFrom(const MsgIntPair& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgIntPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 number_1 = 1;
  bool has_number_1() const;
  void clear_number_1();
  static const int kNumber1FieldNumber = 1;
  ::google::protobuf::int64 number_1() const;
  void set_number_1(::google::protobuf::int64 value);

  // required int64 number_2 = 2;
  bool has_number_2() const;
  void clear_number_2();
  static const int kNumber2FieldNumber = 2;
  ::google::protobuf::int64 number_2() const;
  void set_number_2(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:message.MsgIntPair)
 private:
  inline void set_has_number_1();
  inline void clear_has_number_1();
  inline void set_has_number_2();
  inline void clear_has_number_2();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 number_1_;
  ::google::protobuf::int64 number_2_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static MsgIntPair* default_instance_;
};
// -------------------------------------------------------------------

class MsgIntBoolPair : public ::google::protobuf::Message {
 public:
  MsgIntBoolPair();
  virtual ~MsgIntBoolPair();

  MsgIntBoolPair(const MsgIntBoolPair& from);

  inline MsgIntBoolPair& operator=(const MsgIntBoolPair& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgIntBoolPair& default_instance();

  void Swap(MsgIntBoolPair* other);

  // implements Message ----------------------------------------------

  inline MsgIntBoolPair* New() const { return New(NULL); }

  MsgIntBoolPair* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgIntBoolPair& from);
  void MergeFrom(const MsgIntBoolPair& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgIntBoolPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 number = 1;
  bool has_number() const;
  void clear_number();
  static const int kNumberFieldNumber = 1;
  ::google::protobuf::int32 number() const;
  void set_number(::google::protobuf::int32 value);

  // required bool valid = 2;
  bool has_valid() const;
  void clear_valid();
  static const int kValidFieldNumber = 2;
  bool valid() const;
  void set_valid(bool value);

  // @@protoc_insertion_point(class_scope:message.MsgIntBoolPair)
 private:
  inline void set_has_number();
  inline void clear_has_number();
  inline void set_has_valid();
  inline void clear_has_valid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 number_;
  bool valid_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static MsgIntBoolPair* default_instance_;
};
// -------------------------------------------------------------------

class MsgWatchRecordInfo : public ::google::protobuf::Message {
 public:
  MsgWatchRecordInfo();
  virtual ~MsgWatchRecordInfo();

  MsgWatchRecordInfo(const MsgWatchRecordInfo& from);

  inline MsgWatchRecordInfo& operator=(const MsgWatchRecordInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgWatchRecordInfo& default_instance();

  void Swap(MsgWatchRecordInfo* other);

  // implements Message ----------------------------------------------

  inline MsgWatchRecordInfo* New() const { return New(NULL); }

  MsgWatchRecordInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgWatchRecordInfo& from);
  void MergeFrom(const MsgWatchRecordInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgWatchRecordInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 movie_id = 1;
  bool has_movie_id() const;
  void clear_movie_id();
  static const int kMovieIdFieldNumber = 1;
  ::google::protobuf::int64 movie_id() const;
  void set_movie_id(::google::protobuf::int64 value);

  // required int64 video_id = 2;
  bool has_video_id() const;
  void clear_video_id();
  static const int kVideoIdFieldNumber = 2;
  ::google::protobuf::int64 video_id() const;
  void set_video_id(::google::protobuf::int64 value);

  // required int32 Progress = 3;
  bool has_progress() const;
  void clear_progress();
  static const int kProgressFieldNumber = 3;
  ::google::protobuf::int32 progress() const;
  void set_progress(::google::protobuf::int32 value);

  // required int64 time = 4;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 4;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:message.MsgWatchRecordInfo)
 private:
  inline void set_has_movie_id();
  inline void clear_has_movie_id();
  inline void set_has_video_id();
  inline void clear_has_video_id();
  inline void set_has_progress();
  inline void clear_has_progress();
  inline void set_has_time();
  inline void clear_has_time();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 movie_id_;
  ::google::protobuf::int64 video_id_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int32 progress_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static MsgWatchRecordInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgVideo : public ::google::protobuf::Message {
 public:
  MsgVideo();
  virtual ~MsgVideo();

  MsgVideo(const MsgVideo& from);

  inline MsgVideo& operator=(const MsgVideo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgVideo& default_instance();

  void Swap(MsgVideo* other);

  // implements Message ----------------------------------------------

  inline MsgVideo* New() const { return New(NULL); }

  MsgVideo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgVideo& from);
  void MergeFrom(const MsgVideo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgVideo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string path = 1;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // required string describe = 2;
  bool has_describe() const;
  void clear_describe();
  static const int kDescribeFieldNumber = 2;
  const ::std::string& describe() const;
  void set_describe(const ::std::string& value);
  void set_describe(const char* value);
  void set_describe(const char* value, size_t size);
  ::std::string* mutable_describe();
  ::std::string* release_describe();
  void set_allocated_describe(::std::string* describe);

  // required int32 rank = 3;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 3;
  ::google::protobuf::int32 rank() const;
  void set_rank(::google::protobuf::int32 value);

  // required int64 video_id = 4;
  bool has_video_id() const;
  void clear_video_id();
  static const int kVideoIdFieldNumber = 4;
  ::google::protobuf::int64 video_id() const;
  void set_video_id(::google::protobuf::int64 value);

  // required string name = 5;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 5;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:message.MsgVideo)
 private:
  inline void set_has_path();
  inline void clear_has_path();
  inline void set_has_describe();
  inline void clear_has_describe();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_video_id();
  inline void clear_has_video_id();
  inline void set_has_name();
  inline void clear_has_name();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr describe_;
  ::google::protobuf::int64 video_id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 rank_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static MsgVideo* default_instance_;
};
// -------------------------------------------------------------------

class MsgMovieExternal : public ::google::protobuf::Message {
 public:
  MsgMovieExternal();
  virtual ~MsgMovieExternal();

  MsgMovieExternal(const MsgMovieExternal& from);

  inline MsgMovieExternal& operator=(const MsgMovieExternal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMovieExternal& default_instance();

  void Swap(MsgMovieExternal* other);

  // implements Message ----------------------------------------------

  inline MsgMovieExternal* New() const { return New(NULL); }

  MsgMovieExternal* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgMovieExternal& from);
  void MergeFrom(const MsgMovieExternal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgMovieExternal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 movie_id = 1;
  bool has_movie_id() const;
  void clear_movie_id();
  static const int kMovieIdFieldNumber = 1;
  ::google::protobuf::int64 movie_id() const;
  void set_movie_id(::google::protobuf::int64 value);

  // required string describe = 2;
  bool has_describe() const;
  void clear_describe();
  static const int kDescribeFieldNumber = 2;
  const ::std::string& describe() const;
  void set_describe(const ::std::string& value);
  void set_describe(const char* value);
  void set_describe(const char* value, size_t size);
  ::std::string* mutable_describe();
  ::std::string* release_describe();
  void set_allocated_describe(::std::string* describe);

  // required .message.VideoType type = 3 [default = VideoType_Video];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::message::VideoType type() const;
  void set_type(::message::VideoType value);

  // required string name = 4;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:message.MsgMovieExternal)
 private:
  inline void set_has_movie_id();
  inline void clear_has_movie_id();
  inline void set_has_describe();
  inline void clear_has_describe();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_name();
  inline void clear_has_name();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 movie_id_;
  ::google::protobuf::internal::ArenaStringPtr describe_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  int type_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static MsgMovieExternal* default_instance_;
};
// -------------------------------------------------------------------

class MsgMovie : public ::google::protobuf::Message {
 public:
  MsgMovie();
  virtual ~MsgMovie();

  MsgMovie(const MsgMovie& from);

  inline MsgMovie& operator=(const MsgMovie& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMovie& default_instance();

  void Swap(MsgMovie* other);

  // implements Message ----------------------------------------------

  inline MsgMovie* New() const { return New(NULL); }

  MsgMovie* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgMovie& from);
  void MergeFrom(const MsgMovie& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgMovie* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .message.MsgMovieExternal external = 1;
  bool has_external() const;
  void clear_external();
  static const int kExternalFieldNumber = 1;
  const ::message::MsgMovieExternal& external() const;
  ::message::MsgMovieExternal* mutable_external();
  ::message::MsgMovieExternal* release_external();
  void set_allocated_external(::message::MsgMovieExternal* external);

  // repeated .message.MsgVideo videos = 2;
  int videos_size() const;
  void clear_videos();
  static const int kVideosFieldNumber = 2;
  const ::message::MsgVideo& videos(int index) const;
  ::message::MsgVideo* mutable_videos(int index);
  ::message::MsgVideo* add_videos();
  const ::google::protobuf::RepeatedPtrField< ::message::MsgVideo >&
      videos() const;
  ::google::protobuf::RepeatedPtrField< ::message::MsgVideo >*
      mutable_videos();

  // @@protoc_insertion_point(class_scope:message.MsgMovie)
 private:
  inline void set_has_external();
  inline void clear_has_external();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::message::MsgMovieExternal* external_;
  ::google::protobuf::RepeatedPtrField< ::message::MsgVideo > videos_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static MsgMovie* default_instance_;
};
// -------------------------------------------------------------------

class MsgMovieThemeExternal : public ::google::protobuf::Message {
 public:
  MsgMovieThemeExternal();
  virtual ~MsgMovieThemeExternal();

  MsgMovieThemeExternal(const MsgMovieThemeExternal& from);

  inline MsgMovieThemeExternal& operator=(const MsgMovieThemeExternal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMovieThemeExternal& default_instance();

  void Swap(MsgMovieThemeExternal* other);

  // implements Message ----------------------------------------------

  inline MsgMovieThemeExternal* New() const { return New(NULL); }

  MsgMovieThemeExternal* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgMovieThemeExternal& from);
  void MergeFrom(const MsgMovieThemeExternal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgMovieThemeExternal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required string describe = 2;
  bool has_describe() const;
  void clear_describe();
  static const int kDescribeFieldNumber = 2;
  const ::std::string& describe() const;
  void set_describe(const ::std::string& value);
  void set_describe(const char* value);
  void set_describe(const char* value, size_t size);
  ::std::string* mutable_describe();
  ::std::string* release_describe();
  void set_allocated_describe(::std::string* describe);

  // required .message.MovieType type = 3 [default = MovieType_MyFavourite];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::message::MovieType type() const;
  void set_type(::message::MovieType value);

  // required int64 id = 4;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 4;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:message.MsgMovieThemeExternal)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_describe();
  inline void clear_has_describe();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr describe_;
  ::google::protobuf::int64 id_;
  int type_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static MsgMovieThemeExternal* default_instance_;
};
// -------------------------------------------------------------------

class MsgMovieTheme : public ::google::protobuf::Message {
 public:
  MsgMovieTheme();
  virtual ~MsgMovieTheme();

  MsgMovieTheme(const MsgMovieTheme& from);

  inline MsgMovieTheme& operator=(const MsgMovieTheme& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMovieTheme& default_instance();

  void Swap(MsgMovieTheme* other);

  // implements Message ----------------------------------------------

  inline MsgMovieTheme* New() const { return New(NULL); }

  MsgMovieTheme* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgMovieTheme& from);
  void MergeFrom(const MsgMovieTheme& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgMovieTheme* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .message.MsgMovieThemeExternal theme_external = 1;
  bool has_theme_external() const;
  void clear_theme_external();
  static const int kThemeExternalFieldNumber = 1;
  const ::message::MsgMovieThemeExternal& theme_external() const;
  ::message::MsgMovieThemeExternal* mutable_theme_external();
  ::message::MsgMovieThemeExternal* release_theme_external();
  void set_allocated_theme_external(::message::MsgMovieThemeExternal* theme_external);

  // repeated .message.MsgMovieExternal movies_externals = 2;
  int movies_externals_size() const;
  void clear_movies_externals();
  static const int kMoviesExternalsFieldNumber = 2;
  const ::message::MsgMovieExternal& movies_externals(int index) const;
  ::message::MsgMovieExternal* mutable_movies_externals(int index);
  ::message::MsgMovieExternal* add_movies_externals();
  const ::google::protobuf::RepeatedPtrField< ::message::MsgMovieExternal >&
      movies_externals() const;
  ::google::protobuf::RepeatedPtrField< ::message::MsgMovieExternal >*
      mutable_movies_externals();

  // repeated .message.MsgIntPair movie_ratting = 3;
  int movie_ratting_size() const;
  void clear_movie_ratting();
  static const int kMovieRattingFieldNumber = 3;
  const ::message::MsgIntPair& movie_ratting(int index) const;
  ::message::MsgIntPair* mutable_movie_ratting(int index);
  ::message::MsgIntPair* add_movie_ratting();
  const ::google::protobuf::RepeatedPtrField< ::message::MsgIntPair >&
      movie_ratting() const;
  ::google::protobuf::RepeatedPtrField< ::message::MsgIntPair >*
      mutable_movie_ratting();

  // @@protoc_insertion_point(class_scope:message.MsgMovieTheme)
 private:
  inline void set_has_theme_external();
  inline void clear_has_theme_external();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::message::MsgMovieThemeExternal* theme_external_;
  ::google::protobuf::RepeatedPtrField< ::message::MsgMovieExternal > movies_externals_;
  ::google::protobuf::RepeatedPtrField< ::message::MsgIntPair > movie_ratting_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static MsgMovieTheme* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgIntPair

// required int64 number_1 = 1;
inline bool MsgIntPair::has_number_1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgIntPair::set_has_number_1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgIntPair::clear_has_number_1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgIntPair::clear_number_1() {
  number_1_ = GOOGLE_LONGLONG(0);
  clear_has_number_1();
}
inline ::google::protobuf::int64 MsgIntPair::number_1() const {
  // @@protoc_insertion_point(field_get:message.MsgIntPair.number_1)
  return number_1_;
}
inline void MsgIntPair::set_number_1(::google::protobuf::int64 value) {
  set_has_number_1();
  number_1_ = value;
  // @@protoc_insertion_point(field_set:message.MsgIntPair.number_1)
}

// required int64 number_2 = 2;
inline bool MsgIntPair::has_number_2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgIntPair::set_has_number_2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgIntPair::clear_has_number_2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgIntPair::clear_number_2() {
  number_2_ = GOOGLE_LONGLONG(0);
  clear_has_number_2();
}
inline ::google::protobuf::int64 MsgIntPair::number_2() const {
  // @@protoc_insertion_point(field_get:message.MsgIntPair.number_2)
  return number_2_;
}
inline void MsgIntPair::set_number_2(::google::protobuf::int64 value) {
  set_has_number_2();
  number_2_ = value;
  // @@protoc_insertion_point(field_set:message.MsgIntPair.number_2)
}

// -------------------------------------------------------------------

// MsgIntBoolPair

// required int32 number = 1;
inline bool MsgIntBoolPair::has_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgIntBoolPair::set_has_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgIntBoolPair::clear_has_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgIntBoolPair::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 MsgIntBoolPair::number() const {
  // @@protoc_insertion_point(field_get:message.MsgIntBoolPair.number)
  return number_;
}
inline void MsgIntBoolPair::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
  // @@protoc_insertion_point(field_set:message.MsgIntBoolPair.number)
}

// required bool valid = 2;
inline bool MsgIntBoolPair::has_valid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgIntBoolPair::set_has_valid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgIntBoolPair::clear_has_valid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgIntBoolPair::clear_valid() {
  valid_ = false;
  clear_has_valid();
}
inline bool MsgIntBoolPair::valid() const {
  // @@protoc_insertion_point(field_get:message.MsgIntBoolPair.valid)
  return valid_;
}
inline void MsgIntBoolPair::set_valid(bool value) {
  set_has_valid();
  valid_ = value;
  // @@protoc_insertion_point(field_set:message.MsgIntBoolPair.valid)
}

// -------------------------------------------------------------------

// MsgWatchRecordInfo

// required int64 movie_id = 1;
inline bool MsgWatchRecordInfo::has_movie_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgWatchRecordInfo::set_has_movie_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgWatchRecordInfo::clear_has_movie_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgWatchRecordInfo::clear_movie_id() {
  movie_id_ = GOOGLE_LONGLONG(0);
  clear_has_movie_id();
}
inline ::google::protobuf::int64 MsgWatchRecordInfo::movie_id() const {
  // @@protoc_insertion_point(field_get:message.MsgWatchRecordInfo.movie_id)
  return movie_id_;
}
inline void MsgWatchRecordInfo::set_movie_id(::google::protobuf::int64 value) {
  set_has_movie_id();
  movie_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgWatchRecordInfo.movie_id)
}

// required int64 video_id = 2;
inline bool MsgWatchRecordInfo::has_video_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgWatchRecordInfo::set_has_video_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgWatchRecordInfo::clear_has_video_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgWatchRecordInfo::clear_video_id() {
  video_id_ = GOOGLE_LONGLONG(0);
  clear_has_video_id();
}
inline ::google::protobuf::int64 MsgWatchRecordInfo::video_id() const {
  // @@protoc_insertion_point(field_get:message.MsgWatchRecordInfo.video_id)
  return video_id_;
}
inline void MsgWatchRecordInfo::set_video_id(::google::protobuf::int64 value) {
  set_has_video_id();
  video_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgWatchRecordInfo.video_id)
}

// required int32 Progress = 3;
inline bool MsgWatchRecordInfo::has_progress() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgWatchRecordInfo::set_has_progress() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgWatchRecordInfo::clear_has_progress() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgWatchRecordInfo::clear_progress() {
  progress_ = 0;
  clear_has_progress();
}
inline ::google::protobuf::int32 MsgWatchRecordInfo::progress() const {
  // @@protoc_insertion_point(field_get:message.MsgWatchRecordInfo.Progress)
  return progress_;
}
inline void MsgWatchRecordInfo::set_progress(::google::protobuf::int32 value) {
  set_has_progress();
  progress_ = value;
  // @@protoc_insertion_point(field_set:message.MsgWatchRecordInfo.Progress)
}

// required int64 time = 4;
inline bool MsgWatchRecordInfo::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgWatchRecordInfo::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgWatchRecordInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgWatchRecordInfo::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 MsgWatchRecordInfo::time() const {
  // @@protoc_insertion_point(field_get:message.MsgWatchRecordInfo.time)
  return time_;
}
inline void MsgWatchRecordInfo::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:message.MsgWatchRecordInfo.time)
}

// -------------------------------------------------------------------

// MsgVideo

// required string path = 1;
inline bool MsgVideo::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgVideo::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgVideo::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgVideo::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
inline const ::std::string& MsgVideo::path() const {
  // @@protoc_insertion_point(field_get:message.MsgVideo.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgVideo::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgVideo.path)
}
inline void MsgVideo::set_path(const char* value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgVideo.path)
}
inline void MsgVideo::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgVideo.path)
}
inline ::std::string* MsgVideo::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:message.MsgVideo.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgVideo::release_path() {
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgVideo::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:message.MsgVideo.path)
}

// required string describe = 2;
inline bool MsgVideo::has_describe() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgVideo::set_has_describe() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgVideo::clear_has_describe() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgVideo::clear_describe() {
  describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_describe();
}
inline const ::std::string& MsgVideo::describe() const {
  // @@protoc_insertion_point(field_get:message.MsgVideo.describe)
  return describe_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgVideo::set_describe(const ::std::string& value) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgVideo.describe)
}
inline void MsgVideo::set_describe(const char* value) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgVideo.describe)
}
inline void MsgVideo::set_describe(const char* value, size_t size) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgVideo.describe)
}
inline ::std::string* MsgVideo::mutable_describe() {
  set_has_describe();
  // @@protoc_insertion_point(field_mutable:message.MsgVideo.describe)
  return describe_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgVideo::release_describe() {
  clear_has_describe();
  return describe_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgVideo::set_allocated_describe(::std::string* describe) {
  if (describe != NULL) {
    set_has_describe();
  } else {
    clear_has_describe();
  }
  describe_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), describe);
  // @@protoc_insertion_point(field_set_allocated:message.MsgVideo.describe)
}

// required int32 rank = 3;
inline bool MsgVideo::has_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgVideo::set_has_rank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgVideo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgVideo::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 MsgVideo::rank() const {
  // @@protoc_insertion_point(field_get:message.MsgVideo.rank)
  return rank_;
}
inline void MsgVideo::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:message.MsgVideo.rank)
}

// required int64 video_id = 4;
inline bool MsgVideo::has_video_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgVideo::set_has_video_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgVideo::clear_has_video_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgVideo::clear_video_id() {
  video_id_ = GOOGLE_LONGLONG(0);
  clear_has_video_id();
}
inline ::google::protobuf::int64 MsgVideo::video_id() const {
  // @@protoc_insertion_point(field_get:message.MsgVideo.video_id)
  return video_id_;
}
inline void MsgVideo::set_video_id(::google::protobuf::int64 value) {
  set_has_video_id();
  video_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgVideo.video_id)
}

// required string name = 5;
inline bool MsgVideo::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgVideo::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgVideo::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgVideo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& MsgVideo::name() const {
  // @@protoc_insertion_point(field_get:message.MsgVideo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgVideo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgVideo.name)
}
inline void MsgVideo::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgVideo.name)
}
inline void MsgVideo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgVideo.name)
}
inline ::std::string* MsgVideo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:message.MsgVideo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgVideo::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgVideo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:message.MsgVideo.name)
}

// -------------------------------------------------------------------

// MsgMovieExternal

// required int64 movie_id = 1;
inline bool MsgMovieExternal::has_movie_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgMovieExternal::set_has_movie_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgMovieExternal::clear_has_movie_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgMovieExternal::clear_movie_id() {
  movie_id_ = GOOGLE_LONGLONG(0);
  clear_has_movie_id();
}
inline ::google::protobuf::int64 MsgMovieExternal::movie_id() const {
  // @@protoc_insertion_point(field_get:message.MsgMovieExternal.movie_id)
  return movie_id_;
}
inline void MsgMovieExternal::set_movie_id(::google::protobuf::int64 value) {
  set_has_movie_id();
  movie_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgMovieExternal.movie_id)
}

// required string describe = 2;
inline bool MsgMovieExternal::has_describe() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgMovieExternal::set_has_describe() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgMovieExternal::clear_has_describe() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgMovieExternal::clear_describe() {
  describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_describe();
}
inline const ::std::string& MsgMovieExternal::describe() const {
  // @@protoc_insertion_point(field_get:message.MsgMovieExternal.describe)
  return describe_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgMovieExternal::set_describe(const ::std::string& value) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgMovieExternal.describe)
}
inline void MsgMovieExternal::set_describe(const char* value) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgMovieExternal.describe)
}
inline void MsgMovieExternal::set_describe(const char* value, size_t size) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgMovieExternal.describe)
}
inline ::std::string* MsgMovieExternal::mutable_describe() {
  set_has_describe();
  // @@protoc_insertion_point(field_mutable:message.MsgMovieExternal.describe)
  return describe_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgMovieExternal::release_describe() {
  clear_has_describe();
  return describe_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgMovieExternal::set_allocated_describe(::std::string* describe) {
  if (describe != NULL) {
    set_has_describe();
  } else {
    clear_has_describe();
  }
  describe_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), describe);
  // @@protoc_insertion_point(field_set_allocated:message.MsgMovieExternal.describe)
}

// required .message.VideoType type = 3 [default = VideoType_Video];
inline bool MsgMovieExternal::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgMovieExternal::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgMovieExternal::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgMovieExternal::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::message::VideoType MsgMovieExternal::type() const {
  // @@protoc_insertion_point(field_get:message.MsgMovieExternal.type)
  return static_cast< ::message::VideoType >(type_);
}
inline void MsgMovieExternal::set_type(::message::VideoType value) {
  assert(::message::VideoType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:message.MsgMovieExternal.type)
}

// required string name = 4;
inline bool MsgMovieExternal::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgMovieExternal::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgMovieExternal::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgMovieExternal::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& MsgMovieExternal::name() const {
  // @@protoc_insertion_point(field_get:message.MsgMovieExternal.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgMovieExternal::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgMovieExternal.name)
}
inline void MsgMovieExternal::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgMovieExternal.name)
}
inline void MsgMovieExternal::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgMovieExternal.name)
}
inline ::std::string* MsgMovieExternal::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:message.MsgMovieExternal.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgMovieExternal::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgMovieExternal::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:message.MsgMovieExternal.name)
}

// -------------------------------------------------------------------

// MsgMovie

// required .message.MsgMovieExternal external = 1;
inline bool MsgMovie::has_external() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgMovie::set_has_external() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgMovie::clear_has_external() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgMovie::clear_external() {
  if (external_ != NULL) external_->::message::MsgMovieExternal::Clear();
  clear_has_external();
}
inline const ::message::MsgMovieExternal& MsgMovie::external() const {
  // @@protoc_insertion_point(field_get:message.MsgMovie.external)
  return external_ != NULL ? *external_ : *default_instance_->external_;
}
inline ::message::MsgMovieExternal* MsgMovie::mutable_external() {
  set_has_external();
  if (external_ == NULL) {
    external_ = new ::message::MsgMovieExternal;
  }
  // @@protoc_insertion_point(field_mutable:message.MsgMovie.external)
  return external_;
}
inline ::message::MsgMovieExternal* MsgMovie::release_external() {
  clear_has_external();
  ::message::MsgMovieExternal* temp = external_;
  external_ = NULL;
  return temp;
}
inline void MsgMovie::set_allocated_external(::message::MsgMovieExternal* external) {
  delete external_;
  external_ = external;
  if (external) {
    set_has_external();
  } else {
    clear_has_external();
  }
  // @@protoc_insertion_point(field_set_allocated:message.MsgMovie.external)
}

// repeated .message.MsgVideo videos = 2;
inline int MsgMovie::videos_size() const {
  return videos_.size();
}
inline void MsgMovie::clear_videos() {
  videos_.Clear();
}
inline const ::message::MsgVideo& MsgMovie::videos(int index) const {
  // @@protoc_insertion_point(field_get:message.MsgMovie.videos)
  return videos_.Get(index);
}
inline ::message::MsgVideo* MsgMovie::mutable_videos(int index) {
  // @@protoc_insertion_point(field_mutable:message.MsgMovie.videos)
  return videos_.Mutable(index);
}
inline ::message::MsgVideo* MsgMovie::add_videos() {
  // @@protoc_insertion_point(field_add:message.MsgMovie.videos)
  return videos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::message::MsgVideo >&
MsgMovie::videos() const {
  // @@protoc_insertion_point(field_list:message.MsgMovie.videos)
  return videos_;
}
inline ::google::protobuf::RepeatedPtrField< ::message::MsgVideo >*
MsgMovie::mutable_videos() {
  // @@protoc_insertion_point(field_mutable_list:message.MsgMovie.videos)
  return &videos_;
}

// -------------------------------------------------------------------

// MsgMovieThemeExternal

// required string name = 1;
inline bool MsgMovieThemeExternal::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgMovieThemeExternal::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgMovieThemeExternal::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgMovieThemeExternal::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& MsgMovieThemeExternal::name() const {
  // @@protoc_insertion_point(field_get:message.MsgMovieThemeExternal.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgMovieThemeExternal::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgMovieThemeExternal.name)
}
inline void MsgMovieThemeExternal::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgMovieThemeExternal.name)
}
inline void MsgMovieThemeExternal::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgMovieThemeExternal.name)
}
inline ::std::string* MsgMovieThemeExternal::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:message.MsgMovieThemeExternal.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgMovieThemeExternal::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgMovieThemeExternal::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:message.MsgMovieThemeExternal.name)
}

// required string describe = 2;
inline bool MsgMovieThemeExternal::has_describe() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgMovieThemeExternal::set_has_describe() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgMovieThemeExternal::clear_has_describe() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgMovieThemeExternal::clear_describe() {
  describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_describe();
}
inline const ::std::string& MsgMovieThemeExternal::describe() const {
  // @@protoc_insertion_point(field_get:message.MsgMovieThemeExternal.describe)
  return describe_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgMovieThemeExternal::set_describe(const ::std::string& value) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgMovieThemeExternal.describe)
}
inline void MsgMovieThemeExternal::set_describe(const char* value) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgMovieThemeExternal.describe)
}
inline void MsgMovieThemeExternal::set_describe(const char* value, size_t size) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgMovieThemeExternal.describe)
}
inline ::std::string* MsgMovieThemeExternal::mutable_describe() {
  set_has_describe();
  // @@protoc_insertion_point(field_mutable:message.MsgMovieThemeExternal.describe)
  return describe_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgMovieThemeExternal::release_describe() {
  clear_has_describe();
  return describe_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgMovieThemeExternal::set_allocated_describe(::std::string* describe) {
  if (describe != NULL) {
    set_has_describe();
  } else {
    clear_has_describe();
  }
  describe_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), describe);
  // @@protoc_insertion_point(field_set_allocated:message.MsgMovieThemeExternal.describe)
}

// required .message.MovieType type = 3 [default = MovieType_MyFavourite];
inline bool MsgMovieThemeExternal::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgMovieThemeExternal::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgMovieThemeExternal::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgMovieThemeExternal::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::message::MovieType MsgMovieThemeExternal::type() const {
  // @@protoc_insertion_point(field_get:message.MsgMovieThemeExternal.type)
  return static_cast< ::message::MovieType >(type_);
}
inline void MsgMovieThemeExternal::set_type(::message::MovieType value) {
  assert(::message::MovieType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:message.MsgMovieThemeExternal.type)
}

// required int64 id = 4;
inline bool MsgMovieThemeExternal::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgMovieThemeExternal::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgMovieThemeExternal::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgMovieThemeExternal::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 MsgMovieThemeExternal::id() const {
  // @@protoc_insertion_point(field_get:message.MsgMovieThemeExternal.id)
  return id_;
}
inline void MsgMovieThemeExternal::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgMovieThemeExternal.id)
}

// -------------------------------------------------------------------

// MsgMovieTheme

// required .message.MsgMovieThemeExternal theme_external = 1;
inline bool MsgMovieTheme::has_theme_external() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgMovieTheme::set_has_theme_external() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgMovieTheme::clear_has_theme_external() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgMovieTheme::clear_theme_external() {
  if (theme_external_ != NULL) theme_external_->::message::MsgMovieThemeExternal::Clear();
  clear_has_theme_external();
}
inline const ::message::MsgMovieThemeExternal& MsgMovieTheme::theme_external() const {
  // @@protoc_insertion_point(field_get:message.MsgMovieTheme.theme_external)
  return theme_external_ != NULL ? *theme_external_ : *default_instance_->theme_external_;
}
inline ::message::MsgMovieThemeExternal* MsgMovieTheme::mutable_theme_external() {
  set_has_theme_external();
  if (theme_external_ == NULL) {
    theme_external_ = new ::message::MsgMovieThemeExternal;
  }
  // @@protoc_insertion_point(field_mutable:message.MsgMovieTheme.theme_external)
  return theme_external_;
}
inline ::message::MsgMovieThemeExternal* MsgMovieTheme::release_theme_external() {
  clear_has_theme_external();
  ::message::MsgMovieThemeExternal* temp = theme_external_;
  theme_external_ = NULL;
  return temp;
}
inline void MsgMovieTheme::set_allocated_theme_external(::message::MsgMovieThemeExternal* theme_external) {
  delete theme_external_;
  theme_external_ = theme_external;
  if (theme_external) {
    set_has_theme_external();
  } else {
    clear_has_theme_external();
  }
  // @@protoc_insertion_point(field_set_allocated:message.MsgMovieTheme.theme_external)
}

// repeated .message.MsgMovieExternal movies_externals = 2;
inline int MsgMovieTheme::movies_externals_size() const {
  return movies_externals_.size();
}
inline void MsgMovieTheme::clear_movies_externals() {
  movies_externals_.Clear();
}
inline const ::message::MsgMovieExternal& MsgMovieTheme::movies_externals(int index) const {
  // @@protoc_insertion_point(field_get:message.MsgMovieTheme.movies_externals)
  return movies_externals_.Get(index);
}
inline ::message::MsgMovieExternal* MsgMovieTheme::mutable_movies_externals(int index) {
  // @@protoc_insertion_point(field_mutable:message.MsgMovieTheme.movies_externals)
  return movies_externals_.Mutable(index);
}
inline ::message::MsgMovieExternal* MsgMovieTheme::add_movies_externals() {
  // @@protoc_insertion_point(field_add:message.MsgMovieTheme.movies_externals)
  return movies_externals_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::message::MsgMovieExternal >&
MsgMovieTheme::movies_externals() const {
  // @@protoc_insertion_point(field_list:message.MsgMovieTheme.movies_externals)
  return movies_externals_;
}
inline ::google::protobuf::RepeatedPtrField< ::message::MsgMovieExternal >*
MsgMovieTheme::mutable_movies_externals() {
  // @@protoc_insertion_point(field_mutable_list:message.MsgMovieTheme.movies_externals)
  return &movies_externals_;
}

// repeated .message.MsgIntPair movie_ratting = 3;
inline int MsgMovieTheme::movie_ratting_size() const {
  return movie_ratting_.size();
}
inline void MsgMovieTheme::clear_movie_ratting() {
  movie_ratting_.Clear();
}
inline const ::message::MsgIntPair& MsgMovieTheme::movie_ratting(int index) const {
  // @@protoc_insertion_point(field_get:message.MsgMovieTheme.movie_ratting)
  return movie_ratting_.Get(index);
}
inline ::message::MsgIntPair* MsgMovieTheme::mutable_movie_ratting(int index) {
  // @@protoc_insertion_point(field_mutable:message.MsgMovieTheme.movie_ratting)
  return movie_ratting_.Mutable(index);
}
inline ::message::MsgIntPair* MsgMovieTheme::add_movie_ratting() {
  // @@protoc_insertion_point(field_add:message.MsgMovieTheme.movie_ratting)
  return movie_ratting_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::message::MsgIntPair >&
MsgMovieTheme::movie_ratting() const {
  // @@protoc_insertion_point(field_list:message.MsgMovieTheme.movie_ratting)
  return movie_ratting_;
}
inline ::google::protobuf::RepeatedPtrField< ::message::MsgIntPair >*
MsgMovieTheme::mutable_movie_ratting() {
  // @@protoc_insertion_point(field_mutable_list:message.MsgMovieTheme.movie_ratting)
  return &movie_ratting_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace message

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::message::VideoType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::message::VideoType>() {
  return ::message::VideoType_descriptor();
}
template <> struct is_proto_enum< ::message::MovieType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::message::MovieType>() {
  return ::message::MovieType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_common_2eproto__INCLUDED
